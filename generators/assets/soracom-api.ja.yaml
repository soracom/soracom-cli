openapi: 3.0.0
info:
  description: SORACOM API v1
  title: SORACOM API
  version: 20240905-064448
servers:
- description: Japan coverage production API
  url: https://api.soracom.io/v1
- description: Global coverage production API
  url: https://g.api.soracom.io/v1
paths:
  /audit_logs/api:
    get:
      description: SORACOM API 呼び出しの監査ログを新しいものから順に取得する
      operationId: getApiAuditLogs
      parameters:
      - description: 'ログ取得のフィルターに用いる API 種別 (例: `/v1/auth`)'
        in: query
        name: api_kind
        required: false
        schema:
          type: string
      - description: ログ取得対象の期間の始まり (unixtime milliseconds)
        in: query
        name: from_epoch_ms
        required: false
        schema:
          type: integer
      - description: ログ取得対象の期間の終わり (unixtime milliseconds)
        in: query
        name: to_epoch_ms
        required: false
        schema:
          type: integer
      - description: 取得するログエントリ数の上限 (1 〜 1000)
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ (`requestedTimeEpochMs`)。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - apiKind: /v1/bills
                operatorId: OPXXXXXXXXXX
                remoteIpAddress: xxx.xxx.xxx.xxx
                requestPath: /v1/bills
                requestedTimeEpocMs: 1234567890123
                statusCode: 200
                userName: SORACOMAPI
              schema:
                items:
                  $ref: '#/components/schemas/APIAuditLogEntry'
                type: array
          description: SORACOM API 呼び出し監査ログのエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: SORACOM API 呼び出しの監査ログを取得する
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs api get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /audit_logs/napter:
    get:
      description: SORACOM Napter の監査ログを新しいものから順に取得する
      operationId: getNapterAuditLogs
      parameters:
      - description: ログ取得対象のリソースのタイプ
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          type: string
      - description: ログ取得対象のリソースの ID
        in: query
        name: resource_id
        required: false
        schema:
          type: string
      - description: ログ取得対象の期間の始まり (unixtime milliseconds)
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: ログ取得対象の期間の終わり (unixtime milliseconds)
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するログエントリ数の上限 (1 〜 1000)
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - connectionId: 12345678-abcd-1234-abcd-123456789010
                createdAt: 1234567890123
                direction:
                  destinationIPAddress: xxx.xxx.xxx.xxx
                  destinationPort: 22
                  sourceIPAddress: xxx.xxx.xxx.xxx
                  sourcePort: 51720
                imsi: "123456789012345"
                operatorId: OPXXXXXXXXXX
                tls: false
                type: CLOSED
              - connectionId: 12345678-abcd-1234-abcd-123456789011
                createdAt: 1234567890123
                direction:
                  destinationIPAddress: xxx.xxx.xxx.xxx
                  destinationPort: 22
                  sourceIPAddress: xxx.xxx.xxx.xxx
                  sourcePort: 51720
                imsi: "234567890123456"
                operatorId: OPXXXXXXXXXX
                tls: false
                type: EXPIRED
              schema:
                items:
                  $ref: '#/components/schemas/NapterAuditLogEntry'
                type: array
          description: Napter 監査ログのエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Napter の監査ログを取得する
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs napter get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /auth:
    post:
      description: |
        API アクセスの認証を行います。以下の情報をリクエストに含めてください。

        - ルートユーザーで認証する場合: email と password
        - ルートユーザーまたは SAM ユーザーの認証キーで認証する場合: authKeyId と authKey
        - SAM ユーザー認証の場合: operatorId, userName, password

        認証が成功した場合は、API キーと API トークンが返されます。以降の認証が必要なリクエスト時にはこの API キーと API トークンをヘッダーに付与してリクエストを行ってください。
      operationId: auth
      requestBody:
        content:
          application/json:
            examples:
              To perform authentication by a SAM user:
                value:
                  operatorId: OPXXXXXXXXXX
                  password: p@$$w0rd
                  userName: SORACOMAPI
              To perform authentication by a root account:
                value:
                  email: soracomapi@example.com
                  password: p@$$w0rd
              To perform authentication by an AuthKeyId and AuthKey:
                value:
                  authKey: secret-abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
                  authKeyId: keyId-abcde12345fghij67890klmno12345pq
            schema:
              $ref: '#/components/schemas/AuthRequest'
        description: 認証リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: 認証に成功しました。
        "401":
          description: 認証に失敗しました。
      summary: API アクセスの認証を行い、API キーと API トークンを発行する
      tags:
      - Auth
      x-soracom-cli:
      - auth
  /auth/logout:
    post:
      description: この API を呼び出すときに指定された API キーと API トークンを無効化します。無効化したあとは、有効期間に関わらず
        API キーと API トークンを用いて SORACOM API を呼び出すことはできません。この API は、権限設定に関わらず呼び出すことができます。
      operationId: logout
      responses:
        "204":
          description: API キーと API トークンの無効化に成功しました。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM API にアクセスするための API キーと API トークンを無効化する
      tags:
      - Auth
      x-soracom-cli:
      - logout
  /auth/password_reset_token/issue:
    post:
      description: パスワードをリセットするためのワンタイムトークンを生成して、オペレーターのメールアドレスに送付します。メールに記載されているトークンを取得し、/v1/auth/password_reset_token/verify
        API を呼び出して新しいパスワードを設定します。
      operationId: issuePasswordResetToken
      requestBody:
        content:
          application/json:
            example:
              email: soracomapi@example.com
            schema:
              $ref: '#/components/schemas/IssuePasswordResetTokenRequest'
        description: email address
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: メールアドレスが正しくありません。
      summary: パスワードリセット用のトークンを発行する
      tags:
      - Auth
      x-soracom-cli:
      - auth issue-password-reset-token
  /auth/password_reset_token/verify:
    post:
      description: パスワードリセット用のトークンを検証し、検証に成功した場合オペレーターのパスワードを更新します。
      operationId: verifyPasswordResetToken
      requestBody:
        content:
          application/json:
            example:
              password: p@$$w0rd
              token: abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
            schema:
              $ref: '#/components/schemas/VerifyPasswordResetTokenRequest'
        description: token, password
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なトークンが指定されました。
        "404":
          description: トークンの有効期限が切れています。
      summary: パスワードリセット用のトークンを検証し、パスワードを更新する
      tags:
      - Auth
      x-soracom-cli:
      - auth verify-password-reset-token
  /auth/switch_user:
    post:
      description: 元のユーザーの API キーと API トークンを利用して、この API を呼び出し、スイッチ先のユーザーの API キーと
        API トークンを発行します。あらかじめスイッチ先のユーザーの信頼ポリシーに、元のユーザーを登録してください。信頼ポリシーの更新については、[User:updateUserTrustPolicy](#/User/updateUserTrustPolicy)
        を参照してください。
      operationId: switchUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchUserRequest'
        description: スイッチ先のユーザーと、発行する API トークンの有効期間を指定します。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: 認証に成功しました。
        "400":
          description: 許可されていません。
      security:
      - api_key: []
        api_token: []
      summary: ほかのユーザーとして SORACOM API を呼び出すための API キーと API トークンを発行する
      tags:
      - Auth
      x-soracom-cli:
      - auth switch-user
  /bills:
    get:
      description: |
        過去の確定した利用料金を月ごとに一括で取得します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: getBillingHistory
      responses:
        "200":
          content:
            application/json:
              example:
                billList:
                - amount: 28734
                  paymentStatus: paid
                  paymentTransactionId: 12345678901234567_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  state: closed
                  yearMonth: "202208"
                - amount: 27075
                  paymentStatus: paid
                  paymentTransactionId: 12345678901234567_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  state: closed
                  yearMonth: "202207"
              schema:
                $ref: '#/components/schemas/GetBillingHistoryResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 過去の確定した利用料金を月ごとに一括で取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills list
  /bills/{yyyyMM}:
    get:
      description: |
        指定した月の確定した利用料金を取得します。今月 (利用料金が未確定の月) を指定した場合は、速報値を取得します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: getBilling
      parameters:
      - description: 対象年月
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                amount: 28734
                currency: JPY
                paymentStatus: paid
                paymentTransactionId: 12345678901234567_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                state: closed
                yearMonth: "202208"
              schema:
                $ref: '#/components/schemas/MonthlyBill'
          description: OK.
        "404":
          description: |
            - 指定した月の利用料金が確定していません。
            - 指定した月の利用料金がありません。
      security:
      - api_key: []
        api_token: []
      summary: 過去の確定した利用料金を取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills get
  /bills/{yyyyMM}/daily:
    get:
      description: |
        指定した月の、日ごとの利用料金を取得します。また、月額で課金される利用料金は取得できません。今月 (利用料金が未確定の月) を指定した場合は、速報値が返されます。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: getBillingPerDay
      parameters:
      - description: 対象年月
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                billList:
                - amount: 285
                  currency: JPY
                  date: "20220902"
                - amount: 580
                  currency: JPY
                  date: "20220901"
              schema:
                $ref: '#/components/schemas/DailyBillResponse'
          description: OK.
        "404":
          description: 利用料金が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 日ごとの利用料金を取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills get-daily
  /bills/{yyyyMM}/export:
    post:
      description: |
        過去の [課金詳細情報 CSV](/ja-jp/guides/accounting/check-usage/billing-csv/) を専用ストレージにエクスポートして、ダウンロードするための URL を発行します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: exportBilling
      parameters:
      - description: 対象年月
        in: path
        name: yyyyMM
        required: true
        schema:
          type: string
      - description: |
          課金詳細情報 CSV をダウンロードするための URL を取得する方法を指定します。

          - `async`: SORACOM プラットフォームで URL が発行されるのを待たずに、`exportedFieldId` を取得します。この `exportedFieldId` を [Files:getExportedFile API](#/Files/getExportedFile) で指定すると、URL を取得できます。課金詳細情報 CSV のファイルサイズが大きい場合は、`async` を利用してください。
          - `sync` (デフォルト): SORACOM プラットフォームで URL が発行されるのを待ちます。ただし、課金詳細情報 CSV のファイルサイズが大きい場合など、タイムアウトして URL を取得できないことがあります。タイムアウトする場合は、`async` を指定してください。
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) export_mode=async:
                  value:
                    exportedFileId: fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    exportedFilePath: //files/exported/fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                (2) export_mode=sync:
                  value:
                    url: https://soracom-xxxxxxxx-....
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
        "404":
          description: 利用料金が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 過去の課金詳細情報 CSV を専用ストレージにエクスポートする
      tags:
      - Billing
      x-soracom-cli:
      - bills export
  /bills/latest:
    get:
      description: 今月 (利用料金が未確定の月) の利用料金の速報値を取得します。
      operationId: getLatestBilling
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLatestBill'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: 今月の利用料金を取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills get-latest
  /bills/latest/export:
    post:
      description: 今月 (利用料金が未確定の月) の [課金詳細情報 CSV](/ja-jp/guides/accounting/check-usage/billing-csv/)
        を専用ストレージにエクスポートして、ダウンロードするための URL を発行します。利用料金は翌月の第 2 営業日後を目途に確定されます。この API
        を使用してエクスポートされた課金詳細情報 CSV には、速報値が出力されます。
      operationId: exportLatestBilling
      parameters:
      - description: |
          課金詳細情報 CSV をダウンロードするための URL を取得する方法を指定します。

          - `async`: SORACOM プラットフォームで URL が発行されるのを待たずに、`exportedFieldId` を取得します。この `exportedFieldId` を [Files:getExportedFile API](#/Files/getExportedFile) で指定すると、URL を取得できます。課金詳細情報 CSV のファイルサイズが大きい場合は、`async` を利用してください。
          - `sync` (デフォルト): SORACOM プラットフォームで URL が発行されるのを待ちます。ただし、課金詳細情報 CSV のファイルサイズが大きい場合など、タイムアウトして URL を取得できないことがあります。タイムアウトする場合は、`async` を指定してください。
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) export_mode=async:
                  value:
                    exportedFileId: fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    exportedFilePath: //files/exported/fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                (2) export_mode=sync:
                  value:
                    url: https://soracom-xxxxxxxx-....
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 今月の課金詳細情報 CSV を専用ストレージにエクスポートする
      tags:
      - Billing
      x-soracom-cli:
      - bills export-latest
  /bills/summaries/bill_items:
    get:
      description: |
        過去 4 か月 (今月 〜 3 か月前) の課金項目ごとの課金のサマリーを取得します。新しい順にソートされます。

        この API で取得できるサマリーは、利用料金ダッシュボードの [サービス別の費用] パネルに表示される利用料金と同等です。詳しくは、[利用料金ダッシュボードを確認する](/ja-jp/guides/accounting/check-usage/billing-dashboard/) を参照してください。
      operationId: getBillingSummaryOfBillItems
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BillingSummaryResponseOfBillItems'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 課金項目ごとの課金のサマリーを取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills summaries get-bill-items
  /bills/summaries/sims:
    get:
      description: |
        過去 4 か月 (今月 〜 3 か月前) の IoT SIM ごとの課金のサマリーを取得します。新しい順にソートされます。

        この API で取得できるサマリーは、利用料金ダッシュボードの [SIM ごとの料金 (トップ 100)] パネルに表示される利用料金と同等です。詳しくは、[利用料金ダッシュボードを確認する](/ja-jp/guides/accounting/check-usage/billing-dashboard/) を参照してください。
      operationId: getBillingSummaryOfSims
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BillingSummaryResponseOfSims'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM ごとの課金のサマリーを取得する
      tags:
      - Billing
      x-soracom-cli:
      - bills summaries get-sims
  /cell_locations:
    get:
      description: |
        セル ID などの基地局情報から、その基地局の位置情報 (緯度経度) を取得します。

        - 3G の場合は MCC, MNC, LAC, CID を指定してください。CID がなくてもおおよその位置を取得することができますが、精度は高くありません。

            3G の例
            ```
            $ curl -X GET 'https://api.soracom.io/v1/cell_locations?mcc=440&mnc=10&lac=195&cid=68485165' \
            -H "X-Soracom-API-Key: $X_SORACOM_API_KEY" \
            -H "X-Soracom-Token: $X_SORACOM_TOKEN"
            ```

        - LTE (4G) の場合は MCC, MNC, TAC, ECID を指定してください。

            4G の例
            ```
            $ curl -X GET 'https://api.soracom.io/v1/cell_locations?mcc=440&mnc=10&tac=5840&ecid=44668480' \
            -H "X-Soracom-API-Key: $X_SORACOM_API_KEY" \
            -H "X-Soracom-Token: $X_SORACOM_TOKEN"
            ```

        基地局情報から位置情報への変換には OpenCelliD Project のデータベースを利用しています。指定した基地局情報を元に、OpenCelliD Project のデータベースから対象の位置情報のみを抽出して返しますので、位置情報が存在していなかったり、実際の位置情報とは異なる場合があります。

        [![Creative Commons License](/images/ccbysa_4.0_80x15.png)](https://creativecommons.org/licenses/by-sa/4.0/ "no-icon-external-link") <span xmlns:dct="http://purl.org/dc/terms/" property="dct:title"><a xmlns:cc="https://creativecommons.org/ns#" href="https://opencellid.org" property="cc:attributionName" rel="cc:attributionURL" target="_blank">OpenCelliD Project</a></span> is licensed under a <a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank">Creative Commons Attribution-ShareAlike 4.0 International License</a>
      operationId: getCellLocation
      parameters:
      - description: MCC (Mobile Country Code) - 国コード。
        example: 440
        in: query
        name: mcc
        required: true
        schema:
          type: string
      - description: MNC (Mobile Network Code) - ネットワークコード。
        example: 10
        in: query
        name: mnc
        required: true
        schema:
          type: string
      - description: LAC (Location Area Code) - エリアコード (3G 用)。
        example: 195
        in: query
        name: lac
        required: false
        schema:
          type: string
      - description: CID (Cell ID) - セル ID (3G 用)。
        example: 68485165
        in: query
        name: cid
        required: false
        schema:
          type: string
      - description: TAC (Tracking Area Code) - エリアコード (LTE 用)。
        example: 5840
        in: query
        name: tac
        required: false
        schema:
          type: string
      - description: ECID (Enhanced Cell ID) - セル ID (LTE 用) - `ecid` もしくは `eci` のいずれかを指定してください。どちらに値を指定しても結果は同一です。
        example: 44668480
        in: query
        name: ecid
        required: false
        schema:
          type: string
      - description: ECID (Enhanced Cell ID) - セル ID (LTE 用) - `ecid` もしくは `eci` のいずれかを指定してください。どちらに値を指定しても結果は同一です。
        example: 44668480
        in: query
        name: eci
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                avg_strength: 0
                created: "2022-01-01T00:00:00.000Z"
                exact: 0
                lat: 35.7119449
                lon: 139.813642
                range: 476
                samples: 7
                updated: 2022-01-01T00:00:00:000Z
              schema:
                $ref: '#/components/schemas/CellLocation'
          description: 基地局の位置情報。
        "404":
          description: 指定された基地局の位置情報が見つからない。
      security:
      - api_key: []
        api_token: []
      summary: 基地局の位置情報を取得する
      tags:
      - CellLocation
      x-soracom-cli:
      - cell-locations get
    post:
      description: |
        基地局情報のリストから、それらの基地局の位置情報 (緯度経度) のリストを取得します。3G の場合は MCC, MNC, LAC,
        CID を指定してください。CID がなくてもおおよその位置を取得することができますが、精度は高くありません。 LTE (4G) の場合は MCC,
        MNC, TAC, ECID を指定してください。基地局情報から位置情報への変換には OpenCelliD Project のデータベースを利用していますので、情報が存在していなかったり誤っている場合もあります。

        [![Creative Commons License](/images/ccbysa_4.0_80x15.png)](https://creativecommons.org/licenses/by-sa/4.0/ "no-icon-external-link") <span xmlns:dct="http://purl.org/dc/terms/" property="dct:title"><a xmlns:cc="https://creativecommons.org/ns#" href="https://opencellid.org" property="cc:attributionName" rel="cc:attributionURL" target="_blank">OpenCelliD Project</a></span> is licensed under a <a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank">Creative Commons Attribution-ShareAlike 4.0 International License</a>
      operationId: batchGetCellLocations
      requestBody:
        content:
          application/json:
            example:
            - cid: "68485165"
              identifier: test001
              lac: "195"
              mcc: "440"
              mnc: "10"
            - ecid: "44668480"
              identifier: test002
              mcc: "440"
              mnc: "10"
              tac: "5840"
            schema:
              items:
                $ref: '#/components/schemas/CellIdentifier'
              type: array
        description: 基地局情報のリスト。
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - avg_strength: 0
                created: "2022-01-01T00:00:00.000Z"
                exact: 0
                identifier: test001
                lat: 35.6814383
                lon: 139.7665133
                range: 0
                samples: 1
                updated: 2022-01-01T00:00:00:000Z
              - avg_strength: 0
                created: "2022-01-01T00:00:00.000Z"
                exact: 0
                identifier: test002
                lat: 35.7119449
                lon: 139.813642
                range: 476
                samples: 7
                updated: 2022-01-01T00:00:00:000Z
              schema:
                items:
                  $ref: '#/components/schemas/CellLocation'
                type: array
          description: 指定された基地局に対応する位置情報のリスト。
      security:
      - api_key: []
        api_token: []
      summary: 複数の基地局の位置情報を一度に取得する
      tags:
      - CellLocation
      x-soracom-cli:
      - cell-locations batch-get
  /coupons:
    get:
      description: 現在登録されているクーポン一覧を返します。
      operationId: listCoupons
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCouponResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: クーポンの一覧を取得する
      tags:
      - Payment
      x-soracom-cli:
      - coupons list
    post:
      description: 新規でクーポンの見積もりの作成を行います。orderId を /coupons/{order_id}/confirm に PUT
        すると発注が完了します。
      operationId: createCouponQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedCouponRequest'
        description: クーポン詳細
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedCouponModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: クーポンの見積もりを作成する
      tags:
      - Order
      x-soracom-cli:
      - coupons create
  /coupons/{coupon_code}/register:
    post:
      description: クーポンを登録します。
      operationId: registerCoupon
      parameters:
      - description: クーポンコード
        in: path
        name: coupon_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
          description: OK.
        "400":
          description: クーポンコードが無効であるか、クーポンコードの登録上限に達しています。
      security:
      - api_key: []
        api_token: []
      summary: クーポンを登録する
      tags:
      - Payment
      x-soracom-cli:
      - coupons register
  /coupons/{order_id}/confirm:
    put:
      description: 与信を実施し、問題ない場合に発注を確定します。
      operationId: confirmCouponOrder
      parameters:
      - description: 発注 ID
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: クーポンの発注を確定する
      tags:
      - Order
      x-soracom-cli:
      - coupons confirm
  /credentials:
    get:
      description: 認証情報の一覧を返す。
      operationId: listCredentials
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CredentialsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の表示
      tags:
      - Credential
      x-soracom-cli:
      - credentials list
  /credentials/{credentials_id}:
    delete:
      description: 認証情報を削除する。
      operationId: deleteCredential
      parameters:
      - description: 認証情報 ID。
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 認証情報が削除されました。
        "404":
          description: 認証情報 ID が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の削除
      tags:
      - Credential
      x-soracom-cli:
      - credentials delete
    post:
      description: 認証情報を新規作成する。
      operationId: createCredential
      parameters:
      - description: 認証情報 ID。
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              API Token credentials:
                $ref: '#/components/examples/APITokenCredentials'
              AWS IAM Role credentials:
                $ref: '#/components/examples/IAMRoleCredentials'
              AWS credentials:
                $ref: '#/components/examples/AWSCredentials'
              Asteria Platio credentials:
                $ref: '#/components/examples/InfoteriaPlatioCredentials'
              Azure IoT credentials:
                $ref: '#/components/examples/AzureIoTCredentials'
              Azure credentials:
                $ref: '#/components/examples/AzureCredentials'
              Esri Japan ArcGIS Online credentials:
                $ref: '#/components/examples/EsrijCredentials'
              Google Cloud IoT Core credentials:
                $ref: '#/components/examples/GoogleIoTCredentials'
              Google Service Account (JSON):
                $ref: '#/components/examples/GoogleServiceAccountJson'
              Kii Thing-IF credentials:
                $ref: '#/components/examples/KiiThingifCredentials'
              LANDLOG credentials:
                $ref: '#/components/examples/LandlogCredentials'
              OPTiM Cloud IoT OS credentials:
                $ref: '#/components/examples/OptimCloudCredentials'
              Pre-Shared Key:
                $ref: '#/components/examples/PreSharedKey'
              PubNub credentials:
                $ref: '#/components/examples/PubnubCredentials'
              SensorCorpus credentials:
                $ref: '#/components/examples/SensorcorpusCredentials'
              Username password credentials:
                $ref: '#/components/examples/UsernamePasswordCredentials'
              WingArc1st MotionBoard credentials:
                $ref: '#/components/examples/MotionboardCredentials'
              X.509 certificate:
                $ref: '#/components/examples/X509Certificate'
              YE DIGITAL MMCloud credentials:
                $ref: '#/components/examples/MmcloudCredentials'
            schema:
              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
        description: 認証情報。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: 認証情報が作成されました。
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の作成
      tags:
      - Credential
      x-soracom-cli:
      - credentials create
    put:
      description: 認証情報を更新する。
      operationId: updateCredential
      parameters:
      - description: 認証情報 ID。
        in: path
        name: credentials_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
        description: 認証情報。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: OK.
        "400":
          description: リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）
      security:
      - api_key: []
        api_token: []
      summary: 認証情報の更新
      tags:
      - Credential
      x-soracom-cli:
      - credentials update
  /data/{resource_type}/{resource_id}:
    get:
      description: |
        指定されたデータ送信元リソースから Harvest Data に送信されたデータの中で、条件に合うデータを取得します。データエントリが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getDataEntries
      parameters:
      - description: データ送信元リソースの Type
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - Sim
          - SigfoxDevice
          - Device
          type: string
      - description: |
          データ送信元リソースの ID。`resource_type` の値によって、指定する ID が異なります。

          | `resource_type` | 指定する ID |
          |-|-|
          | `Subscriber` | IoT SIM の IMSI |
          | `LoraDevice` | LoRaWAN デバイスの ID |
          | `Sim` | IoT SIM の SIM ID |
          | `SigfoxDevice` | Sigfox デバイスの ID |
          | `Device` | Inventory デバイスの ID |
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限 (1 〜 1000)。デフォルトは、`10` です。
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: 前のページで取得した最後のデータエントリのキー。このパラメータを指定することで次のデータエントリを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: データ送信元リソースから Harvest Data に送信したデータを取得する
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /data/{resource_type}/{resource_id}/{time}:
    delete:
      description: リソース ID とタイムスタンプで指定されたデータエントリを削除する。
      operationId: deleteDataEntry
      parameters:
      - description: データ送信元リソースの Type
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - Sim
          - SigfoxDevice
          - Device
          type: string
      - description: データ送信元リソースの ID
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: 削除対象のデータエントリのタイムスタンプ (UNIX 時間 (ミリ秒))
        in: path
        name: time
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: データエントリは正常に削除されました
      security:
      - api_key: []
        api_token: []
      summary: データエントリを削除する
      tags:
      - DataEntry
      x-soracom-cli:
      - data delete-entry
    get:
      description: リソース ID とタイムスタンプで指定されたデータエントリを取得する。
      operationId: getDataEntry
      parameters:
      - description: データ送信元リソースの Type
        in: path
        name: resource_type
        required: true
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - Sim
          - SigfoxDevice
          - Device
          type: string
      - description: データ送信元リソースの ID
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: 取得対象のデータエントリのタイムスタンプ (UNIX 時間 (ミリ秒))
        in: path
        name: time
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: リソース ID とタイムスタンプで特定されるデータエントリ
        "404":
          description: 対象のデータエントリが存在しない
      security:
      - api_key: []
        api_token: []
      summary: データエントリを取得する
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entry
  /data/resources:
    get:
      description: |
        当該オペレータに属するデータ送信元リソースのリストを返す。データ送信元リソースの総数が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listDataSourceResources
      parameters:
      - description: 対象のリソース Type
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          - LoraDevice
          - Sim
          - SigfoxDevice
          - Device
          type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のデータ送信元リソースの ID。このパラメータを指定することで次のデータ送信元リソース以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataSourceResourceMetadata'
                type: array
          description: データ送信元リソースのリスト
      security:
      - api_key: []
        api_token: []
      summary: データ送信元リソースのリストを取得する
      tags:
      - DataEntry
      x-soracom-cli:
      - data list-source-resources
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /device_object_models:
    get:
      description: デバイスオブジェクトモデルのリストを返します。
      operationId: listDeviceObjectModels
      parameters:
      - description: 前ページで取得した最後のデバイスオブジェクトモデルの ID。このパラメータを指定することで次のデバイスオブジェクトモデル以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 取得する結果の上限数
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceObjectModel'
                type: array
          description: デバイスオブジェクトモデル定義のリスト
      security:
      - api_key: []
        api_token: []
      summary: デバイスオブジェクトモデルのリストを返す
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices list-object-models
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 新しいデバイスオブジェクトモデルを作成します。
      operationId: createDeviceObjectModel
      requestBody:
        $ref: '#/components/requestBodies/DeviceObjectModel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: デバイスオブジェクトモデルが作成されました
        "400":
          description: デバイスオブジェクトモデル定義の解析に失敗しました
      security:
      - api_key: []
        api_token: []
      summary: 新しいデバイスオブジェクトモデルを作成する
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices create-object-model
  /device_object_models/{model_id}:
    delete:
      description: 対象のデバイスオブジェクトモデルを削除します。
      operationId: deleteDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除に成功しました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 対象のデバイスオブジェクトモデルを削除する
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices delete-object-model
    get:
      description: デバイスオブジェクトモデルを取得します。
      operationId: getDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: 取得したデバイスオブジェクトモデル
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスオブジェクトモデルを取得する
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices get-object-model
    post:
      description: デバイスオブジェクトモデルを更新します。
      operationId: updateDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/DeviceObjectModel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: デバイスオブジェクトモデルが更新されました
        "400":
          description: デバイスオブジェクトモデル定義の解析に失敗しました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスオブジェクトモデルを更新する
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices update-object-model
  /device_object_models/{model_id}/set_scope:
    post:
      description: 対象のデバイスオブジェクトモデルが適用される Scope をセットします。
      operationId: setDeviceObjectModelScope
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDeviceObjectModelScopeRequest'
        description: 対象のデバイスオブジェクトモデルにセットする Scope の値
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceObjectModel'
          description: デバイスオブジェクトモデルの Scope がセットされました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 対象のデバイスオブジェクトモデルが適用される Scope をセットする
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices set-object-model-scope
  /devices:
    get:
      description: デバイスのリストを取得します。
      operationId: listDevices
      parameters:
      - description: タグの名前
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: タグの値
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件 (exact | prefix)
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          type: string
      - description: 前ページで取得した最後のデバイスの ID。このパラメータを指定することで次のデバイスから始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 取得するデバイス数の上限
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: デバイスのリスト
      security:
      - api_key: []
        api_token: []
      summary: デバイスのリストを取得する
      tags:
      - Device
      x-soracom-cli:
      - devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 新しいデバイスを作成します。
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        description: 作成するデバイス
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 作成されたデバイス
      security:
      - api_key: []
        api_token: []
      summary: 新しいデバイスを作成する
      tags:
      - Device
      x-soracom-cli:
      - devices create
  /devices/{device_id}:
    delete:
      description: デバイスを削除します。
      operationId: deleteDevice
      parameters:
      - description: 削除するデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: デバイスが削除された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスを削除する
      tags:
      - Device
      x-soracom-cli:
      - devices delete
    get:
      description: 指定されたデバイス ID のデバイスを取得します。
      operationId: getDevice
      parameters:
      - description: デバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: モデル情報を取得するかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 指定されたデバイス ID のデバイス
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイス ID のデバイスを取得する
      tags:
      - Device
      x-soracom-cli:
      - devices get
  /devices/{device_id}/{object}/{instance}:
    get:
      description: デバイスの Instance 以下のすべての Resource を Read します。
      operationId: readDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectInstance'
          description: 指定された Object Instance 下の Resource のリスト
        "400":
          description: 指定した Resource が Read をサポートしていません (デバイスがオフラインなど接続エラーの場合を含みます)
        "404":
          description: 指定した Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Instance 以下のすべての Resource を Read する
      tags:
      - Device
      x-soracom-cli:
      - devices get-instance
  /devices/{device_id}/{object}/{instance}/{resource}:
    get:
      description: 指定されたデバイスの Resource を Read します。
      operationId: readDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInstance'
          description: Resource
        "400":
          description: 指定した Resource が Read をサポートしていません (デバイスがオフラインなど接続エラーの場合を含みます)
        "404":
          description: 指定した Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Resource を Read する
      tags:
      - Device
      x-soracom-cli:
      - devices get-resource
    put:
      description: デバイスの Resource に値を Write します。
      operationId: writeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  oneOf:
                  - type: string
                  - type: number
                  - type: boolean
              type: object
        description: リソースにセットする値。この値は LwM2M の基本的なデータ型を受け入れます。もしリソースモデルが `multiple`
          モードの場合はプロパティ名を `value` ではなく `values` にする必要があります。
        required: true
      responses:
        "202":
          description: Resource の更新を受け付けました
        "400":
          description: 指定した Resource が Write をサポートしていません (デバイスがオフラインなど接続エラーの場合を含みます)
        "404":
          description: 指定した Resource が見つかりません
        "500":
          description: デバイスから更新エラーの応答がありました。(デバイスから LwM2M 応答メッセージがエラーの場合が含まれます。デバイスからのエラーメッセージは、レスポンスの
            `message` に含まれます。)
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Resource に値を Write する
      tags:
      - Device
      x-soracom-cli:
      - devices put-resource
  /devices/{device_id}/{object}/{instance}/{resource}/execute:
    post:
      description: デバイスの Resource を Execute します。
      operationId: executeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  type: string
              type: object
        description: Resource を実行する際に渡す引数文字列
      responses:
        "202":
          description: Resource の実行を受け付けました
        "400":
          description: Resource は Execute 操作をサポートしていません (デバイスがオフラインなど接続エラーの場合を含みます)
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Resource を Execute する
      tags:
      - Device
      x-soracom-cli:
      - devices execute-resource
  /devices/{device_id}/{object}/{instance}/{resource}/observe:
    post:
      description: 指定されたデバイスの Resource の Observe を開始します。Observe を開始すると、デバイス側で値に変化があったらサーバー側に通知するようになります。
      operationId: observeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "202":
          description: Resource の Observe を開始しました
        "400":
          description: Resource は Read 操作をサポートしていません (デバイスがオフラインなど接続エラーの場合を含みます)
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Resource の Observe を開始する
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resource
  /devices/{device_id}/{object}/{instance}/{resource}/unobserve:
    post:
      description: デバイスの Resource の Observe を停止します。
      operationId: unobserveDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Observe を停止しました
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: デバイスの Resource の Observe を停止する
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resource
  /devices/{device_id}/{object}/{instance}/observe:
    post:
      description: 指定されたデバイスの Object Instance 下の Resource 全体の Observe を開始します。
      operationId: observeDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      - description: モデルの情報を追加するか否か
        in: query
        name: model
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "202":
          description: Observe を開始しました
        "400":
          description: Resource は Read 操作をサポートしていません (デバイスがオフラインなど接続エラーの場合を含みます)
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Object Instance 下の Resource 全体の Observe を開始する
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resources
  /devices/{device_id}/{object}/{instance}/unobserve:
    post:
      description: 指定されたデバイスの Object Instance への Observe を停止します。
      operationId: unobserveDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Object ID
        in: path
        name: object
        required: true
        schema:
          type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Observe を停止しました
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
        api_token: []
      summary: 指定されたデバイスの Object Instance への Observe を停止する
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resources
  /devices/{device_id}/data:
    get:
      description: |
        指定した Inventory デバイスから Harvest Data に送信されたデータの中で、条件に合うデータを取得します。データエントリが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getDataFromDevice
      parameters:
      - description: データ取得対象の Inventory デバイスの ID。Inventory デバイスの ID は [Device:listDevices
          API](#/Device/listDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限 (1 〜 1000)。デフォルトは、`10` です。
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Inventory デバイスから Harvest Data に送信されたデータを取得する
      tags:
      - Device
      x-soracom-cli:
      - devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /devices/{device_id}/set_group:
    post:
      description: Inventory デバイスを Inventory グループに所属させます。
      operationId: setDeviceGroup
      parameters:
      - description: 対象の Inventory デバイスのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 更新後の Inventory デバイスの詳細情報。
        "404":
          description: Inventory デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Inventory デバイスを Inventory グループに所属させる
      tags:
      - Device
      x-soracom-cli:
      - devices set-group
  /devices/{device_id}/tags:
    put:
      description: デバイスのタグを更新します。
      operationId: putDeviceTags
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: デバイスが更新された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスのタグを更新する
      tags:
      - Device
      x-soracom-cli:
      - devices put-device-tags
  /devices/{device_id}/tags/{tag_name}:
    delete:
      description: デバイスのタグを削除します。
      operationId: deleteDeviceTag
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 削除するタグの名前
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: タグが削除された
        "404":
          description: 指定されたデバイス ID を持つデバイス、もしくは指定されたタグが見つからなかった
      security:
      - api_key: []
        api_token: []
      summary: デバイスのタグを削除する
      tags:
      - Device
      x-soracom-cli:
      - devices delete-device-tag
  /devices/{device_id}/unset_group:
    post:
      description: Inventory デバイスを Inventory グループから外します。
      operationId: unsetDeviceGroup
      parameters:
      - description: 対象の Inventory デバイスのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: 更新後の Inventory デバイスの詳細情報。
        "404":
          description: Inventory デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Inventory デバイスを Inventory グループから外す
      tags:
      - Device
      x-soracom-cli:
      - devices unset-group
  /diagnostics:
    post:
      description: 診断リクエストを送信します。
      operationId: sendDiagnosticRequest
      requestBody:
        content:
          application/json:
            examples:
              Diagnosing SORACOM Air for Cellular:
                value:
                  from: 1655251200000
                  resouceType: sim
                  resourceId: XXXXXXXXXXXXXXXXXXX
                  service: Air
                  to: 1655337600000
            schema:
              $ref: '#/components/schemas/DiagnosticRequest'
        description: request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticResponse'
          description: 診断リクエストが受け付けられました。
        "400":
          description: 診断対象期間の指定 (from/to) に誤りがあります。
        "404":
          description: 指定されたリソースが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: 診断リクエストを送信する
      tags:
      - Diagnostic
      x-soracom-cli:
      - diagnostics send-request
  /diagnostics/{diagnostic_id}:
    get:
      description: 診断結果を取得します。
      operationId: getDiagnostic
      parameters:
      - description: 診断リクエストの識別子。
        in: path
        name: diagnostic_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticResponse'
          description: OK.
        "404":
          description: 指定された diagnostic_id が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: 診断結果を取得する
      tags:
      - Diagnostic
      x-soracom-cli:
      - diagnostics get
  /event_handlers:
    get:
      description: イベントハンドラーの一覧を返す。
      operationId: listEventHandlers
      parameters:
      - description: 監視対象 (イベントを実行する対象)。
        in: query
        name: target
        required: false
        schema:
          enum:
          - operator
          - imsi
          - sim
          - group
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventHandlerModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーの一覧を取得する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list
    post:
      description: イベントハンドラーを新規作成する。リクエストパラメータの指定方法については、イベントハンドラーの [SORACOM CLI /
        SORACOM API で作成する](/ja-jp/docs/event-handler/configure-with-api/) を参照してください。
      operationId: createEventHandler
      requestBody:
        content:
          application/json:
            examples:
              (01) サブスクライバーの月次データ通信量が一定を超えたら、複数のアクションを実行する。:
                value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      speedClass: s1.minimum
                    type: ChangeSpeedClassAction
                  - properties:
                      executionDateTimeConst: BEGINNING_OF_NEXT_MONTH
                      speedClass: s1.standard
                    type: ChangeSpeedClassAction
                  - properties:
                      message: |-
                        対象 IoT SIM: ${imsi}
                        IoT SIM の月次データ通信量が 1024 MiB に到達したため、通信速度が "s1.minimum" に制限されました。
                      title: 速度制限のお知らせ
                    type: SendMailToOperatorAction
                  - properties:
                      message: |-
                        対象 IoT SIM: ${imsi}
                        速度制限期間が終了したため、通信速度が "s1.standard" に設定されました。
                      title: 速度制限解除のお知らせ
                    type: SendMailToOperatorAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_MONTH
                      limitTotalTrafficMegaByte: 1024
                    type: SubscriberMonthlyTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (02) IoT SIM の速度変更時に Slack に通知する。:
                value:
                  actionConfigList:
                  - properties:
                      body: '{"text":"${imsi} speed class changed from ${oldSpeedClass}
                        to ${newSpeedClass}"}'
                      contentType: application/json
                      executionDateTimeConst: IMMEDIATELY
                      headers: '{"contentType":"application/json; charset=utf-8"}'
                      httpMethod: POST
                      url: https://hooks.slack.com/services/XXXX
                    type: ExecuteWebRequestAction
                  name: SpeedClass
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: IMMEDIATELY
                    type: SimSpeedClassAttributeRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (03) 1 日のデータ通信量が 100 MiB を超えた場合に 1 日後 (24 時間後) まで速度制限しメール通知する。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      speedClass: s1.slow
                    type: ChangeSpeedClassAction
                  - properties:
                      executionDateTimeConst: AFTER_ONE_DAY
                      speedClass: s1.fast
                    type: ChangeSpeedClassAction
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      message: 1 日のデータ通信量が 100 MiB に到達したので速度制限を行います。
                      title: SORACOM からのお知らせ
                      to: notify@exmaple.com
                    type: SendMailAction
                  - properties:
                      executionDateTimeConst: AFTER_ONE_DAY
                      message: 速度制限を解除します
                      title: SORACOM からのお知らせ
                      to: notify@exmaple.com
                    type: SendMailAction
                  description: 1 日のデータ通信量が 100 MiB を超えた場合に 1 日後 (24 時間後) まで速度制限。
                  name: 100 MiB リミット
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: AFTER_ONE_DAY
                      limitTotalTrafficMegaByte: "100"
                    type: SubscriberDailyTrafficRule
                  status: active
                  targetImsi: xxxxxxxxxxxx
              (04) 累積 3000 MiB 利用時に AWS Lambda を呼び出す。:
                description: |
                  累積でのイベントのため、`inactiveTimeoutDateConst` に `NEVER` (再評価しない) を設定しています。
                value:
                  actionConfigList:
                  - properties:
                      credentialsId: '{認証情報 ID}'
                      endpoint: https://lambda.ap-northeast-1.amazonaws.com
                      executionDateTimeConst: IMMEDIATELY
                      functionName: '{Lambda の function 名}'
                      parameter1: param1
                      parameter2: param2
                      parameter3: param3
                    type: InvokeAWSLambdaAction
                  description: 累積 3000 MiB 利用時に AWS Lambda 呼び出し。
                  name: 3000 MiB リミット
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: NEVER
                      limitTotalTrafficMegaByte: "3000"
                    type: SimCumulativeTotalTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (05) 速度クラス変更時に AWS Lambda で履歴を保存する。:
                description: |
                  速度クラス変更のルールで利用できる変数 (`${newSpeedClass}` と `${oldSpeedClass}`) を使用して、AWS Lambda に変更前後の速度クラスを送信し、AWS Lambda でデータベースなどに履歴を保存するイメージです。
                value:
                  actionConfigList:
                  - properties:
                      credentialsId: '{認証情報 ID}'
                      endpoint: https://lambda.ap-northeast-1.amazonaws.com
                      executionDateTimeConst: IMMEDIATELY
                      functionName: '{Lambda の function 名}'
                      parameter1: ${oldSpeedClass}
                      parameter2: ${newSpeedClass}
                    type: InvokeAWSLambdaAction
                  description: 速度クラス変更時に AWS Lambda で履歴を保存。
                  name: SpeedClass 変更
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: IMMEDIATELY
                      targetSpeedClass: null
                    type: SubscriberSpeedClassAttributeRule
                  status: active
                  targetOperatorId: OP0000000000
              (06) サブスクライバーのデータ通信量が初めて記録されたら、指定の URL にリクエストを送る。:
                value:
                  actionConfigList:
                  - properties:
                      body: '{"text":"${imsi} speed class changed from ${oldSpeedClass}
                        to ${newSpeedClass}"}'
                      contentType: application/json
                      executionDateTimeConst: IMMEDIATELY
                      headers: '{"contentType":"application/json; charset=utf-8"}'
                      httpMethod: POST
                      url: https://hooks.slack.com/services/XXXX
                    type: ExecuteWebRequestAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: NEVER
                    type: SubscriberFirstTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (07) サブスクライバーの日次データ通信量が一定を超えたら、メールを送る。:
                value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      message: 'IMSI: ${imsi} の 1 日のデータ通信量が 10 MiB に到達しました。'
                      title: SORACOM からのお知らせ
                      to: notify@exmaple.com
                    type: SendMailAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_DAY
                      inactiveTimeoutOffsetMinutes: "5"
                      limitTotalTrafficMegaByte: "10"
                    type: SubscriberDailyTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (08) サブスクライバーの月次データ通信量が一定を超えたら、IoT SIM の速度クラスを変更する。:
                value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      speedClass: s1.minimum
                    type: ChangeSpeedClassAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_MONTH
                      limitTotalTrafficMegaByte: "1024"
                    type: SubscriberMonthlyTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (09) サブスクライバーの利用開始からの累積データ通信量が一定を超えたら、IoT SIM のステータスを変更する。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                    type: SuspendAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: NEVER
                      limitTotalTrafficMegaByte: "10240"
                    type: SubscriberCumulativeTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (10) IoT SIM のステータスが変更されたら、指定の URL にリクエストを送る。:
                value:
                  actionConfigList:
                  - properties:
                      body: '{"text":"${imsi} status changed from ${oldStatus} to
                        ${newStatus}"}'
                      contentType: application/json
                      executionDateTimeConst: IMMEDIATELY
                      headers: '{"contentType":"application/json; charset=utf-8"}'
                      httpMethod: POST
                      url: https://hooks.slack.com/services/XXXX
                    type: ExecuteWebRequestAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: NEVER
                      sourceStatus: ready
                      targetStatus: active
                    type: SimStatusAttributeRule
                  status: active
                  targetOperatorId: OP0000000000
              (11) IoT SIM の速度クラスが変更されたら、AWS Lambda を呼び出す。:
                value:
                  actionConfigList:
                  - properties:
                      credentialsId: '{認証情報 ID}'
                      endpoint: https://lambda.ap-northeast-1.amazonaws.com
                      executionDateTimeConst: IMMEDIATELY
                      functionName: '{Lambda の function 名}'
                      parameter1: param1
                      parameter2: param2
                      parameter3: param3
                    type: InvokeAWSLambdaAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: IMMEDIATELY
                      targetSpeedClass: s1.4xfast
                    type: SimSpeedClassAttributeRule
                  status: active
                  targetOperatorId: OP0000000000
              (12) IoT SIM の有効期限が切れたら、オペレーターのプライマリメールアドレスにメールを送る。:
                value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      message: 'IMSI: ${imsi} の有効期限が切れました。'
                      title: SORACOM からのお知らせ
                    type: SendMailToOperatorAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_MONTH
                    type: SubscriberExpiredRule
                  status: active
                  targetOperatorId: OP0000000000
              (13) IoT SIM が IMEI ロックにより接続失敗したら、AWS Lambda を呼び出す。:
                value:
                  actionConfigList:
                  - properties:
                      credentialsId: 認証情報 ID
                      endpoint: https://lambda.ap-northeast-1.amazonaws.com
                      executionDateTimeConst: IMMEDIATELY
                      functionName: '{Lambda の function 名}'
                      parameter1: param1
                      parameter2: param2
                      parameter3: param3
                    type: InvokeAWSLambdaAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: AFTER_ONE_DAY
                    type: SubscriberImeiMismatchedRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (14) IoT SIM に紐づく全サブスクライバーの日次データ通信量合計が一定を超えたら、メールを送る。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      message: 'SIM ID: ${simId} の 1 日のデータ通信量が 10 MiB に到達しました。'
                      title: SORACOM からのお知らせ
                      to: notify@exmaple.com
                    type: SendMailAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_DAY
                      inactiveTimeoutOffsetMinutes: "5"
                      limitTotalTrafficMegaByte: "10"
                      runOnceAmongTarget: "true"
                    type: SimDailyTotalTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (15) IoT SIM に紐づく全サブスクライバーの月次データ通信量合計が一定を超えたら、IoT SIM の速度クラスを変更する。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      speedClass: s1.minumum
                    type: ChangeSpeedClassAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_MONTH
                      limitTotalTrafficMegaByte: "1024"
                      runOnceAmongTarget: "true"
                    type: SimMonthlyTotalTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (16) IoT SIM に紐づく全サブスクライバーの利用開始からの累積データ通信量合計が一定を超えたら、IoT SIM のステータスを変更する。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                    type: SuspendAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: NEVER
                      limitTotalTrafficMegaByte: "10240"
                      runOnceAmongTarget: "true"
                    type: SimCumulativeTotalTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (17) IoT SIM にサブスクリプションが追加されたら、AWS Lambda を呼び出す。:
                value:
                  actionConfigList:
                  - properties:
                      credentialsId: 認証情報 ID
                      endpoint: https://lambda.ap-northeast-1.amazonaws.com
                      executionDateTimeConst: IMMEDIATELY
                      functionName: '{Lambda の function 名}'
                      parameter1: param1
                      parameter2: param2
                      parameter3: param3
                    type: InvokeAWSLambdaAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: NEVER
                      runOnceAmongTarget: "false"
                      targetOtaStatus: started
                    type: SimSubscriptionStatusRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (18) オペレーターに紐づく全 IoT SIM の日次データ通信量合計が一定を超えたら、オペレーターのプライマリメールアドレスにメールを送る。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      message: オペレーターに紐づく全 IoT SIM の日次データ通信量合計が 1024 MiB を超えました。
                      title: SORACOM からのお知らせ
                    type: SendMailToOperatorAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_DAY
                      limitTotalTrafficMegaByte: "1024"
                      runOnceAmongTarget: "false"
                    type: DailyTotalTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              ? (19) オペレーターに紐づく全 IoT SIM の月次データ通信量合計が一定を超えたら、IoT SIM の速度クラスを変更する。
              : value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                      speedClass: s1.minumum
                    type: ChangeSpeedClassAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_MONTH
                      limitTotalTrafficMegaByte: "10240"
                      runOnceAmongTarget: "false"
                    type: MonthlyTotalTrafficRule
                  status: active
                  targetOperatorId: OP0000000000
              (20) 今月の利用料金が設定金額を超えたら、IoT SIM のステータスを変更する。:
                value:
                  actionConfigList:
                  - properties:
                      executionDateTimeConst: IMMEDIATELY
                    type: SuspendAction
                  description: Sample description
                  name: Event handler
                  ruleConfig:
                    properties:
                      inactiveTimeoutDateConst: BEGINNING_OF_NEXT_MONTH
                      limitTotalAmount: "10000"
                    type: MonthlyChargeRule
                  status: active
                  targetOperatorId: OP0000000000
            schema:
              $ref: '#/components/schemas/CreateEventHandlerRequest'
        description: イベントハンドラーの設定内容。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHandlerModel'
          description: イベントハンドラーが作成されました。
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーを作成する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers create
  /event_handlers/{handler_id}:
    delete:
      description: 指定されたイベントハンドラーを削除する。
      operationId: deleteEventHandler
      parameters:
      - description: イベントハンドラー ID。
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK.
        "404":
          description: イベントハンドラーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーを削除する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers delete
    get:
      description: 指定されたイベントハンドラーの情報を返す。
      operationId: getEventHandler
      parameters:
      - description: イベントハンドラー ID。
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHandlerModel'
          description: OK.
        "404":
          description: イベントハンドラーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーの情報を取得する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers get
    put:
      description: 指定されたイベントハンドラーを更新する。リクエストパラメータの指定方法については、イベントハンドラーの [SORACOM CLI
        / SORACOM API で作成する](/ja-jp/docs/event-handler/configure-with-api/) を参照してください。
      operationId: updateEventHandler
      parameters:
      - description: イベントハンドラー ID。
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventHandlerRequest'
        description: イベントハンドラーの設定内容。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なイベントハンドラー ID が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーの情報を更新する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers update
  /event_handlers/{handler_id}/subscribers/{imsi}/ignore:
    delete:
      description: 指定の IMSI に対して、指定のイベントハンドラーを無視する設定を削除。
      operationId: deleteIgnoreEventHandler
      parameters:
      - description: IMSI。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: イベントハンドラー ID。
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK.
        "404":
          description: イベントハンドラーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーを無視する設定を削除する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers unignore
    post:
      description: 指定の IMSI に対して、指定のイベントハンドラーを無視する設定を追加。
      operationId: setIgnoreEventHandler
      parameters:
      - description: IMSI。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: イベントハンドラー ID。
        in: path
        name: handler_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: イベントハンドラーを無視する設定を追加する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers ignore
  /event_handlers/subscribers/{imsi}:
    get:
      description: 対象 IMSI に紐づくイベントハンドラーのリストを返す。
      operationId: listEventHandlersBySubscriber
      parameters:
      - description: IMSI。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventHandlerModel'
                type: array
          description: OK.
        "404":
          description: イベントハンドラーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: IMSI に紐づくイベントハンドラーのリストを取得する
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list-for-subscriber
  /files:
    get:
      description: scope と prefix にマッチしたファイルエントリの一覧をファイルエントリを filePath の UTF-8 バイトでソートされた順
        (昇順) で返却します。 prefix がマッチするファイルエントリが無ければ空のリストが返却されます。
      operationId: findFiles
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: query
        name: scope
        required: true
        schema:
          enum:
          - private
          - public
          type: string
      - description: ファイルパスにマッチさせるプレフィックス
        in: query
        name: prefix
        required: true
        schema:
          type: string
      - description: 返却するファイルエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: 前ページで取得した最後のファイルエントリの filePath。このパラメータを指定することで次のファイルエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileEntry'
                type: array
          description: prefix にマッチしたファイルエントリのリスト。prefix にマッチするファイルエントリが無ければ空のリスト。
        "404":
          description: 指定された scope が存在しない
      security:
      - api_key: []
        api_token: []
      summary: scope と prefix にマッチするファイルを探す
      tags:
      - FileEntry
      x-soracom-cli:
      - files find
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /files/{scope}/{path}:
    delete:
      description: scope と path で指定されたファイルを削除します。`private` スコープのみが許可されます。
      operationId: deleteFile
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ファイルの削除に成功
        "404":
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルを削除する
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete
    get:
      description: scope と path で指定されたファイルをダウンロードします。なお、path の末尾が `/` の場合は [FileEntry:listFiles
        API](#/FileEntry/listFiles) が呼び出されます。
      operationId: getFile
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "302":
          description: ファイルをダウンロードするためのリンクへのリダイレクション。指定された path がディレクトリの場合は listFiles
            API へのリダイレクション。
        "404":
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルをダウンロードする
      tags:
      - FileEntry
      x-soracom-cli:
      - files get
    head:
      description: scope と path で指定されたファイルのメタデータを取得します。
      operationId: getFileMetadata
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 指定されたファイルのメタデータ
          headers:
            Content-Length:
              description: ファイルのサイズ（バイト）
              schema:
                type: integer
            Content-Type:
              description: ファイルの Content-Type
              schema:
                type: string
            ETag:
              description: ファイルのバージョンを表す識別子
              schema:
                type: string
        "404":
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたファイルのメタデータを取得する
      tags:
      - FileEntry
      x-soracom-cli:
      - files get-metadata
    put:
      description: 指定された scope 内の path にファイルをアップロードします。`private` スコープのみが許可されます。
      operationId: putFile
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      - description: アップロードするファイルの Content-Type。
        in: header
        name: content-type
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              format: binary
              type: string
        description: アップデートするファイルの内容。
        required: true
      responses:
        "200":
          description: ファイルの更新に成功
        "201":
          description: ファイルの作成に成功
      security:
      - api_key: []
        api_token: []
      summary: 指定された scope 内の path にファイルをアップロードする
      tags:
      - FileEntry
      x-soracom-cli:
      - files put
  /files/{scope}/{path}/:
    delete:
      description: scope と path で指定されたディレクトリを削除します。`private` スコープのみが許可されます。
      operationId: deleteDirectory
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ディレクトリの削除に成功
        "400":
          description: 指定されたディレクトリが空ではない
        "404":
          description: 指定されたディレクトリが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたディレクトリを削除する
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete-directory
    get:
      description: |
        scope と path で指定されたディレクトリに含まれるファイルまたはディレクトリを取得します。なお、path の末尾が `/` 以外の場合は [FileEntry:getFile API](#/FileEntry/getFile) が呼び出されます。エントリの総数が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listFiles
      parameters:
      - description: リクエストのスコープ。Harvest Files にアップロードしたファイルを扱う場合は `private` を指定します。
        in: path
        name: scope
        required: true
        schema:
          default: private
          enum:
          - private
          - public
          type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        schema:
          default: /
          type: string
      - description: 返却するファイルエントリ数の上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: 前ページで取得した最後のファイルエントリの filename。このパラメータを指定することで次のファイルエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileEntry'
                type: array
          description: 指定されたディレクトリに含まれるファイルやディレクトリ
        "404":
          description: ディレクトリが見つからない
      security:
      - api_key: []
        api_token: []
      summary: scope と path で指定されたディレクトリに含まれるファイルやディレクトリの一覧を取得する
      tags:
      - FileEntry
      x-soracom-cli:
      - files list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /files/exported/{exported_file_id}:
    get:
      description: |
        非同期でファイルをエクスポートした場合の処理の進捗を取得します。エクスポートが完了している場合は、ファイルをダウンロードするための URL を取得できます。URL からファイルをダウンロードしてください。

        非同期でファイルをエクスポートできる API は以下のとおりです。`exported_file_id` には、以下の API で取得した ファイルエクスポート ID (`exportedFileId` の値) を指定します。

        - [Billing:exportBilling API](#/Billing/exportBilling)
        - [Billing:exportLatestBilling API](#/Billing/exportLatestBilling)
        - [Payment:exportPaymentStatement API](#/Payment/exportPaymentStatement)
        - [Stats:exportAirStats API](#/Stats/exportAirStats)
        - [Stats:exportBeamStats API](#/Stats/exportBeamStats)
        - [Stats:exportFunkStats API](#/Stats/exportFunkStats)
        - [Stats:exportFunnelStats API](#/Stats/exportFunnelStats)
        - [Subscriber:exportSubscribers API](#/Subscriber/exportSubscribers)
      operationId: getExportedFile
      parameters:
      - description: ファイルエクスポート ID
        in: path
        name: exported_file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: exported
                url: https://soracom-xxxxxxxx-....
              schema:
                $ref: '#/components/schemas/GetExportedFileResponse'
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: 非同期でファイルをエクスポートした場合の処理の進捗を取得する
      tags:
      - Files
      x-soracom-cli:
      - files get-exported
  /gadgets:
    get:
      description: |
        条件に一致する Gadget API 対応デバイスのデータを取得します。Gadget API 対応デバイスが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listGadgets
      parameters:
      - description: |
          取得対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: query
        name: product_id
        required: false
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 検索対象にするタグの名前。`tag_value_match_mode` の設定にかかわらず常に完全一致で検索されます。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: タグの値を検索するための文字列を URL エンコード (パーセントエンコーディング) して指定します。`tag_name`
          を指定した場合は必須です。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: |
          タグの値の検索条件。

          - `exact`: 完全一致。
          - `prefix`: 前方一致。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 取得する Gadget API 対応デバイスのデータの件数 (上限)。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: |
          Gadget API 対応デバイスの ID (`{productId}/{serialNumber}`) を URL エンコード (パーセントエンコーディング) して指定します。

          指定した ID (`{productId}/{serialNumber}`) の次の Gadget API 対応デバイスを取得できます。

          API を呼び出したときに `link` ヘッダーで返された `rel=next` の `last_evaluated_key` の値を、次の呼び出し時に指定することが想定されていますが、任意の ID (`{productId}/{serialNumber}`) を指定できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - attributes:
                  contractEndingTime: "2022-11-08T23:59:59Z"
                  firstClickTimestamp: "2018-11-08T09:01:11Z"
                  remainingCount: 1499
                createdTime: 1541668508839
                id: button/1234567890ABCDE0
                lastModifiedTime: 1665398234935
                lastSeen:
                  batteryLevel: 1
                  clickEventPropagated: true
                  clickTime: "2022-01-26T01:07:19.561Z"
                  clickType: DOUBLE
                operatorId: OP0040984956
                productId: button
                serialNumber: 1234567890ABCDE0
                status: active
                tags:
                  name: LTE-M Button 01
                terminatedTime: null
                terminationEnabled: false
              schema:
                items:
                  $ref: '#/components/schemas/Gadget'
                type: array
          description: 条件に一致する Gadget API 対応デバイスのデータのリスト。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスの一覧を取得する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /gadgets/{product_id}/{serial_number}:
    get:
      description: 指定された Gadget API 対応デバイスの詳細情報を取得します。
      operationId: getGadget
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                attributes:
                  contractEndingTime: "2022-11-08T23:59:59Z"
                  firstClickTimestamp: "2018-11-08T09:01:11Z"
                  remainingCount: 1499
                createdTime: 1541668508839
                id: button/1234567890ABCDE0
                lastModifiedTime: 1665398234935
                lastSeen:
                  batteryLevel: 1
                  clickEventPropagated: true
                  clickTime: "2022-01-26T01:07:19.561Z"
                  clickType: DOUBLE
                operatorId: OP0040984956
                productId: button
                serialNumber: 1234567890ABCDE0
                status: active
                tags:
                  name: LTE-M Button 01
                terminatedTime: null
                terminationEnabled: false
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 指定された Gadget API 対応デバイスの詳細情報。
        "404":
          description: 指定された Gadget API 対応デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスの詳細情報を取得する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets get
  /gadgets/{product_id}/{serial_number}/disable_termination:
    post:
      description: 指定された Gadget API 対応デバイスを解約不可能に設定します。
      operationId: disableTerminationOnGadget
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget API 対応デバイスの詳細情報。
        "404":
          description: 指定された Gadget API 対応デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスを解約不可能に設定する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets disable-termination
  /gadgets/{product_id}/{serial_number}/enable_termination:
    post:
      description: 指定された Gadget API 対応デバイスを解約可能に設定します。
      operationId: enableTerminationOnGadget
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget API 対応デバイスの詳細情報。
        "404":
          description: 指定された Gadget API 対応デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスを解約可能に設定する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets enable-termination
  /gadgets/{product_id}/{serial_number}/register:
    post:
      description: Gadget API 対応デバイスを登録する。
      operationId: registerGadget
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GadgetRegistrationRequest'
        description: Gadget の登録リクエスト。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: Gadget API 対応デバイスが正しく登録されました。
        "404":
          description: 指定された Gadget API 対応デバイスが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスを登録する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets register
  /gadgets/{product_id}/{serial_number}/tags:
    put:
      description: 指定された Gadget API 対応デバイスのタグを追加・更新します。
      operationId: putGadgetTags
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget API 対応デバイスの詳細情報。
        "404":
          description: 指定された Gadget API 対応デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスのタグを追加・更新する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets put-tags
  /gadgets/{product_id}/{serial_number}/tags/{tag_name}:
    delete:
      description: 指定された Gadget API 対応デバイスのタグを削除します。
      operationId: deleteGadgetTag
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名 (URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する)。
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了。
        "404":
          description: 指定された Gadget API 対応デバイスあるいはタグが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスのタグを削除する
      tags:
      - Gadget
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - gadgets delete-tag
  /gadgets/{product_id}/{serial_number}/terminate:
    post:
      description: 指定された Gadget API 対応デバイスを解約します。
      operationId: terminateGadget
      parameters:
      - description: |
          対象の Gadget API 対応デバイスの種類。

          - `button`: SORACOM LTE-M Button powered by AWS。
          - `wimax`: ソラカメ専用セルラーパック。
        in: path
        name: product_id
        required: true
        schema:
          enum:
          - button
          - wimax
          type: string
      - description: 対象の Gadget API 対応デバイスのシリアル番号。
        in: path
        name: serial_number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gadget'
          description: 更新後の Gadget API 対応デバイスの詳細情報。
        "404":
          description: 指定された Gadget API 対応デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Gadget API 対応デバイスを解約する
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets terminate
  /groups:
    get:
      description: Group の一覧を返す
      operationId: listGroups
      parameters:
      - description: Group についた Tag 名。完全一致する Tag 名が検索対象となる。tag_name を指定した場合、tag_value
          が必須。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: Group についた Tag の値。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの文字列 (`tag_value`) に対する検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: レスポンス 1 ページあたりの最大数。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の Group の ID。このパラメータを指定することで次の Group から始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group の一覧。
      security:
      - api_key: []
        api_token: []
      summary: グループの一覧を取得する
      tags:
      - Group
      x-soracom-cli:
      - groups list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Group を新規作成する。
      operationId: createGroup
      requestBody:
        content:
          application/json:
            example:
              configuration:
                SoracomAir:
                  metadata:
                    enabled: true
                SoracomHarvest:
                  enabled: true
                SoracomHarvestFiles:
                  enabled: true
              tags:
                name: Group name
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        description: グループに付けるタグと、グループの設定。
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                configuration:
                  SoracomAir:
                    metadata:
                      enabled: true
                  SoracomHarvest:
                    enabled: true
                  SoracomHarvestFiles:
                    enabled: true
                createdAt: 1698796800000
                createdTime: 1698796800000
                groupId: 12345678-abcd-9012-efab-345678901234
                lastModifiedAt: 1698796800000
                lastModifiedTime: 1698796800000
                operatorId: OP0012345678
                tags:
                  name: Group name
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: グループを作成する
      tags:
      - Group
      x-soracom-cli:
      - groups create
  /groups/{group_id}:
    delete:
      description: Group ID で指定された Group を削除する。
      operationId: deleteGroup
      parameters:
      - description: 対象の Group の ID。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された Group を削除完了。
        "404":
          description: 指定された Group は存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループを削除する
      tags:
      - Group
      x-soracom-cli:
      - groups delete
    get:
      description: Group ID で指定された Group を返す。
      operationId: getGroup
      parameters:
      - description: 対象の Group の ID。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 指定された Group。
        "404":
          description: 指定された Group は存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループの情報を取得する
      tags:
      - Group
      x-soracom-cli:
      - groups get
  /groups/{group_id}/configuration/{namespace}:
    delete:
      description: 指定された Group のネームスペースを削除。
      operationId: deleteConfigurationNamespace
      parameters:
      - description: 対象の Group。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 削除対象のネームスペース。
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomOrbit
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      responses:
        "204":
          description: 指定されたネームスペースの削除完了。
        "400":
          description: 指定されたネームスペースが存在しない。
        "404":
          description: 指定された Group が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループのネームスペースを削除する
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config-namespace
    put:
      description: 指定されたグループの設定を更新します。
      operationId: putConfigurationParameters
      parameters:
      - description: 対象のグループの ID。グループ ID は [Group:listGroups API](#/Group/listGroups)
          で取得できます。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: |
          設定対象を示す文字列。設定内容によって異なります。

          - `SoracomAir`: カスタム DNS、メタデータサービス、VPG (Virtual Private Gateway)、CHAP 認証、簡易位置測位機能、バイナリパーサー。
          - `SoracomBeam`: SORACOM Beam。
          - `SoracomEndorse`: SORACOM Endorse。
          - `SoracomFunk`: SORACOM Funk。
          - `SoracomFunnel`: SORACOM Funnel。
          - `SoracomHarvest`: SORACOM Harvest Data。
          - `SoracomHarvestFiles`: SORACOM Harvest Files。
          - `SoracomKrypton`: SORACOM Krypton。
          - `SoracomOrbit`: SORACOM Orbit。
          - `UnifiedEndpoint`: Unified Endpoint。
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - SoracomOrbit
          - UnifiedEndpoint
          type: string
      requestBody:
        content:
          application/json:
            examples:
              (1) カスタム DNS を設定する (SoracomAir):
                description: |
                  [IoT SIM のカスタム DNS を設定する](/ja-jp/docs/air/configure-custom-dns/) 場合は、以下の点に注意してください。

                  - パスパラメータの `namespace` に、`SoracomAir` を指定します。
                  - `key` と `value` のペアについて詳しくは、[SORACOM CLI / SORACOM API のリクエストボディで指定するプロパティについて](/ja-jp/docs/air/configure-custom-dns/#soracom-cli--soracom-api-のリクエストボディで指定するプロパティについて) を参照してください。
                value:
                - key: useCustomDns
                  value: true
                - key: dnsServers
                  value:
                  - 192.168.0.5
                  - 192.168.0.6
              (2) メタデータサービスを設定する (SoracomAir):
                description: |
                  [メタデータサービスを設定する](/ja-jp/docs/air/use-metadata/#メタデータサービスを設定する) 場合は、以下の点に注意してください。

                  - パスパラメータの `namespace` に、`SoracomAir` を指定します。
                  - `key` と `value` のペアについて詳しくは、[SORACOM CLI / SORACOM API のリクエストボディで指定するプロパティについて](/ja-jp/docs/air/use-metadata/#soracom-cli--soracom-api-のリクエストボディで指定するプロパティについて) を参照してください。
                value:
                - key: metadata
                  value:
                    allowOrigin: http://some.example.com
                    enabled: true
                    minimizeResponseBody: true
                    readonly: true
                - key: userdata
                  value: foobar
              (3) CHAP 認証を設定する (SoracomAir):
                description: |
                  [CHAP 認証で任意のユーザー名とパスワードを利用する](/ja-jp/docs/air/configure-chap/) 場合は、以下の点に注意してください。

                  - パスパラメータの `namespace` に、`SoracomAir` を指定します。
                  - `key` と `value` のペアについて詳しくは、[SORACOM CLI / SORACOM API のリクエストボディで指定するプロパティについて](/ja-jp/docs/air/configure-chap/#soracom-cli--soracom-api-のリクエストボディで指定するプロパティについて) を参照してください。
                value:
                - key: authenticationRequired
                  value: true
                - key: username
                  value: xxxxx
                - key: password
                  value: yyyyy
              (4) 簡易位置測位機能を設定する (SoracomAir):
                description: |
                  [デバイスの簡易的な位置情報 (簡易位置測位機能) を送信する (plan-KM1 のみ)](/ja-jp/docs/air/get-location-info/#デバイスの簡易的な位置情報-簡易位置測位機能-を送信する-plan-km1-のみ) 場合は、以下の点に注意してください。

                  - パスパラメータの `namespace` に、`SoracomAir` を指定します。
                  - `key` と `value` のペアについて詳しくは、[SORACOM CLI / SORACOM API のリクエストボディで指定するプロパティについて](/ja-jp/docs/air/get-location-info/#soracom-cli--soracom-api-のリクエストボディで指定するプロパティについて) を参照してください。
                value:
                - key: locationEnabled
                  value: true
              (5) Endorse を有効化する (SoracomEndorse):
                description: |
                  [Endorse を有効化する](/ja-jp/docs/endorse/validate-token/#endorse-を有効化する) 場合は、以下の点に注意してください。

                  - パスパラメーターの `namespace` に、`SoracomEndorse` を指定します。
                  - `key` と `value` のペアについて詳しくは、[SORACOM CLI / SORACOM API のリクエストボディで指定するプロパティについて](/ja-jp/docs/endorse/validate-token/#soracom-cli--soracom-api-のリクエストボディで指定するプロパティについて) を参照してください。
                value:
                - key: enabled
                  value: true
                - key: parametersToEndorse
                  value:
                    imei: true
                    imsi: true
                    msisdn: false
                    requestParameters: true
                    simId: true
                - key: tokenTimeoutSeconds
                  value: 600
                - key: allowOrigin
                  value: https://soracom.io
                - key: authorizedRedirectUrls
                  value:
                  - https://soracom.io
                  - http://localhost:3000
              (6) 送信データの時刻をタイムスタンプに利用する (SoracomHarvest):
                description: |
                  [「送信データに含めた時刻」をタイムスタンプとして扱う](/ja-jp/docs/harvest/custom-timestamp/) 場合は、以下の点に注意してください。

                  - パスパラメーターの `namespace` に、`SoracomHarvest` を指定します。
                  - `key` と `value` のペアについて詳しくは、[SORACOM CLI / SORACOM API のリクエストボディで指定するプロパティについて](/ja-jp/docs/harvest/custom-timestamp/#soracom-cli--soracom-api-のリクエストボディで指定するプロパティについて) を参照してください。
                value:
                - key: enabled
                  value: true
                - key: customTimestamp
                  value:
                    format: iso-8601
                    type: jsonpointer
                    value: /time
            schema:
              items:
                $ref: '#/components/schemas/GroupConfigurationUpdateRequest'
              type: array
        description: |
          グループ設定。

          **Warning**: 同じ `namespace` に含まれる設定を変更する場合は、リクエストボディに変更点だけでなく、既存の設定をすべて含めてください。リクエストボディに含めなかった設定は、すべてデフォルト設定に戻ります。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 更新後の Group。
        "404":
          description: 指定された Group が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループの設定を更新する
      tags:
      - Group
      x-soracom-cli:
      - groups put-config
  /groups/{group_id}/configuration/{namespace}/{name}:
    delete:
      description: 指定された Group のパラメータを削除。
      operationId: deleteConfigurationParameter
      parameters:
      - description: 対象の Group。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 対象のパラメータのネームスペース。
        in: path
        name: namespace
        required: true
        schema:
          enum:
          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint
          type: string
      - description: 削除対象のパラメータ名 (URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript
          なら encodeURIComponent() したものを指定する)。
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定されたパラメータの削除完了。
        "404":
          description: 指定された Group が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループのパラメータを削除する
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config
  /groups/{group_id}/subscribers:
    get:
      description: Group ID で指定された Group に属する Subscriber の一覧を返す。
      operationId: listSubscribersInGroup
      parameters:
      - description: 対象の Group の ID。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: レスポンス 1 ページあたりの最大数。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: 指定された Group。
        "404":
          description: 指定された Group は存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループに属する Subscriber の一覧を取得する
      tags:
      - Group
      x-sam-operationId: listSubscribers
      x-soracom-cli:
      - groups list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /groups/{group_id}/tags:
    put:
      description: 指定された Configuration Group のタグを追加・更新。
      operationId: putGroupTags
      parameters:
      - description: 対象の Group の ID。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 更新対象のタグの配列。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 更新後の Group。
        "404":
          description: 指定された Group が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループのタグを更新する
      tags:
      - Group
      x-sam-operationId: putTags
      x-soracom-cli:
      - groups put-tags
  /groups/{group_id}/tags/{tag_name}:
    delete:
      description: 指定された Group のタグを削除。
      operationId: deleteGroupTag
      parameters:
      - description: 対象の Group の ID。
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名 (URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する)。
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了。
        "404":
          description: 指定されたグループあるいはタグが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: グループのタグを削除する
      tags:
      - Group
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - groups delete-tag
  /lagoon/dashboards/{dashboard_id}/permissions:
    put:
      description: |
        SORACOM Lagoon 2 の Dashboard の権限を更新します。

        **Warning**: この API では、SORACOM Lagoon 3 の Dashboard の権限は更新できません。
      operationId: updateLagoonDashboardPermissions
      parameters:
      - description: 対象の Dashboard の ID。
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          値が `true` の場合、Lagoon 2 にリクエストが発行されます。
          このプロパティは、Lagoon 2 と Lagoon 3 を利用している場合のみ有効です。
        in: query
        name: v2
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonDashboardPermissionsUpdatingRequest'
        description: リクエスト。
        required: true
      responses:
        "204":
          description: 更新されました。
        "400":
          description: 不正なリクエストです。
        "403":
          description: 許可されていません。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon 2 の Dashboard の権限を更新する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards update-permissions
  /lagoon/dashboards/{dashboard_id}/permissions/init:
    post:
      description: |
        SORACOM Lagoon 2 の Dashboard の権限を初期化します。

        **Warning**: この API では、SORACOM Lagoon 3 の Dashboard の権限は初期化できません。
      operationId: initializeLagoonDashboardPermissions
      parameters:
      - description: 対象の Dashboard の ID。
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          値が `true` の場合、Lagoon 2 にリクエストが発行されます。
          このプロパティは、Lagoon 2 と Lagoon 3 を利用している場合のみ有効です。
        in: query
        name: v2
        required: false
        schema:
          type: boolean
      responses:
        "204":
          description: 更新されました。
        "400":
          description: 不正なリクエストです。
        "403":
          description: 許可されていません。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon 2 の Dashboard の権限を初期化する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards init-permissions
  /lagoon/dashboards/permissions:
    get:
      description: |
        SORACOM Lagoon 2 の全 Dashboard の権限を取得します。

        **Warning**: この API では、SORACOM Lagoon 3 の Dashboard の権限は取得できません。
      operationId: listLagoonDashboardsPermissions
      parameters:
      - description: |
          値が `true` の場合、Lagoon 2 にリクエストが発行されます。
          このプロパティは、Lagoon 2 と Lagoon 3 を利用している場合のみ有効です。
        in: query
        name: v2
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonDashboardPermissionsResponse'
                type: array
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon 2 の全 Dashboard の権限を取得する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards list-permissions
  /lagoon/image/link:
    get:
      description: SORACOM Lagoon コンソールのロゴの URL を取得します。
      operationId: getImageLink
      parameters:
      - description: |
          値が `true` の場合、Lagoon 2 にリクエストが発行されます。
          このプロパティは、Lagoon 2 と Lagoon 3 を利用している場合のみ有効です。
        in: query
        name: v2
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon コンソールのロゴの URL を取得する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon get-image-link
  /lagoon/license_packs:
    get:
      description: SORACOM Lagoon のライセンスパックのステータスを取得します。
      operationId: listLagoonLicensePackStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonLicensePackStatusResponse'
                type: array
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のライセンスパックのステータス取得
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs list-status
    put:
      description: |
        SORACOM Lagoon のライセンスパック数を変更します。

        **Warning**: ルートユーザーの認証情報を使用して実行してください。SAM ユーザーの認証情報では、Lagoon のライセンスパック数を変更できません。
      operationId: updateLagoonLicensePack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonLicensePacksUpdatingRequest'
        description: リクエスト。
        required: true
      responses:
        "204":
          description: 更新されました。
        "400":
          description: 不正なリクエストです。
        "404":
          description: オペレーターが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のライセンスパック数を変更する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs update
  /lagoon/migration:
    get:
      description: SORACOM Lagoon のバージョン移行に関連する情報を取得します。この API による操作は root アカウントのみが可能です。
      operationId: getLagoonMigrationInfo
      requestBody:
        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'
      responses:
        "200":
          description: SORACOM Lagoon のバージョン移行に関連する情報。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のバージョン移行に関連する情報の取得
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon migration get-info
    post:
      description: SORACOM Lagoon のバージョン移行を実行します。この API による操作は root アカウントのみが可能です。
      operationId: migrateLagoon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonMigrationRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: SORACOM Lagoon のバージョン移行が完了しました。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のバージョン移行の実行
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon migration migrate
  /lagoon/plan:
    put:
      description: |
        SORACOM Lagoon のプランを変更します。

        **Warning**: ルートユーザーの認証情報を使用して実行してください。SAM ユーザーの認証情報では、Lagoon のプランを変更できません。
      operationId: updateLagoonPlan
      requestBody:
        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'
      responses:
        "204":
          description: 更新されました。
        "400":
          description: 不正なリクエストです。
        "404":
          description: オペレーターが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のプランを変更する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon updated-plan
  /lagoon/register:
    post:
      description: |
        SORACOM Lagoon 3 の利用を開始します。

        **Warning**: ルートユーザーの認証情報を使用して実行してください。SAM ユーザーの認証情報では、Lagoon の利用を開始できません。
      operationId: registerLagoon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonRegistrationRequest'
        description: リクエスト。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagoonRegistrationResponse'
          description: 利用が開始されました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon 3 の利用を開始する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon register
  /lagoon/terminate:
    post:
      description: |
        SORACOM Lagoon を解約します。

        **Warning**: ルートユーザーの認証情報を使用して実行してください。SAM ユーザーの認証情報では、Lagoon を解約できません。
      operationId: terminateLagoon
      responses:
        "204":
          description: 解約されました。
        "400":
          description: 不正なリクエストです。
        "404":
          description: オペレーターが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon を解約する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon terminate
  /lagoon/users:
    get:
      description: オペレーターに属する SORACOM Lagoon のユーザー一覧を取得します。
      operationId: listLagoonUsers
      parameters:
      - description: |
          値が `true` の場合、Lagoon 2 にリクエストが発行されます。
          このプロパティは、Lagoon 2 と Lagoon 3 を利用している場合のみ有効です。
        in: query
        name: v2
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LagoonUser'
                type: array
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターに属する SORACOM Lagoon のユーザー一覧を取得する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon list-users
      - lagoon users list
    post:
      description: SORACOM Lagoon のユーザーを新たに作成します。
      operationId: createLagoonUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserCreationRequest'
        description: リクエスト。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagoonUserCreationResponse'
          description: 作成されました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーを新たに作成する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon create-user
      - lagoon users create
  /lagoon/users/{lagoon_user_id}:
    delete:
      description: SORACOM Lagoon のユーザーを削除します。
      operationId: deleteLagoonUser
      parameters:
      - description: 対象の SORACOM Lagoon ユーザーの ID。
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: 削除されました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーを削除する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon delete-user
      - lagoon users delete
  /lagoon/users/{lagoon_user_id}/email:
    put:
      description: SORACOM Lagoon のユーザーのメールアドレスを変更します。
      operationId: updateLagoonUserEmail
      parameters:
      - description: 対象の SORACOM Lagoon ユーザーの ID。
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserEmailUpdatingRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーのメールアドレスを変更する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-email
      - lagoon users update-email
  /lagoon/users/{lagoon_user_id}/password:
    put:
      description: SORACOM Lagoon のユーザーのパスワードを変更します。
      operationId: updateLagoonUserPassword
      parameters:
      - description: 対象の SORACOM Lagoon ユーザーの ID。
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserPasswordUpdatingRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーのパスワードを変更する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-password
      - lagoon users update-password
  /lagoon/users/{lagoon_user_id}/permission:
    put:
      description: SORACOM Lagoon のユーザーの権限を変更します。
      operationId: updateLagoonUserPermission
      parameters:
      - description: 対象の SORACOM Lagoon ユーザーの ID。
        in: path
        name: lagoon_user_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagoonUserPermissionUpdatingRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Lagoon のユーザーの権限を変更する
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-permission
      - lagoon users update-permission
  /logs:
    get:
      description: |
        条件に合うエラーログを取得します。エラーログが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getLogs
      parameters:
      - description: |
          エラーログ取得対象のリソースのタイプ。

          - `Subscriber`: IoT SIM。
          - `Device`: Inventory デバイス。
          - `LoraDevice`: LoRaWAN デバイス。
          - `SigfoxDevice`: Sigfox デバイス。
        in: query
        name: resource_type
        required: false
        schema:
          enum:
          - Subscriber
          - Device
          - LoraDevice
          - SigfoxDevice
          type: string
      - description: |
          エラーログ取得対象リソースの ID。`resource_type` の値によって、指定する ID が異なります。

          | `resource_type` | 指定する ID |
          |-|-|
          | `Subscriber` | IoT SIM の IMSI。IMSI は [Sim:listSims API](#/Sim/listSims) で取得できます。 |
          | `Device` | Inventory デバイスの ID。ID は [Device:listDevices API](#/Device/listDevices) で取得できます。 |
          | `LoraDevice` | LoRaWAN デバイスの ID。ID は [LoraDevice:listLoraDevices API](#/LoraDevice/listLoraDevices) で取得できます。 |
          | `SigfoxDevice` | Sigfox デバイスの ID。ID は [SigfoxDevice:listSigfoxDevices API](#/SigfoxDevice/listSigfoxDevices) で取得できます。 |
        in: query
        name: resource_id
        required: false
        schema:
          type: string
      - description: |
          エラーログをフィルタするためのサービス名。

          - `Air`: SORACOM Air
          - `Beam`: SORACOM Beam
          - `Funk`: SORACOM Funk
          - `Funnel`: SORACOM Funnel
          - `Harvest`: SORACOM Harvest Data/Files
          - `Napter`: SORACOM Napter
          - `Orbit`: SORACOM Orbit
          - `Unified`: Unified Endpoint
        in: query
        name: service
        required: false
        schema:
          enum:
          - Air
          - Beam
          - Funk
          - Funnel
          - Harvest
          - Napter
          - Orbit
          - Unified
          type: string
      - description: エラーログ取得対象の期間の始まり (UNIX 時間 (ミリ秒))。
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: エラーログ取得対象の期間の終わり (UNIX 時間 (ミリ秒))。
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するエラーログ数の上限。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページを取得したときに返された `x-soracom-next-key` ヘッダーに含まれる値。次ページを取得する場合に指定します。詳しくは、[大量のデータを取得する
          (ページング)](/ja-jp/tools/api/paging/) を参照してください。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEntry'
                type: array
          description: エラーログのリスト。
      security:
      - api_key: []
        api_token: []
      summary: エラーログを取得する
      tags:
      - Log
      x-soracom-cli:
      - logs get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices:
    get:
      description: |
        条件に合う LoRAWAN デバイスを取得します。LoRaWAN デバイスが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listLoraDevices
      parameters:
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 取得する LoRaWAN デバイスの上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の LoRaWAN デバイスの Device ID。このパラメータを指定することで次の LoRaWAN
          デバイス以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraDevice'
                type: array
          description: 条件にマッチする LoRaWAN デバイスのリスト
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイス のリストを取得する
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices/{device_id}:
    get:
      description: 指定された LoRaWAN デバイスの情報を返す。
      operationId: getLoraDevice
      parameters:
      - description: 対象の LoRaWAN デバイスの Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 指定された LoRaWAN デバイスの詳細情報
        "404":
          description: 指定された LoRaWAN デバイスが存在しない
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスの情報を取得する
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get
  /lora_devices/{device_id}/data:
    get:
      description: |
        指定した LoRaWAN デバイス から Harvest Data に送信されたデータの中で、条件に合うデータを取得します。データエントリが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getDataFromLoraDevice
      parameters:
      - description: データ取得対象の LoRaWAN デバイスの ID。LoRaWAN デバイスの ID は [LoraDevice:listLoraDevices
          API](#/LoraDevice/listLoraDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限 (1 〜 1000)。デフォルトは、`10` です。
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスから Harvest Data に送信されたデータを取得する
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定したデバイスにデータを送信する。データは LoRa Network Server にセットされ、次に利用可能なデータ送信スロットを使って指定デバイスに送信される。未送信のデータが
        LoRa Network Server にあった場合には、最新の受信データで上書きされる。一定時間 (2 時間) デバイスに受け取られなかったデータは破棄されます。
      operationId: sendDataToLoraDevice
      parameters:
      - description: 送信先デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraData'
        description: 16 進数でエンコードされたバイナリデータの文字列。バイナリデータの最大サイズは 11 octets (16 進数エンコードされた文字列で
          22 文字)。文字数は偶数でなければなりません。fPort を任意で指定できます。fPort は 0 以上でなければなりません。0 はコントロールプレーンに使用され、通常は
          1 以上を使用します。無効な値が与えられた場合には特定ベンダーのデバイスで問題が起こらないように設定されたデフォルト値である 2 が使用されます。
        required: true
      responses:
        "204":
          description: データは LoRa Network Server にセットされ、送信先デバイスが取得できる状態になったことを示す。
        "400":
          description: 与えられた JSON に無効な値が含まれている。
        "404":
          description: 指定された LoRa デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスにデータを送信する
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices send-data
  /lora_devices/{device_id}/disable_termination:
    post:
      description: 指定された LoRaWAN デバイスを Terminate 不可能に設定する
      operationId: disableTerminationOnLoraDevice
      parameters:
      - description: 対象の LoRaWAN デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRaWAN デバイスの詳細情報
        "404":
          description: 指定された LoRaWAN デバイスが存在しない
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスをターミネイト不可にする
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices disable-termination
  /lora_devices/{device_id}/enable_termination:
    post:
      description: 指定された LoRaWAN デバイスを Terminate 可能に設定する
      operationId: enableTerminationOnLoraDevice
      parameters:
      - description: 対象の LoRaWAN デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRaWAN デバイスの詳細情報
        "404":
          description: 指定された LoRaWAN デバイスが存在しない
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスをターミネイト可能にする
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices enable-termination
  /lora_devices/{device_id}/register:
    post:
      description: LoRaWAN デバイスを登録
      operationId: registerLoraDevice
      parameters:
      - description: 対象の LoRaWAN デバイスの Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLoraDeviceRequest'
        description: LoRaWAN デバイス
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: LoRaWAN デバイス登録完了
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスを登録する
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices register
  /lora_devices/{device_id}/set_group:
    post:
      description: LoRaWAN デバイスを LoRaWAN グループに所属させます。
      operationId: setLoraDeviceGroup
      parameters:
      - description: 対象の LoRaWAN デバイスの ID。LoRaWAN デバイスの ID は [LoraDevice:listLoraDevices
          API](#/LoraDevice/listLoraDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRaWAN デバイスの詳細情報。
        "404":
          description: LoRaWAN デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスを LoRaWAN グループに所属させる
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices set-group
  /lora_devices/{device_id}/tags:
    put:
      description: 指定された LoRaWAN デバイスのタグを追加・更新
      operationId: putLoraDeviceTags
      parameters:
      - description: 対象の LoRaWAN デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRaWAN デバイスの詳細情報
        "404":
          description: 指定された LoRaWAN デバイスが存在しない
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスのタグを追加・更新する
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices put-tags
  /lora_devices/{device_id}/tags/{tag_name}:
    delete:
      description: 指定された LoRaWAN デバイスのタグを削除
      operationId: deleteLoraDeviceTag
      parameters:
      - description: 対象の LoRaWAN デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名 (URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する)
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された LoRaWAN デバイスあるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスのタグを削除する
      tags:
      - LoraDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - lora-devices delete-tag
  /lora_devices/{device_id}/terminate:
    post:
      description: 指定された LoRaWAN デバイスを Terminate
      operationId: terminateLoraDevice
      parameters:
      - description: 対象の LoRaWAN デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRaWAN デバイスの詳細情報
        "404":
          description: 指定された LoRaWAN デバイスが存在しない
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスをターミネイトする
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices terminate
  /lora_devices/{device_id}/unset_group:
    post:
      description: LoRaWAN デバイスを LoRaWAN グループから外します。
      operationId: unsetLoraDeviceGroup
      parameters:
      - description: 対象の LoRaWAN デバイスの ID。LoRaWAN デバイスの ID は [LoraDevice:listLoraDevices
          API](#/LoraDevice/listLoraDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraDevice'
          description: 更新後の LoRaWAN デバイスの詳細情報。
        "404":
          description: LoRaWAN デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN デバイスを LoRaWAN グループから外す
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices unset-group
  /lora_gateways:
    get:
      description: |
        条件に合う LoRAWAN ゲートウェイを取得します。LoRaWAN ゲートウェイが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listLoraGateways
      parameters:
      - description: 検索対象にするタグの名前 (完全一致)。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 一度に取得する LoRaWAN ゲートウェイの数の上限。
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: 前ページで取得した最後の LoRaWAN ゲートウェイの ID。このパラメータを指定することで次の LoRaWAN ゲートウェイ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraGateway'
                type: array
          description: LoRaWAN ゲートウェイのリスト。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイのリストを取得する
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_gateways/{gateway_id}:
    get:
      description: 指定された LoRaWAN ゲートウェイの情報を返す。
      operationId: getLoraGateway
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 指定された LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイの情報を取得する
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways get
  /lora_gateways/{gateway_id}/disable_termination:
    post:
      description: 指定された LoRaWAN ゲートウェイを Terminate 不可能に設定する。
      operationId: disableTerminationOnLoraGateway
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイをターミネイト不可にする
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways disable-termination
  /lora_gateways/{gateway_id}/enable_termination:
    post:
      description: 指定された LoRaWAN ゲートウェイを Terminate 可能に設定する。
      operationId: enableTerminationOnLoraGateway
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイをターミネイト可能にする
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways enable-termination
  /lora_gateways/{gateway_id}/set_network_set:
    post:
      description: 指定された LoRaWAN ゲートウェイの Network Set ID を指定あるいは上書き変更。
      operationId: setLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/SetNetworkSetRequest'
        description: LoRaWAN ネットワーク ID。
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイの Network Set ID を設定・更新する
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways set-network-set
  /lora_gateways/{gateway_id}/tags:
    put:
      description: 指定された LoRaWAN ゲートウェイのタグを追加・更新。
      operationId: putLoraGatewayTags
      parameters:
      - description: 対象の LoRaWAN デバイスの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイのタグを追加・更新する
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways put-tags
  /lora_gateways/{gateway_id}/tags/{tag_name}:
    delete:
      description: 指定された LoRaWAN ゲートウェイのタグを削除。
      operationId: deleteLoraGatewayTag
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名 (URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する)。
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了。
        "404":
          description: 指定された LoRaWAN ゲートウェイあるいはタグが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイのタグを削除する
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways delete-tag
  /lora_gateways/{gateway_id}/terminate:
    post:
      description: 指定された LoRaWAN ゲートウェイを Terminate。
      operationId: terminateLoraGateway
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイをターミネイトする
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways terminate
  /lora_gateways/{gateway_id}/unset_network_set:
    post:
      description: 指定された LoRaWAN ゲートウェイの Network Set ID を削除。
      operationId: unsetLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ゲートウェイの ID。
        in: path
        name: gateway_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraGateway'
          description: 更新後の LoRaWAN ゲートウェイの詳細情報。
        "404":
          description: 指定された LoRaWAN ゲートウェイが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ゲートウェイの Network Set ID を削除する
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways unset-network-set
  /lora_network_sets:
    get:
      description: |
        条件に合う LoRAWAN ネットワークを取得します。LoRaWAN ネットワークが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listLoraNetworkSets
      parameters:
      - description: 検索対象にするタグの名前 (完全一致)。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 一度に取得する LoRaWAN ネットワークの数の上限。
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: 前ページで取得した最後の LoRaWAN ネットワークの ID。このパラメータを指定することで次以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraNetworkSet'
                type: array
          description: LoRaWAN ネットワークのリスト。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークのリストを取得する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: LoRaWAN ネットワークを作成する。
      operationId: createLoraNetworkSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraNetworkSet'
        description: タグなど作成対象の LoRaWAN ネットワークに設定する付加情報。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: LoRaWAN ネットワークの作成に成功。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークを作成する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets create
  /lora_network_sets/{ns_id}:
    delete:
      description: 指定された LoRaWAN ネットワークを削除する。
      operationId: deleteLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除に成功。
        "404":
          description: 指定された LoRaWAN ネットワークが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークを削除する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete
    get:
      description: 指定された LoRaWAN ネットワークの情報を返す。
      operationId: getLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: LoRaWAN ネットワークの詳細情報を取得完了。
        "404":
          description: 指定された LoRaWAN ネットワークが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークの情報を取得する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets get
  /lora_network_sets/{ns_id}/add_permission:
    post:
      description: 別の Operator から LoRaWAN ネットワークが利用できるようにパーミッションを追加する。
      operationId: addPermissionToLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
        description: 許可された Operator のリストに追加すべき Operator の ID。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: 指定された LoRaWAN ネットワークのパーミッションを更新完了。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークのパーミッションを追加する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets add-permission
  /lora_network_sets/{ns_id}/gateways:
    get:
      description: |
        指定された LoRAWAN ネットワークに属する LoRaWAN ゲートウェイを取得します。LoRaWAN ゲートウェイが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listGatewaysInLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      - description: 一度に取得する LoRaWAN ゲートウェイの数の上限。
        in: query
        name: limit
        required: false
        schema:
          format: int32d
          type: integer
      - description: 前ページで取得した最後の LoRaWAN ゲートウェイの ID。このパラメータを指定することで次の LoRaWAN ゲートウェイ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoraGateway'
                type: array
          description: LoRaWAN ゲートウェイのリスト。
        "404":
          description: 指定された LoRaWAN ネットワークが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークに所属する LoRaWAN ゲートウェイのリストを取得する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list-gateways
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_network_sets/{ns_id}/revoke_permission:
    post:
      description: 指定された LoRaWAN ネットワークの別の Operator への利用許可を取り消す。
      operationId: revokePermissionFromLoraNetworkSet
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
        description: 許可された Operator のリストに追加すべき Operator の ID。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: 指定された LoRaWAN ネットワークのパーミッションを削除完了。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークのパーミッションを削除する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets revoke-permission
  /lora_network_sets/{ns_id}/tags:
    put:
      description: 指定された LoRaWAN ネットワークのタグを追加・更新。
      operationId: putLoraNetworkSetTags
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoraNetworkSet'
          description: 更新後の LoRaWAN ネットワークの詳細情報。
        "404":
          description: 指定された LoRaWAN ネットワークが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークのタグを追加・更新する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets put-tag
  /lora_network_sets/{ns_id}/tags/{tag_name}:
    delete:
      description: 指定された LoRaWAN ネットワークのタグを削除。
      operationId: deleteLoraNetworkSetTag
      parameters:
      - description: 対象の LoRaWAN ネットワークの ID。
        in: path
        name: ns_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名 (URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する)。
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了。
        "404":
          description: 指定された LoRaWAN ネットワークあるいはタグが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: LoRaWAN ネットワークのタグを削除する
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete-tag
  /operators/{operator_id}:
    get:
      description: Operator の情報を返す。
      operationId: getOperator
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperatorResponse'
          description: OK.
        "400":
          description: 誤ったオペレーター ID が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの情報を取得する
      tags:
      - Operator
      x-soracom-cli:
      - operator get
  /operators/{operator_id}/auth_keys:
    get:
      description: オペレーターの認証キー一覧を返す。
      operationId: listOperatorAuthKeys
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKeyResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの認証キーの一覧を取得する
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys list
    post:
      description: オペレーターの認証キーを生成する。
      operationId: generateOperatorAuthKey
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateOperatorsAuthKeyResponse'
          description: 認証キーが生成されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの認証キーを生成する
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys generate
  /operators/{operator_id}/auth_keys/{auth_key_id}:
    delete:
      description: オペレーターの認証キーを削除する。
      operationId: deleteOperatorAuthKey
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 認証キー ID。
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 認証キーが削除されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの認証キーを削除する
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys delete
  /operators/{operator_id}/company_information:
    get:
      description: オペレーターの契約者情報 (法人) を返す。
      operationId: getCompanyInformation
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformationModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの契約者情報 (法人) を取得する
      tags:
      - Operator
      x-soracom-cli:
      - operator get-company-information
    post:
      description: オペレーターの契約者情報 (法人) を作成する。
      operationId: createCompanyInformation
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformationModel'
        description: オペレーターの契約者情報 (法人)。
        required: true
      responses:
        "201":
          description: 作成されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの契約者情報 (法人) を作成する
      tags:
      - Operator
      x-soracom-cli:
      - operator create-company-information
    put:
      description: オペレーターの契約者情報 (法人) を更新する。
      operationId: updateCompanyInformation
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformationModel'
        description: オペレーターの契約者情報 (法人)。
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの契約者情報 (法人) を更新する
      tags:
      - Operator
      x-soracom-cli:
      - operator update-company-information
  /operators/{operator_id}/configuration/{namespace}:
    delete:
      description: オペレーターに設定された指定のコンフィグレーションを削除します。
      operationId: deleteOperatorConfigurationNamespace
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: コンフィグレーションの種別を示すネームスペース。
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除されました。
        "400":
          description: 不正なリクエストです。
        "404":
          description: コンフィグレーションが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターに設定された指定のコンフィグレーションを削除する
      tags:
      - Operator
      x-soracom-cli:
      - operator configuration delete
    get:
      description: オペレーターに設定された指定のコンフィグレーションを返します。
      operationId: getOperatorConfigurationNamespace
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: コンフィグレーションの種別を示すネームスペース。
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorConfigurationModel'
          description: OK.
        "400":
          description: 不正なリクエストです。
        "404":
          description: コンフィグレーションが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターに設定された指定のコンフィグレーションを返す
      tags:
      - Operator
      x-soracom-cli:
      - operator configuration get
    post:
      description: オペレーターにコンフィグレーションを設定します。
      operationId: setOperatorConfigurationNamespace
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: コンフィグレーションの種別を示すネームスペース。
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOperatorConfigurationNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorConfigurationModel'
          description: OK.
        "400":
          description: 不正なリクエストです。
        "409":
          description: コンフリクトが発生しました。最新のコンフィグレーションを取得して、再度更新してください。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターにコンフィグレーションを設定する
      tags:
      - Operator
      x-soracom-cli:
      - operator configuration set
  /operators/{operator_id}/contracts:
    post:
      description: Operator のオプション契約を追加する。
      operationId: addOperatorContract
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdatingRequest'
        description: モデル。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractUpdatedResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: オペレーターのオプション契約を追加する
      tags:
      - Operator
      x-soracom-cli:
      - operator add-contract
  /operators/{operator_id}/contracts/{contract_name}:
    delete:
      description: Opearator のオプション契約を解除する。
      operationId: deleteOperatorContract
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: オプション契約の名前。
        in: path
        name: contract_name
        required: true
        schema:
          enum:
          - api_audit_log
          - harvest
          - napter
          - support
          type: string
      responses:
        "204":
          description: 削除されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターのオプション契約を削除する
      tags:
      - Operator
      x-soracom-cli:
      - operator delete-contract
  /operators/{operator_id}/coverage_type/{coverage_type}:
    post:
      description: Operator に新規のカバレッジタイプを追加する。
      operationId: addCoverageType
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: カバレッジタイプ。
        in: path
        name: coverage_type
        required: true
        schema:
          type: string
      responses:
        "201":
          description: 追加されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターにカバレッジタイプを追加する
      tags:
      - Operator
      x-soracom-cli:
      - operator add-coverage-type
  /operators/{operator_id}/emails:
    get:
      description: メールアドレスの一覧を返す。
      operationId: listEmails
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmailsModel'
                type: array
          description: OK.
        "400":
          description: |
            SAM ユーザーの認証情報を使用して呼び出しました。ルートユーザーの認証情報を使用して呼び出してください。
      security:
      - api_key: []
        api_token: []
      summary: メールアドレスの一覧を取得する
      tags:
      - Email
      x-soracom-cli:
      - emails list
  /operators/{operator_id}/emails/{email_id}:
    delete:
      description: メールアドレスを削除する。
      operationId: deleteEmail
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: メールアドレス ID。
        in: path
        name: email_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: メールアドレスを削除する
      tags:
      - Email
      x-soracom-cli:
      - emails delete
    get:
      description: メールアドレスの情報を取得する。
      operationId: getEmail
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: メールアドレス ID。
        in: path
        name: email_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: メールアドレスの情報を取得する
      tags:
      - Email
      x-soracom-cli:
      - emails get
  /operators/{operator_id}/individual_information:
    get:
      description: オペレーターの契約者情報 (個人) を取得します。
      operationId: getIndividualInformation
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualInformationModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの契約者情報 (個人) を取得する
      tags:
      - Operator
      x-soracom-cli:
      - operator get-individual-information
    post:
      description: オペレーターの契約者情報 (個人) を作成する。
      operationId: createIndividualInformation
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualInformationModel'
        description: オペレーターの契約者情報 (個人)。
        required: true
      responses:
        "201":
          description: 作成されました。
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの契約者情報 (個人) を作成する
      tags:
      - Operator
      x-soracom-cli:
      - operator create-individual-information
    put:
      description: オペレーターの契約者情報 (個人) を更新する。
      operationId: updateIndividualInformation
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualInformationModel'
        description: オペレーターの契約者情報 (個人)。
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: オペレーターの契約者情報 (個人) を更新する
      tags:
      - Operator
      x-soracom-cli:
      - operator update-individual-information
  /operators/{operator_id}/mfa:
    delete:
      description: ルートユーザーの MFA を無効化します。
      operationId: revokeMFA
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFARevokeRequest'
        required: true
      responses:
        "204":
          description: 無効化されました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーの MFA を無効化する
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-mfa
    get:
      description: ルートユーザーの MFA の状態を取得します。MFA の状態は `ACTIVE`, `INACTIVE` もしくは `UNCONFIRMED`
        のいずれかです。
      operationId: getMFAStatus
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusOfUseResponse'
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーの MFA の状態を取得する
      tags:
      - Operator
      x-soracom-cli:
      - operator get-mfa-status
    post:
      description: ルートユーザーの MFA を有効化します。この API を呼んだ後に、`Operator:verifyMFA` API を用いて
        MFA OTP を検証する必要があります。
      operationId: enableMFA
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAOTPResponse'
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーの MFA を有効化する
      tags:
      - Operator
      x-soracom-cli:
      - operator enable-mfa
  /operators/{operator_id}/mfa/verify:
    post:
      description: ルートユーザーの MFA OTP を検証します。`Operator:enableMFA` を呼んだ後に呼び出す必要があります。この
        API で正しく検証が行われるまで、MFA は有効になりません。この API のレスポンスとして返ってくるバックアップコードは必ず保管してください。
      operationId: verifyMFA
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAAuthenticationRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorMFAVerifyingResponse'
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーの MFA OTP コードを検証する
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-otp
  /operators/{operator_id}/password:
    post:
      description: ルートユーザーのパスワードを更新する。
      operationId: updateOperatorPassword
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        description: 現在のパスワードと新しいパスワード。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なパスワードです。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーのパスワードを更新する
      tags:
      - Operator
      x-soracom-cli:
      - operator update-password
  /operators/{operator_id}/roles:
    get:
      description: ロールの一覧を返す。
      operationId: listRoles
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListRolesResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: ロールの一覧を取得する
      tags:
      - Role
      x-soracom-cli:
      - roles list
  /operators/{operator_id}/roles/{role_id}:
    delete:
      description: ロールを削除する。
      operationId: deleteRole
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: ロール ID。
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定されたロールは削除されました。
        "400":
          description: 指定されたロールは使用中です。
        "404":
          description: ロールが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ロールを削除する
      tags:
      - Role
      x-soracom-cli:
      - roles delete
    get:
      description: ロールを取得する。
      operationId: getRole
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: ロール ID。
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK.
        "404":
          description: ロールが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ロールの情報を取得する
      tags:
      - Role
      x-soracom-cli:
      - roles get
    post:
      description: ロールを新しく追加する。
      operationId: createRole
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: ロール ID。
        in: path
        name: role_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
        description: パーミッション。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: OK.
        "400":
          description: ロールの作成に失敗しました。
      security:
      - api_key: []
        api_token: []
      summary: ロールを作成する
      tags:
      - Role
      x-soracom-cli:
      - roles create
    put:
      description: ロールを編集する。
      operationId: updateRole
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: ロール ID。
        in: path
        name: role_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
        description: パーミッション。
        required: true
      responses:
        "200":
          description: OK.
        "404":
          description: ロールが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ロールを更新する
      tags:
      - Role
      x-soracom-cli:
      - roles update
  /operators/{operator_id}/roles/{role_id}/users:
    get:
      description: ロールに紐づく SAM ユーザーの一覧を取得する。
      operationId: listRoleAttachedUsers
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: ロール ID。
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserDetailResponse'
                type: array
          description: OK.
        "404":
          description: ロールが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ロールに紐づく SAM ユーザーの一覧を取得する
      tags:
      - Role
      x-soracom-cli:
      - roles list-users
  /operators/{operator_id}/shipping_addresses:
    get:
      description: 商品発送先の一覧を返します。
      operationId: listShippingAddresses
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShippingAddressResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 商品発送先の一覧を取得する
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses list
    post:
      description: 商品発送先を新規登録する。
      operationId: createShippingAddress
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressModel'
        description: 商品発送先。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShippingAddressResponse'
          description: 商品発送先が登録されました。
      security:
      - api_key: []
        api_token: []
      summary: 商品発送先を登録する
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses create
  /operators/{operator_id}/shipping_addresses/{shipping_address_id}:
    delete:
      description: 商品発送先を削除する。
      operationId: deleteShippingAddress
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 商品発送先 ID。
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 商品発送先を削除する
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses delete
    get:
      description: 商品発送先を返す。
      operationId: getShippingAddress
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 商品発送先 ID。
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShippingAddressResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 商品発送先の情報を取得する
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses get
    put:
      description: 商品発送先を更新する。
      operationId: updateShippingAddress
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 商品発送先 ID。
        in: path
        name: shipping_address_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressModel'
        description: 商品発送先。
        required: true
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 商品発送先を更新する
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses update
  /operators/{operator_id}/support/token:
    post:
      description: サポート画面アクセス用のトークンを返す。
      operationId: generateSupportToken
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTokenResponse'
          description: OK.
        "400":
          description: 誤ったオペレーター ID が指定されました。
        "403":
          description: 不正なトークンです。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM サポートにアクセスするためのトークンを生成する
      tags:
      - Operator
      x-soracom-cli:
      - operator get-support-token
  /operators/{operator_id}/system_notifications:
    get:
      description: メールアドレス設定の一覧を返す。
      operationId: listSystemNotifications
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SystemNotificationsModel'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: メールアドレス設定の一覧を取得する
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications list
  /operators/{operator_id}/system_notifications/{type}:
    delete:
      description: メールアドレス設定からメールアドレスを削除する。
      operationId: deleteSystemNotification
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: メールアドレスの種類。
        in: path
        name: type
        required: true
        schema:
          enum:
          - recovery
          - billing
          - support
          type: string
      responses:
        "204":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: メールアドレス設定からメールアドレスを削除する
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications delete
    get:
      description: メールアドレス設定を返す。
      operationId: getSystemNotification
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: メールアドレスの種類。
        in: path
        name: type
        required: true
        schema:
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemNotificationsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: メールアドレス設定の情報を取得する
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications get
    post:
      description: メールアドレス設定にメールアドレスを設定する。
      operationId: setSystemNotification
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: メールアドレスの種類。
        in: path
        name: type
        required: true
        schema:
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSystemNotificationsRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemNotificationsModel'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: メールアドレス設定にメールアドレスを設定する
      tags:
      - SystemNotification
      x-soracom-cli:
      - system-notifications set
  /operators/{operator_id}/token:
    post:
      description: 新しい API トークンを発行する。現在の API トークンをヘッダーに入れてリクエストを行うと、新しい API トークンを含んだレスポンスを返す。以降のリクエスト時にはこの新しい
        API トークンを用いることができる。
      operationId: generateAuthToken
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTokenRequest'
        description: API トークンの有効期間 (秒)。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTokenResponse'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: リクエストに誤りがあるか、指定されたトークンがすでに無効になっている (後者の場合、/auth API で再度認証を行う必要がある)。
      security:
      - api_key: []
        api_token: []
      summary: 新しい API トークンを発行する
      tags:
      - Operator
      x-soracom-cli:
      - operator generate-api-token
  /operators/{operator_id}/tokens:
    delete:
      description: ルートユーザーが発行したすべての API キーと API トークンを無効化します。無効化したあとは、有効期間に関わらず API
        キーと API トークンを用いて SORACOM API を呼び出すことはできません。
      operationId: revokeOperatorAuthTokens
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ルートユーザーが発行したすべての API キーと API トークンの無効化に成功しました。
        "400":
          description: 誤ったオペレーター ID が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: ルートユーザーが発行したすべての API キーと API トークンを無効化する
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-operator-auth-tokens
  /operators/{operator_id}/users:
    get:
      description: SAM ユーザー一覧を返す。
      operationId: listUsers
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserDetailResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの一覧を取得する
      tags:
      - User
      x-soracom-cli:
      - users list
  /operators/{operator_id}/users/{user_name}:
    delete:
      description: SAM ユーザーを削除する。
      operationId: deleteUser
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された SAM ユーザーは削除されました。
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: SAM ユーザーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーを削除する
      tags:
      - User
      x-soracom-cli:
      - users delete
    get:
      description: SAM ユーザーを返す。
      operationId: getUser
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの情報を取得する
      tags:
      - User
      x-soracom-cli:
      - users get
    post:
      description: SAM ユーザーを新しく追加する。
      operationId: createUser
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        description: description
        required: true
      responses:
        "201":
          description: SAM ユーザーが新しく追加されました。
        "400":
          description: SAM ユーザーの作成に失敗しました。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーを作成する
      tags:
      - User
      x-soracom-cli:
      - users create
    put:
      description: SAM ユーザーを更新する。
      operationId: updateUser
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: description
        required: true
      responses:
        "200":
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: SAM User not found.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの情報を更新する
      tags:
      - User
      x-soracom-cli:
      - users update
  /operators/{operator_id}/users/{user_name}/auth_keys:
    get:
      description: SAM ユーザーの認証キーの一覧を返す。
      operationId: listUserAuthKeys
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKeyResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの認証キーの一覧を取得する
      tags:
      - User
      x-soracom-cli:
      - users auth-keys list
    post:
      description: SAM ユーザーの認証キーを生成する。
      operationId: generateUserAuthKey
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUserAuthKeyResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの認証キーを生成する
      tags:
      - User
      x-soracom-cli:
      - users auth-keys generate
  /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}:
    delete:
      description: SAM ユーザーの認証キーを削除する。
      operationId: deleteUserAuthKey
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された認証キーが削除されました。
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: 認証キーが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの認証キーを削除する
      tags:
      - User
      x-soracom-cli:
      - users auth-keys delete
    get:
      description: SAM ユーザーの認証キーを返す。
      operationId: getUserAuthKey
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthKeyResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの認証キーを取得する
      tags:
      - User
      x-soracom-cli:
      - users auth-keys get
  /operators/{operator_id}/users/{user_name}/mfa:
    delete:
      description: SAM ユーザーの MFA を無効にする
      operationId: revokeUserMFA
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: MFA を無効にしました
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの MFA を無効にする
      tags:
      - User
      x-soracom-cli:
      - users mfa revoke
    get:
      description: SAM ユーザーの MFA の使用状態を取得する
      operationId: getUserMFAStatus
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusOfUseResponse'
          description: OK
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの MFA の使用状態を取得する
      tags:
      - User
      x-soracom-cli:
      - users mfa get
    post:
      description: SAM ユーザーの MFA を有効化します。
      operationId: enableUserMFA
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableMFAOTPResponse'
          description: OK
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの MFA を有効化する
      tags:
      - User
      x-soracom-cli:
      - users mfa enable
  /operators/{operator_id}/users/{user_name}/mfa/verify:
    post:
      description: SAM ユーザーの MFA を有効にした後に MFA OTP が正しく受理されるかを検証する
      operationId: verifyUserMFA
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAAuthenticationRequest'
        description: request
        required: true
      responses:
        "204":
          description: 検証に成功しました
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの MFA を有効にした後に MFA OTP が正しく受理されるかを検証する
      tags:
      - User
      x-soracom-cli:
      - users mfa verify
  /operators/{operator_id}/users/{user_name}/password:
    delete:
      description: ユーザーのパスワードを削除する。
      operationId: deleteUserPassword
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ユーザーのパスワードを削除しました。
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallError'
          description: パスワードが登録されていません。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーのパスワードを削除する
      tags:
      - User
      x-soracom-cli:
      - users password delete
    get:
      description: SAM ユーザーのパスワードがセットされているかを取得する。
      operationId: hasUserPassword
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPasswordResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーのパスワードの設定状態を取得する
      tags:
      - User
      x-soracom-cli:
      - users password configured
    post:
      description: SAM ユーザーのパスワードを作成する。
      operationId: createUserPassword
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPasswordRequest'
        description: password
        required: true
      responses:
        "201":
          description: SAM ユーザーのパスワードが登録されました。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーのパスワードを作成する
      tags:
      - User
      x-soracom-cli:
      - users password create
    put:
      description: SAM ユーザーのパスワードを更新する。
      operationId: updateUserPassword
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        description: password
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーのパスワードを更新する
      tags:
      - User
      x-soracom-cli:
      - users password update
  /operators/{operator_id}/users/{user_name}/permission:
    delete:
      description: SAM ユーザーの権限を削除する。
      operationId: deleteUserPermission
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 権限を削除しました。
        "400":
          description: 不正なオペレーター ID または SAM ユーザー名です。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの権限を削除する
      tags:
      - User
      x-soracom-cli:
      - users permissions delete
    get:
      description: SAM ユーザーの権限を取得する。
      operationId: getUserPermission
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPermissionResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの権限を取得する
      tags:
      - User
      x-soracom-cli:
      - users permissions get
    put:
      description: SAM ユーザーの権限を更新する。
      operationId: updateUserPermission
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserPermissionRequest'
        description: 権限
        required: true
      responses:
        "200":
          description: OK
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーの権限を更新する
      tags:
      - User
      x-soracom-cli:
      - users permissions update
  /operators/{operator_id}/users/{user_name}/roles:
    get:
      description: SAM ユーザーのロールの一覧を取得する。
      operationId: listUserRoles
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名。
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleResponse'
                type: array
          description: OK.
        "404":
          description: SAM ユーザーが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーに紐づくロールの一覧を取得する
      tags:
      - Role
      x-soracom-cli:
      - users list-roles
    post:
      description: SAM ユーザーにロールをアタッチする。
      operationId: attachRole
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名。
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachRoleRequest'
        description: ロール ID。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 指定されたロールはすでにアタッチされているか、あるいは存在しません。
        "404":
          description: SAM ユーザーが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーにロールをアタッチする (紐づける)
      tags:
      - Role
      x-soracom-cli:
      - users attach-role
  /operators/{operator_id}/users/{user_name}/roles/{role_id}:
    delete:
      description: SAM ユーザーからロールをデタッチする。
      operationId: detachRole
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名。
        in: path
        name: user_name
        required: true
        schema:
          type: string
      - description: ロール ID。
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
        "404":
          description: SAM ユーザーまたはロールが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SAM ユーザーからロールをデタッチする (紐づけを解除する)
      tags:
      - Role
      x-soracom-cli:
      - users detach-role
  /operators/{operator_id}/users/{user_name}/tokens:
    delete:
      description: 指定された SAM ユーザーに対して発行されたすべての API キーと API トークンを無効化します。無効化されたあとは、有効期間に関わらず
        API キーと API トークンを用いて SORACOM API を呼び出すことはできません。
      operationId: revokeUserAuthTokens
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定されたユーザーに対して発行されたすべての API キーと API トークンの無効化に成功しました。
        "400":
          description: 誤ったオペレーター ID または SAM ユーザー名が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: 指定された SAM ユーザーに対して発行されたすべての API キーと API トークンを無効化する
      tags:
      - User
      x-soracom-cli:
      - users revoke-user-auth-tokens
  /operators/{operator_id}/users/{user_name}/trust_policy:
    delete:
      description: SAM ユーザーに設定された信頼ポリシーを削除します。
      operationId: deleteUserTrustPolicy
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名。
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 信頼ポリシーの削除に成功しました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: 信頼ポリシーを削除する
      tags:
      - User
      x-soracom-cli:
      - users trust-policy delete
    get:
      description: SAM ユーザーに設定された信頼ポリシーを取得します。
      operationId: getUserTrustPolicy
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名。
        in: path
        name: user_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserTrustPolicyResponse'
          description: 信頼ポリシーの取得に成功しました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: 信頼ポリシーを取得する
      tags:
      - User
      x-soracom-cli:
      - users trust-policy get
    put:
      description: |
        `operator_id` と `user_name` で指定した SAM ユーザーに設定された信頼ポリシーを更新します。

        **Warning**: 信頼ポリシーを設定すると、リクエストボディで指定したルートユーザーまたは SAM ユーザー (元のユーザー) が、`operator_id` と `user_name` で指定した SAM ユーザー(スイッチ先のユーザー) にスイッチできるようになります。元のユーザーがスイッチしたときは、元のユーザーに、スイッチ先のユーザーと同じ権限が与えられ、権限によっては、セッション履歴、通信量履歴など、このオペレーターに関する機微な情報を参照できることがあります。
      operationId: updateUserTrustPolicy
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: SAM ユーザー名。
        in: path
        name: user_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserTrustPolicyRequest'
        description: 信頼ポリシーを指定します。
        required: true
      responses:
        "204":
          description: 信頼ポリシーの更新に成功しました。
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: 信頼ポリシーを更新する
      tags:
      - User
      x-soracom-cli:
      - users trust-policy update
  /operators/{operator_id}/users/default_permissions:
    delete:
      description: すべての SAM ユーザーに適用されるデフォルト権限を削除する。
      operationId: deleteDefaultPermissions
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 削除しました。
        "403":
          description: 許可されていません。
        "404":
          description: オペレーターが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: すべての SAM ユーザーに適用されるデフォルト権限を削除する
      tags:
      - User
      x-soracom-cli:
      - users default-permissions delete
    get:
      description: すべての SAM ユーザーに適用されるデフォルト権限を取得する。
      operationId: getDefaultPermissions
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultPermissionsResponse'
          description: OK
        "403":
          description: 許可されていません
        "404":
          description: オペレーターが存在しません
      security:
      - api_key: []
        api_token: []
      summary: すべての SAM ユーザーに適用されるデフォルト権限を取得する
      tags:
      - User
      x-soracom-cli:
      - users default-permissions get
    put:
      description: すべての SAM ユーザーに適用されるデフォルト権限を更新します。
      operationId: updateDefaultPermissions
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultPermissionsRequest'
        description: request
        required: true
      responses:
        "202":
          description: 受理されました
        "400":
          description: 不正なリクエストです
        "403":
          description: 許可されていません
      security:
      - api_key: []
        api_token: []
      summary: すべての SAM ユーザーに適用されるデフォルト権限を更新する
      tags:
      - User
      x-soracom-cli:
      - users default-permissions update
  /operators/add_email_token/issue:
    post:
      description: メールアドレス追加用のトークンをメールで送付する。
      operationId: issueAddEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAddEmailTokenRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: メール登録数の最大を超過しました。
      security:
      - api_key: []
        api_token: []
      summary: メールアドレス追加用のトークンを送付する
      tags:
      - Email
      x-soracom-cli:
      - emails issue-add-email-token
  /operators/add_email_token/verify:
    post:
      description: メールアドレス追加用のトークンを確認して、メールアドレスを追加する。
      operationId: verifyAddEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyAddEmailTokenRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: OK.
      summary: メールアドレス追加用のトークンを検証する
      tags:
      - Email
      x-soracom-cli:
      - emails verify-add-email-token
  /operators/mfa_revoke_token/issue:
    post:
      description: ルートユーザーの MFA を無効化するためのトークンを発行します。この API が呼ばれた後、トークンはメールで送信されます。
      operationId: issueMFARevokingToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFAIssueRevokingTokenRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエストです。
        "404":
          description: オペレーターが存在しません。
      summary: ルートユーザーの MFA を無効化するためのトークンを発行する
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-mfa-revoke-token
  /operators/mfa_revoke_token/verify:
    post:
      description: MFA を無効化するためのワンタイムトークン、アカウントのメールアドレス、パスワードおよびバックアップコードの組み合わせによって
        MFA を無効化します。検証に成功すると、MFA が無効化されます。
      operationId: verifyMFARevokingToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFARevokingTokenVerifyRequest'
        description: リクエスト。
        required: true
      responses:
        "200":
          description: 無効化されました。
        "400":
          description: 不正なリクエストです。
        "403":
          description: メールアドレスまたはパスワードが誤っています。
      summary: ルートユーザーの MFA を無効化するためのトークンを検証して MFA を無効化する
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-revoke-token
  /orders:
    get:
      description: |
        発注確定済みの注文履歴の一覧を取得します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: listOrders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrderResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 発注確定済みの注文履歴の一覧を取得する
      tags:
      - Order
      x-soracom-cli:
      - orders list
    post:
      description: 新規で発注見積もりの作成を行います。orderId を /orders/{order_id}/confirm に PUT すると発注が完了します。
      operationId: createQuotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEstimatedOrderRequest'
        description: 注文品リストと配送先 ID
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedOrderModel'
          description: 発注見積もりが作成されました。
      security:
      - api_key: []
        api_token: []
      summary: 見積もりを作成する
      tags:
      - Order
      x-soracom-cli:
      - orders create
  /orders/{order_id}:
    get:
      description: |
        発注確定済みの注文履歴を 1 件だけ取得します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: getOrder
      parameters:
      - description: 発注 ID。[Order:listOrders API](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 発注確定済みの発注情報を 1 件だけ取得する
      tags:
      - Order
      x-soracom-cli:
      - orders get
  /orders/{order_id}/cancel:
    put:
      description: 発注をキャンセルします。既に発送済みの場合はエラーが返されます。
      operationId: cancelOrder
      parameters:
      - description: 発注 ID。[Order:listOrders API](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                type: string
          description: 発注がキャンセルされました。
      security:
      - api_key: []
        api_token: []
      summary: 発注をキャンセルする
      tags:
      - Order
      x-soracom-cli:
      - orders cancel
  /orders/{order_id}/confirm:
    put:
      description: |
        与信を実施し、問題ない場合に発注を確定します。

        **Warning**: 確定できる発注は、過去 1 か月までに完了した発注のみです。1 か月を経過した場合は、発注操作をやり直してください。
      operationId: confirmOrder
      parameters:
      - description: 発注 ID。[Order:listOrders API](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 発注を確定する
      tags:
      - Order
      x-soracom-cli:
      - orders confirm
  /orders/{order_id}/resource_initial_setting:
    put:
      description: |
        発注した商品に対して初期設定を指定します。

        **Warning**: 受け取り確認後の IoT SIM の初期設定は指定できません。
      operationId: updateOrderedResourceInitialSetting
      parameters:
      - description: 発注 ID。[Order:listOrders API](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceInitialSetting'
        description: 発注した商品に対する初期設定
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: 初期設定の更新に成功しました。
        "400":
          description: 指定したリクエストに誤りがあります。
        "404":
          description: オーダー ID が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 発注した商品に対して初期設定を指定する
      tags:
      - Order
      x-soracom-cli:
      - orders resource-initial-setting update
  /orders/{order_id}/subscribers:
    get:
      description: |
        発注した IoT SIM の一覧を返します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: listOrderedSubscribers
      parameters:
      - description: 発注 ID。[Order:listOrders API](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      - description: 前ページを取得したときに返された `x-soracom-next-key` ヘッダーに含まれる値。次ページを取得する場合に指定します。詳しくは、[大量のデータを取得する
          (ページング)](/ja-jp/tools/api/paging/) を参照してください。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: レスポンスに含まれる最大 Subscriber 数
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrderedSubscriberResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 発注した IoT SIM の一覧を取得する
      tags:
      - Order
      x-soracom-cli:
      - orders list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /orders/{order_id}/subscribers/register:
    post:
      description: |
        発注した IoT SIM をオペレーターに登録します。

        **Warning**: 登録できる IoT SIM は、過去 18 か月までです。それ以前に発注した IoT SIM を登録する場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: registerOrderedSim
      parameters:
      - description: 発注 ID。[Order:listOrders API](#/Order/listOrders) を呼び出すと取得できます。
        in: path
        name: order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                type: string
          description: 発注した IoT SIM がオペレーターに登録されました。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM をオペレーターに登録する
      tags:
      - Order
      x-soracom-cli:
      - orders register-subscribers
  /payment_history/transactions/{payment_transaction_id}:
    get:
      description: |
        課金処理の結果を返します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: getPaymentTransaction
      parameters:
      - description: 課金処理 ID。[Billing:getBillingHistory API](#/Billing/getBillingHistory)
          や [Billing:getBilling API](#/Billing/getBilling) で取得できます。
        in: path
        name: payment_transaction_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentTransactionResult'
          description: OK.
        "400":
          description: 無効な課金処理 ID です。
        "404":
          description: 課金処理の結果が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 課金処理結果を取得する
      tags:
      - Payment
      x-soracom-cli:
      - payment-history get
  /payment_methods/current:
    get:
      description: 現在の支払い方法を返します。properties に詳細情報が入っています。
      operationId: getPaymentMethod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentMethodResult'
          description: OK.
        "404":
          description: 支払い方法が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 現在の支払い方法を取得する
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods get-current
  /payment_methods/current/activate:
    post:
      description: エラーのある現在の支払い方法を有効化します。
      operationId: activatePaymentMethod
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK.
        "404":
          description: 支払い方法が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 現在の支払い方法を有効化する
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods reactivate-current
  /payment_statements:
    get:
      description: |
        課金明細の一覧を返します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: listPaymentStatements
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaymentStatementResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 課金明細の一覧を取得する
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements list
  /payment_statements/{payment_statement_id}/export:
    post:
      description: |
        課金明細を出力します。

        **Warning**: 取得できる情報は、過去 18 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: exportPaymentStatement
      parameters:
      - description: 課金明細 ID
        in: path
        name: payment_statement_id
        required: true
        schema:
          type: string
      - description: 出力モード (非同期, 同期)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
        "400":
          description: 無効な課金明細 ID です。
      security:
      - api_key: []
        api_token: []
      summary: 課金明細をエクスポートする
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements export
  /payment_statements/payer_information:
    get:
      description: 課金明細に出力する支払い者情報を取得します。
      operationId: getPayerInformation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPayerInformationModel'
          description: OK.
        "400":
          description: 支払い者情報が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 支払い者情報を取得する
      tags:
      - Payment
      x-soracom-cli:
      - payer-information get
    post:
      description: 課金明細に出力する支払い者情報を設定します。
      operationId: registerPayerInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayerInformationModel'
        description: 課金明細に登録する支払い者情報
        required: true
      responses:
        "201":
          description: Created.
        "400":
          description: 無効な支払い者情報です。
      security:
      - api_key: []
        api_token: []
      summary: 支払い者情報を登録する
      tags:
      - Payment
      x-soracom-cli:
      - payer-information register
  /port_mappings:
    get:
      description: オンデマンドリモートアクセスのリストを返します。
      operationId: listPortMappings
      parameters:
      - description: 取得結果のページごとの最大表示件数。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のオンデマンドリモートアクセスの ID。このパラメータを指定することで次のオンデマンドリモートアクセスから始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PortMapping'
                type: array
          description: オンデマンドリモートアクセスのリスト。
      security:
      - api_key: []
        api_token: []
      summary: オンデマンドリモートアクセスのリストを取得する
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: オンデマンドリモートアクセスを新規作成します。
      operationId: createPortMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortMappingRequest'
        description: 作成するオンデマンドリモートアクセスの設定。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortMapping'
          description: オンデマンドリモートアクセスが作成された。
      security:
      - api_key: []
        api_token: []
      summary: オンデマンドリモートアクセスを作成する
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings create
  /port_mappings/{ip_address}/{port}:
    delete:
      description: 指定したオンデマンドリモートアクセスを削除します。
      operationId: deletePortMapping
      parameters:
      - description: 対象となるオンデマンドリモートアクセスの IP アドレス。
        in: path
        name: ip_address
        required: true
        schema:
          type: string
      - description: 対象となるオンデマンドリモートアクセスのポート番号。
        in: path
        name: port
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定したオンデマンドリモートアクセスの削除を完了した。
        "404":
          description: 指定したオンデマンドリモートアクセスは存在しない。
      security:
      - api_key: []
        api_token: []
      summary: オンデマンドリモートアクセスを削除する
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings delete
  /port_mappings/sims/{sim_id}:
    get:
      description: IoT SIM に紐づくオンデマンドリモートアクセスのリストを取得します。
      operationId: listPortMappingsForSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PortMapping'
                type: array
          description: IoT SIM に紐づくオンデマンドリモートアクセスのリスト。
        "404":
          description: 指定した IoT SIM は存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に紐づくオンデマンドリモートアクセスのリストを取得する
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings list-for-sim
  /port_mappings/subscribers/{imsi}:
    get:
      description: |
        `destinationChoosingStrategy` が `IMSI_PRIORITIZED` のオンデマンドリモートアクセス (IMSI を指定して作成されたオンデマンドリモートアクセス) のリストを取得します。
      operationId: listPortMappingsForSubscriber
      parameters:
      - description: 対象の IMSI。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PortMapping'
                type: array
          description: |
            `destinationChoosingStrategy` が `IMSI_PRIORITIZED` のオンデマンドリモートアクセス (IMSI を指定して作成されたオンデマンドリモートアクセス) のリスト。
        "404":
          description: 指定した IMSI を指定して作成されたオンデマンドリモートアクセスは存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IMSI を指定して作成されたオンデマンドリモートアクセスのリストを取得する
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings get
      - port-mappings list-for-subscriber
  /products:
    get:
      description: 購入できる商品一覧を取得します。
      operationId: listProducts
      parameters:
      - in: query
        name: campaign_code
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 購入できる商品一覧を取得する
      tags:
      - Order
      x-soracom-cli:
      - products list
  /query/devices:
    get:
      description: SORACOM Inventory デバイスをクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての
        SORACOM Inventory デバイスに対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchDevices
      parameters:
      - description: 検索する SORACOM Inventory デバイスの名前。
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索するグループの名前。
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する SORACOM Inventory デバイスの ID。
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索するタグの値の文字列。
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する SORACOM Inventory デバイスの bootstrap 時の IMSI。
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する SORACOM Inventory デバイスの bootstrap 時の IMEI。
        explode: true
        in: query
        name: imei
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 取得する結果の上限数。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 前ページで取得した最後の SORACOM Inventory デバイスの ID。このパラメータを指定することで次の SORACOM
          Inventory デバイス以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)。
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
          description: 正常に検索結果を返却。
        "400":
          description: 不正な検索クエリ。
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Inventory デバイスをクエリに応じて検索する
      tags:
      - Query
      x-soracom-cli:
      - query devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sigfox_devices:
    get:
      description: Sigfox デバイスをクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての
        Sigfox デバイスに対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSigfoxDevices
      parameters:
      - description: 検索する Sigfox デバイスの名前。
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索するグループの名前。
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する Sigfox デバイスの ID。
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索するタグの値の文字列。
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する Sigfox デバイスの状態。
        in: query
        name: status
        required: false
        schema:
          default: and
          enum:
          - active
          - inactive
          - suspended
          - terminated
          - shipped
          - ready
          - inStock
          - banned
          - standby
          type: string
      - description: 検索する Sigfox デバイスの登録状態。
        in: query
        name: registration
        required: false
        schema:
          default: and
          enum:
          - notStarted
          - pending
          - success
          - failed
          type: string
      - description: 取得する結果の上限数。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 前ページで取得した最後の Sigfox デバイスの ID。このパラメータを指定することで次の Sigfox デバイス以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)。
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SigfoxDevice'
                type: array
          description: 正常に検索結果を返却。
        "400":
          description: 不正な検索クエリ。
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスをクエリに応じて検索する
      tags:
      - Query
      x-soracom-cli:
      - query sigfox-devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sims:
    get:
      description: |
        クエリパラメータに指定した条件で、IoT SIM を検索します。

        - 部分一致で検索できます。
        - 大文字と小文字は区別されません。
        - 以下のパラメーターでは、カンマ (`,`。クエリパラメータに指定する際は `%2C`) 区切りで入力すると、複数の検索条件を指定できます。ただし、`,` 自体は検索条件として利用できません。
            - `name`
            - `group`
            - `sim_id`
            - `imsi`
            - `msisdn`
            - `iccid`
            - `serial_number`
            - `tag`
            - `status`
            - `subscription`
            - `module_type`
        - 検索条件は、2 文字以上にしてください。`,` を入力する場合は、`,` で分割された各文字列も 2 文字以上にしてください。たとえば、`ab,c` は `c` が 1 文字のため検索できません。
        - クエリパラメーターを複数指定した場合は、`search_type` で検索の種別 (AND 検索または OR 検索) を指定できます。

        **Warning**: SAM ユーザーに、この API を呼び出す権限が付与された場合は、その SAM ユーザーにはすべての IoT SIM に対してグループも含めた検索 / 一覧取得を行う権限が与えられます。
      operationId: searchSims
      parameters:
      - description: IoT SIM の名前。
        examples:
          mysim:
            summary: |
              名前に mysim が含まれた IoT SIM を検索する
            value: mysim
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IoT SIM が所属する [グループ](/ja-jp/docs/group-configuration/) の名前。
        examples:
          mygroup:
            summary: |
              所属するグループの名前に mygroup が含まれた IoT SIM を検索する
            value: mygroup
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '[SIM ID](/ja-jp/resources/glossary/#sim-id)。'
        explode: true
        in: query
        name: sim_id
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '[IMSI (International Mobile Subscriber Identity)](/ja-jp/resources/glossary/#imsi-international-mobile-subscriber-identity)。'
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '[MSISDN (Mobile Station International Subscriber Directory Number)](/ja-jp/resources/glossary/#msisdn-mobile-station-international-subscriber-directory-number)。'
        explode: true
        in: query
        name: msisdn
        required: false
        schema:
          items:
            type: string
          type: array
      - description: ICCID (Integrated Circuit Card ID)。SIM カードや仮想的な IoT SIM (バーチャル
          SIM/Subscriber) を識別するための識別子。
        explode: true
        in: query
        name: iccid
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IoT SIM の裏面に記載された製造番号。特定地域向け IoT SIM にのみ設定されています。
        explode: true
        in: query
        name: serial_number
        required: false
        schema:
          items:
            type: string
          type: array
      - description: IoT SIM のタグの値の文字列。詳しくは、[IoT SIM に付加情報 (タグ) を設定する](/ja-jp/docs/air/set-tag/)
          を参照してください。
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: バンドル
        explode: true
        in: query
        name: bundles
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          IoT SIM のステータス。

          - `ready`: 準備完了 (ready)。
          - `active`: 使用中 (active)。
          - `inactive`: 休止中 (inactive)。
          - `standby`: 利用開始待ち (standby)。
          - `suspended`: 利用中断中 (suspended)。
          - `terminated`: 解約済み (terminated)。
          - `shipped`: 出荷済み。
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          セッションの状態。

          - `NA`: 任意。
          - `ONLINE`: オンライン。
          - `OFFLINE`: オフライン。
        in: query
        name: session_status
        required: false
        schema:
          default: NA
          enum:
          - NA
          - ONLINE
          - OFFLINE
          format: string
          type: string
      - description: |
          IoT SIM のサブスクリプション。

          グローバルカバレッジ:
          - `plan01s`
          - `plan01s-low_data_volume`: plan01s - Low Data Volume。
          - `planP1`
          - `planX1`
          - `planX2`
          - `planX3`: planX3 X3-5MB、planX3。
          - `planX3-EU`
          - `plan-NA1-package`
          - `plan-US`
          - `plan-US-NA`
          - `plan-US-max`
          - `planArc01`: バーチャル SIM/Subscriber。

          日本カバレッジ:
          - `plan-D`: plan-D D-300MB、plan-D (バンドルなし)。
          - `plan-K2`: plan-K2 K2-300MB。
          - `plan-KM1`
          - `plan-DU`
          - `plan-K`
          - `planArc01`: バーチャル SIM/Subscriber。
        explode: true
        in: query
        name: subscription
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          IoT SIM のモジュールタイプ。

          - `mini`: 標準。
          - `micro`: マイクロ。
          - `nano`: ナノ。
          - `trio`: 3 in 1。
          - `embedded`: Embedded (MFF2)。
          - `virtual`: バーチャル。
          - `integrated`: Embedded (iSIM)
        explode: true
        in: query
        name: module_type
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 取得する結果の上限数。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 前ページで取得した最後の SIM の SIM ID。このパラメータを指定することで次の SIM 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: |
          検索の種別。

          - AND: すべての検索条件に一致する IoT SIM が取得できます (デフォルト)。
          - OR: いずれかの検索条件に一致する IoT SIM が取得できます。

          検索条件にカンマ (`,`。クエリパラメータに指定する際は `%2C`) が含まれる場合は、カンマで分割されたあとの文字列が、複数の検索条件として扱われ、AND または OR の設定に従って評価されます。
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: 正常に検索結果を返却。
        "400":
          description: 不正な検索クエリ。
      security:
      - api_key: []
        api_token: []
      summary: SIM をクエリに応じて検索する
      tags:
      - Query
      x-soracom-cli:
      - query sims
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers:
    get:
      deprecated: true
      description: (非推奨の API です。代わりに `/query/sims` API を利用することを検討してください。) Subscriber
        をクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての SIM に対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSubscribers
      parameters:
      - description: 検索する Subscriber の名前。
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索するグループの名前。
        explode: true
        in: query
        name: group
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する IMSI。
        explode: true
        in: query
        name: imsi
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する MSISDN。
        explode: true
        in: query
        name: msisdn
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する ICCID。
        explode: true
        in: query
        name: iccid
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索する製造番号。
        explode: true
        in: query
        name: serial_number
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 検索するタグの値の文字列。
        explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '検索するサブスクリプション (例: `plan01s`)。'
        explode: true
        in: query
        name: subscription
        required: false
        schema:
          items:
            type: string
          type: array
      - description: '検索するモジュールタイプ (例: `mini`, `virtual`)。'
        explode: true
        in: query
        name: module_type
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 取得する結果の上限数。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          type: integer
      - description: 前ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 検索の種別 (AND 検索もしくは OR 検索)。
        in: query
        name: search_type
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: 正常に検索結果を返却。
        "400":
          description: 不正な検索クエリ。
      security:
      - api_key: []
        api_token: []
      summary: (非推奨) Subscriber をクエリに応じて検索する
      tags:
      - Query
      x-soracom-alternative-cli: query sims
      x-soracom-cli:
      - query subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers/traffic_volume/ranking:
    get:
      description: 指定された期間の Subscriber の通信量ランキングを検索して返却します。
      operationId: searchSubscriberTrafficVolumeRanking
      parameters:
      - description: 検索期間の始点 (UNIX 時間 (ミリ秒))。
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
      - description: 検索期間の終点 (UNIX 時間 (ミリ秒))。
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
      - description: 取得する結果の上限数。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 500
          type: integer
      - description: ランキングの順序。
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrafficVolumeRanking'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の通信量ランキングを返却する
      tags:
      - Query
      x-soracom-cli:
      - query subscribers traffic-volume-ranking
      - query traffic-ranking
  /resource_summaries/{resource_summary_type}:
    get:
      description: resource_summary_type で指定された種別のリソースの要約を取得します。
      operationId: getResourceSummary
      parameters:
      - description: |
          リソースの要約の種別。

          - `simsPerStatus`: ステータスごとの IoT SIM の数。
        in: path
        name: resource_summary_type
        required: true
        schema:
          enum:
          - simsPerStatus
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSummary'
          description: リソースの要約を取得しました。
        "404":
          description: 指定のリソースの要約は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: resource_summary_type で指定された種別のリソースの要約を取得する
      tags:
      - ResourceSummary
      x-soracom-cli:
      - resource-summaries get
  /sigfox_devices:
    get:
      description: |
        条件に合う Sigfox デバイスを取得します。Sigfox デバイスが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listSigfoxDevices
      parameters:
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: 取得する Sigfox device の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の Sigfox device の Device ID。このパラメータを指定することで次の Sigfox
          device 以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SigfoxDevice'
                type: array
          description: 条件にマッチする Sigfox device のリスト
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスのリストを取得する
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sigfox_devices/{device_id}:
    get:
      description: 指定された Sigfox device の情報を返す。
      operationId: getSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の Device ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 指定された Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスの情報を取得する
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get
  /sigfox_devices/{device_id}/data:
    get:
      description: |
        指定した Sigfox デバイス から Harvest Data に送信されたデータの中で、条件に合うデータを取得します。データエントリが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getDataFromSigfoxDevice
      parameters:
      - description: データ取得対象の Sigfox デバイスの ID。Sigfox デバイスの ID は [SigfoxDevice:listSigfoxDevices
          API](#/SigfoxDevice/listSigfoxDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限 (1 〜 1000)。デフォルトは、`10` です。
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスから Harvest Data に送信されたデータを取得する
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定したデバイスにデータを送信する。データはサーバに保持され、次に当該デバイスがデータ送信リクエストを行った際に送信される。未送信のデータがサーバにあった場合には、最新のデータで上書きされる。
      operationId: sendDataToSigfoxDevice
      parameters:
      - description: 送信先デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigfoxData'
        description: 16 進数でエンコードされたバイナリデータの文字列。バイナリデータのサイズは 8 octets（16 進数エンコードされた文字列で
          16 文字）である必要がある。
        required: true
      responses:
        "202":
          description: データがサーバにセットされ、対象のデバイスによる取得待ち状態になったことを示す。
        "404":
          description: 指定された Sigfox デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスにデータを送信する
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices send-data
  /sigfox_devices/{device_id}/disable_termination:
    post:
      description: 指定された Sigfox device を Terminate 不可能に設定する
      operationId: disableTerminationOnSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスをターミネイト不可にする
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices disable-termination
  /sigfox_devices/{device_id}/enable_termination:
    post:
      description: 指定された Sigfox device を Terminate 可能に設定する
      operationId: enableTerminationOnSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスをターミネイト可能にする
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices enable-termination
  /sigfox_devices/{device_id}/register:
    post:
      description: Sigfox デバイスを登録する
      operationId: registerSigfoxDevice
      parameters:
      - description: 登録対象の Sigfox デバイスの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigfoxRegistrationRequest'
        description: Sigfox デバイスの登録リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: Sigfox デバイスが正しく登録されました
        "400":
          description: PAC が指定されていません
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスを登録する
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices register
  /sigfox_devices/{device_id}/set_group:
    post:
      description: Sigfox デバイスを Sigfox グループに所属させます。
      operationId: setSigfoxDeviceGroup
      parameters:
      - description: 対象の Sigfox デバイスの ID。Sigfox デバイスの ID は [SigfoxDevice:listSigfoxDevices
          API](#/SigfoxDevice/listSigfoxDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox デバイスの詳細情報。
        "404":
          description: Sigfox デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスを Sigfox グループに所属させる
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices set-group
  /sigfox_devices/{device_id}/tags:
    put:
      description: 指定された Sigfox device のタグを追加・更新
      operationId: putSigfoxDeviceTags
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスのタグを追加・更新する
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices put-tags
  /sigfox_devices/{device_id}/tags/{tag_name}:
    delete:
      description: 指定された Sigfox device のタグを削除
      operationId: deleteSigfoxDeviceTag
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定された Sigfox device あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスのタグを削除する
      tags:
      - SigfoxDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sigfox-devices delete-tag
  /sigfox_devices/{device_id}/terminate:
    post:
      description: 指定された Sigfox device を Terminate
      operationId: terminateSigfoxDevice
      parameters:
      - description: 対象の Sigfox device の ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: Sigfox デバイスを即座に削除する
        in: query
        name: delete_immediately
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox device の詳細情報
        "404":
          description: 指定された Sigfox device が存在しない
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスをターミネイトする
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices terminate
  /sigfox_devices/{device_id}/unset_group:
    post:
      description: Sigfox デバイスを Sigfox グループから外します。
      operationId: unsetSigfoxDeviceGroup
      parameters:
      - description: 対象の Sigfox デバイスの ID。Sigfox デバイスの ID は [SigfoxDevice:listSigfoxDevices
          API](#/SigfoxDevice/listSigfoxDevices) で取得できます。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigfoxDevice'
          description: 更新後の Sigfox デバイスの詳細情報。
        "404":
          description: Sigfox デバイスが存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Sigfox デバイスを Sigfox グループから外す
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices unset-group
  /sim_profile_orders:
    get:
      description: |
        eSIM プロファイルの注文履歴の一覧を取得します。注文履歴が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listProfileOrders
      parameters:
      - description: 取得する eSIM プロファイルの注文履歴の上限。ただし、返却される注文履歴の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      - description: 前ページで取得した最後の eSIM プロファイルの注文履歴の注文 ID。このパラメータを指定することで、次の注文履歴以降のリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SimProfileOrderResponse'
                type: array
          description: eSIM プロファイルの注文履歴の一覧を取得しました。
      security:
      - api_key: []
        api_token: []
      summary: eSIM プロファイルの注文履歴の一覧を取得する
      tags:
      - SimProfileOrder
      x-soracom-cli:
      - sim-profile-orders list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: |
        eSIM プロファイルを発注します。発注後、[SimProfileOrder:confirmProfileOrder API](#/SimProfileOrder/confirmProfileOrder) を呼び出すと、発注が確定します。
        発注は 24 時間有効です。24 時間を過ぎると、自動的に取り消されます。
      operationId: createProfileOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimProfileOrderRequest'
      responses:
        "201":
          content:
            application/json:
              example:
                description: This is a test order
                orderedTime: 1718756585000
                profileOrderId: 01902ddd-1cf3-77d9-afc0-fe8d410cadb1
                quantity: 10
                status: DRAFT
                subscription: plan01s
              schema:
                $ref: '#/components/schemas/SimProfileOrderResponse'
          description: eSIM プロファイルを仮発注しました。
        "400":
          description: 指定したリクエストに誤りがあります。
      security:
      - api_key: []
        api_token: []
      summary: eSIM プロファイルを発注する
      tags:
      - SimProfileOrder
      x-soracom-cli:
      - sim-profile-orders create
  /sim_profile_orders/{profile_order_id}:
    delete:
      description: |
        eSIM プロファイルの発注を取り消します。

        **Warning**: 確定した発注は取り消せません。

        **Warning**: 発注に含まれる eSIM プロファイルのサブスクリプションの種類や数量を変更することはできません。発注を取り消して、再度発注してください。
      operationId: deleteProfileOrder
      parameters:
      - description: eSIM プロファイルの発注の注文 ID。
        in: path
        name: profile_order_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: eSIM プロファイルの発注を取り消しました。
        "404":
          description: eSIM プロファイルが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: eSIM プロファイルの発注を取り消す
      tags:
      - SimProfileOrder
      x-soracom-cli:
      - sim-profile-orders delete
    get:
      description: |
        指定の eSIM プロファイルの注文履歴を取得します。
      operationId: getProfileOrder
      parameters:
      - description: eSIM プロファイルの発注の注文 ID。
        in: path
        name: profile_order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimProfileOrderResponse'
          description: eSIM プロファイルの注文履歴を取得しました。
        "404":
          description: eSIM プロファイルが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: eSIM プロファイルの注文履歴を取得する
      tags:
      - SimProfileOrder
      x-soracom-cli:
      - sim-profile-orders get
  /sim_profile_orders/{profile_order_id}/confirm:
    post:
      description: |
        指定の eSIM プロファイルの発注を確定します。

        **Alert**: 発注を確定すると、eSIM プロファイルの初期費用が発生します。
      operationId: confirmProfileOrder
      parameters:
      - description: eSIM プロファイルの発注の注文 ID。
        in: path
        name: profile_order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                confirmedTime: 1718756585000
                description: This is a test order
                orderedTime: 1718756585000
                profileOrderId: 01902ddd-1cf3-77d9-afc0-fe8d410cadb1
                quantity: 10
                status: CONFIRMED
                subscription: plan01s
              schema:
                $ref: '#/components/schemas/SimProfileOrderResponse'
          description: eSIM プロファイルの発注を確定しました。
        "404":
          description: eSIM プロファイルが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: eSIM プロファイルの発注を確定する
      tags:
      - SimProfileOrder
      x-soracom-cli:
      - sim-profile-orders confirm
  /sim_profile_orders/{profile_order_id}/profiles:
    get:
      description: |
        指定の eSIM プロファイルの注文によって作成された eSIM プロファイルの一覧を取得します。
      operationId: listOrderedProfiles
      parameters:
      - description: eSIM プロファイルの発注の注文 ID。
        in: path
        name: profile_order_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrderedSimProfileResponse'
                type: array
          description: eSIM プロファイルの一覧を取得しました。
        "404":
          description: eSIM プロファイルが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: eSIM プロファイルの注文によって作成された eSIM プロファイルの一覧を取得する
      tags:
      - SimProfileOrder
      x-soracom-cli:
      - sim-profile-orders list-profiles
  /sims:
    get:
      description: |
        条件に合う IoT SIM を取得します。IoT SIM が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listSims
      parameters:
      - description: 取得する IoT SIM の上限。ただし、返却される IoT SIM の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の SIM ID。このパラメータを指定することで次の IoT SIM 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sim'
                type: array
          description: IoT SIM の一覧
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のリストを取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: SORACOM Arc のバーチャル SIM/Subscriber を新規作成します。詳しくは、[バーチャル SIM/Subscriber
        を作成する](/ja-jp/docs/arc/create-virtual-sim/) を参照してください。
      operationId: createSim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimRequest'
        description: バーチャル SIM/Subscriber の作成リクエスト。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: バーチャル SIM/Subscriber が作成されました。
      security:
      - api_key: []
        api_token: []
      summary: バーチャル SIM/Subscriber を新規作成する
      tags:
      - Sim
      x-soracom-cli:
      - sims create
  /sims/{sim_id}:
    get:
      description: IoT SIM の情報を取得します。
      operationId: getSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: IoT SIM の詳細情報。
        "404":
          description: IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の情報を取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims get
  /sims/{sim_id}/activate:
    post:
      description: 指定した IoT SIM のステータスを「使用中 (active)」に変更します。
      operationId: activateSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のステータスを「使用中 (active)」に変更する
      tags:
      - Sim
      x-soracom-cli:
      - sims activate
  /sims/{sim_id}/credentials/arc:
    delete:
      deprecated: true
      description: |
        (非推奨) SORACOM Arc のクレデンシャル (公開鍵) を IoT SIM から除去します。

        **Warning**: この API は利用しないでください。
      operationId: removeArcSimCredentials
      parameters:
      - description: 対象とする IoT SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Arc のクレデンシャルが IoT SIM から除去されたことを表します
      security:
      - api_key: []
        api_token: []
      summary: (非推奨) Arc のクレデンシャルを IoT SIM から除去
      tags:
      - Sim
      x-soracom-cli:
      - sims remove-arc-credentials
    post:
      deprecated: true
      description: |
        (非推奨) SORACOM Arc のクレデンシャル (公開鍵) を IoT SIM に付与します。

        **Warning**: 代わりに `renewArcSimCredentials` API を利用してください。
      operationId: attachArcSimCredentials
      parameters:
      - description: 対象とする IoT SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcCredentialAttachRequest'
        description: Arc のクレデンシャルの付与リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcCredentialAttachResponse'
          description: Arc のクレデンシャル付与成功レスポンス
      security:
      - api_key: []
        api_token: []
      summary: (非推奨) Arc のクレデンシャルを IoT SIM へ付与
      tags:
      - Sim
      x-soracom-cli:
      - sims attach-arc-credentials
    put:
      description: IoT SIM に Arc のクレデンシャルを付与し、セッションの再初期化処理を行います
      operationId: renewArcSimCredentials
      parameters:
      - description: 対象とする IoT SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArcCredentialRenewRequest'
        description: Arc のクレデンシャルの付与リクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcCredentialRenewResponse'
          description: Arc のクレデンシャルの付与およびセッションの再初期化の成功レスポンス
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対する Arc のクレデンシャルを更新する
      tags:
      - Sim
      x-soracom-cli:
      - sims renew-arc-credentials
  /sims/{sim_id}/data:
    get:
      description: |
        指定した IoT SIM から Harvest Data に送信されたデータの中で、条件に合うデータを取得します。データエントリが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getDataFromSim
      parameters:
      - description: データ取得対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限 (1 〜 1000)。デフォルトは、`10` です。
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: |
          前のページで取得した最後のデータエントリのキー。この API でのデータエントリーのキーは、`${UNIX 時間 (ミリ秒)}_${IMSI}` です。このパラメータを指定することで次のデータエントリを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM から Harvest Data に送信されたデータを取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sims/{sim_id}/deactivate:
    post:
      description: 指定した IoT SIM のステータスを「休止中 (inactive)」に変更します。
      operationId: deactivateSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のステータスを「休止中 (inactive)」に変更する
      tags:
      - Sim
      x-soracom-cli:
      - sims deactivate
  /sims/{sim_id}/delete_session:
    post:
      description: |
        指定した IoT SIM のセッションを切断して再確立します。

        **Warning**: オフラインの IoT SIM に対してセッションを切断しようとすると、以下のエラーメッセージが返されます。

        ```
        Error: {"code":"SEM0016","message":"The specified subscriber is offline"}
        ```
      operationId: deleteSimSession
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: セッションを切断して再確立する
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-session
  /sims/{sim_id}/disable_termination:
    post:
      description: 指定した IoT SIM の解約プロテクションを設定します (解約できないようにします)。
      operationId: disableSimTermination
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の解約プロテクションを設定する (解約できないようにする)
      tags:
      - Sim
      x-soracom-cli:
      - sims disable-termination
  /sims/{sim_id}/downlink/ping:
    post:
      description: IoT SIM に対して ICMP ping リクエストを送信する。
      operationId: sendDownlinkPing
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            example:
              numberOfPingRequests: 5
              timeoutSeconds: 2
            schema:
              $ref: '#/components/schemas/DownlinkPingRequest'
        description: ping リクエストのオプション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownlinkPingResponse'
          description: ping の結果
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対して ping リクエストを送信する
      tags:
      - Sim
      x-soracom-cli:
      - sims downlink-ping
  /sims/{sim_id}/enable_termination:
    post:
      description: 指定した IoT SIM の解約プロテクションを解除します (解約できるようにします)。
      operationId: enableSimTermination
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の解約プロテクションを解除する (解約できるようにする)
      tags:
      - Sim
      x-soracom-cli:
      - sims enable-termination
  /sims/{sim_id}/events/sessions:
    get:
      description: |
        指定した IoT SIM に関する過去 32 日間のセッションの作成 / 変更 / 切断のイベント履歴を取得します。イベント履歴が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。

        現在のセッションは、[Sim:getSim API](#/Sim/getSim) で確認します。現在のセッションをこの API で確認するには、最新のセッション履歴の `event` の値を確認します。セッションの意味は、[状態 (オンライン / オフライン)](/ja-jp/resources/glossary/session/#状態-オンライン--オフライン) を参照してください。
      operationId: listSimSessionEvents
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: セッションのイベント履歴を取得する期間の開始時刻 (UNIX 時間 (ミリ秒))。
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: セッションのイベント履歴を取得する期間の終了時刻 (UNIX 時間 (ミリ秒))。
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するイベント履歴の上限。ただし、返却されるイベント履歴の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のイベント履歴のタイムスタンプ。このパラメータを指定することで次のイベント履歴以降のリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
          description: セッションのイベント履歴。
      security:
      - api_key: []
        api_token: []
      summary: セッションのイベント履歴 (セッション履歴) を取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sims/{sim_id}/packet_capture_sessions:
    get:
      description: IoT SIM に対するパケットキャプチャセッションのリストを取得する。
      operationId: listSimPacketCaptureSessions
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 前ページで取得した最後のパケットキャプチャセッション。このパラメータを指定することで次のパケットキャプチャセッション以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 取得するパケットキャプチャセッションの上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PacketCaptureSession'
                type: array
          description: IoT SIM に対するパケットキャプチャセッションのリスト
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対するパケットキャプチャセッションのリストを取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims list-packet-capture-sessions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: IoT SIM に対するパケットキャプチャセッションを作成する。
      operationId: createSimPacketCaptureSession
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCaptureSessionRequest'
        description: パケットキャプチャセッションリクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: IoT SIM に対するパケットキャプチャセッション
        "400":
          description: IoT SIM に対するパケットキャプチャセッションの作成が失敗した
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対するパケットキャプチャセッションを作成する
      tags:
      - Sim
      x-soracom-cli:
      - sims create-packet-capture-session
  /sims/{sim_id}/packet_capture_sessions/{session_id}:
    delete:
      description: IoT SIM に対するパケットキャプチャセッションを削除する。
      operationId: deleteSimPacketCaptureSession
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 削除されたパケットキャプチャセッションの情報
        "400":
          description: IoT SIM に対するパケットキャプチャセッションの削除に失敗
        "404":
          description: IoT SIM に対するパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対するパケットキャプチャセッションを削除する
      tags:
      - Sim
      x-soracom-cli:
      - sims delete-packet-capture-session
    get:
      description: IoT SIM に対するパケットキャプチャセッションを取得する。
      operationId: getSimPacketCaptureSession
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: IoT SIM に対するパケットキャプチャセッション
        "404":
          description: IoT SIM に対するパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対するパケットキャプチャセッションを取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims get-packet-capture-session
  /sims/{sim_id}/packet_capture_sessions/{session_id}/stop:
    post:
      description: IoT SIM に対するパケットキャプチャセッションを停止する。
      operationId: stopSimPacketCaptureSession
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 停止されたパケットキャプチャセッションの情報
        "400":
          description: The packet capture session can be stopped only when its status
            is CAPTURING
        "404":
          description: IoT SIM に対するパケットキャプチャセッションが存在しない
        "500":
          description: IoT SIM に対するパケットキャプチャセッションが停止できなかった
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に対するパケットキャプチャセッションを停止する
      tags:
      - Sim
      x-soracom-cli:
      - sims stop-packet-capture-session
  /sims/{sim_id}/profiles/{iccid}/add_subscription:
    post:
      description: 新しい [セカンダリサブスクリプション (追加サブスクリプション、またはバーチャル SIM/Subscriber)](/ja-jp/resources/glossary/subscription/)
        を IoT SIM に追加します。
      operationId: addSubscription
      parameters:
      - description: 対象の IoT SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象の IoT SIM の ICCID。eUICC 非対応 の IoT SIM の場合は、ICCID と SIM ID は同一です。
        in: path
        name: iccid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Adding planX3:
                value:
                  enable: true
                  subscription: planX3
                  type: cellular
              Adding virtual SIM/Subscriber:
                value:
                  subscription: planArc01
                  type: virtual
            schema:
              properties:
                enable:
                  description: |
                    [追加サブスクリプション](/ja-jp/resources/glossary/subscription/) の場合に、追加サブスクリプションのダウンロードが完了すると、すぐに有効化 (active) するかどうかを指定します。デフォルトは `true` です。
                    - `true`: すぐに有効化 (active) する
                    - `false`: 無効 (inactive) を維持する。次の [ネットワーク登録](/ja-jp/resources/glossary/#ネットワーク登録) または [セッション](/ja-jp/resources/glossary/session/) 確立時に、追加サブスクリプションが有効化 (active) されます。

                    なお、バーチャル SIM/Subscriber の場合は、無視されます。
                  type: boolean
                subscription:
                  description: |
                    追加する [セカンダリサブスクリプション](/ja-jp/resources/glossary/subscription/)
                    - `planP1`、`planX1`、`planX2`、`planX3`、`plan-US-max`: 追加サブスクリプション
                    - `planArc01`: バーチャル SIM/Subscriber
                  enum:
                  - planP1
                  - planX1
                  - planX2
                  - planX3
                  - plan-US-max
                  - planArc01
                  type: string
                type:
                  description: |
                    - `virtual`: `subscription` で `planArc01` を指定した場合
                    - `cellular`: `subscription` で `planArc01` 以外を指定した場合
                  enum:
                  - virtual
                  - cellular
                  type: string
              required:
              - subscription
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimProfile'
          description: 更新された SIM プロファイル
        "400":
          description: 追加できないサブスクリプションを指定した。たとえば、plan-D の IoT SIM に `planP1` は追加できません。
        "404":
          description: 指定した SIM ID および ICCID の IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: 新しいセカンダリサブスクリプションを IoT SIM に追加する
      tags:
      - Sim
      x-soracom-cli:
      - sims add-subscription
  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download:
    post:
      description: 追加サブスクリプションの OTA が始まる前に、OTA をキャンセルします。なお、IoT SIM がオンラインになり、OTA
        が始まるとキャンセルできません。
      operationId: cancelSubscriptionContainerDownload
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      - description: 対象のサブスクリプションコンテナの ICCID。
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: 対象の追加サブスクリプションの IMSI。
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionContainerStatus'
          description: サブスクリプションコンテナの情報 (PLMN コードとサブスクリプションコンテナの対応を含む)。
        "404":
          description: 指定した SIM ID または ICCID または IMSI が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: サブスクリプションコンテナへの追加サブスクリプションの OTA をキャンセルする
      tags:
      - Sim
      x-soracom-cli:
      - sims cancel-subscription-container-download
  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate:
    post:
      description: セカンダリサブスクリプションの利用を終了します。現在、SORACOM Arc のセカンダリサブスクリプションのバーチャル SIM/Subscriber
        の解約のみに対応しています。
      operationId: terminateSubscriptionContainer
      parameters:
      - description: 対象のプライマリサブスクリプションの IoT SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      - description: 対象のプライマリサブスクリプションの IoT SIM の ICCID
        in: path
        name: iccid
        required: true
        schema:
          type: string
      - description: 対象のセカンダリサブスクリプションのバーチャル SIM/Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "204":
          description: セカンダリサブスクリプションの利用が正常に終了されました
      security:
      - api_key: []
        api_token: []
      summary: セカンダリサブスクリプションの利用終了
      tags:
      - Sim
      x-soracom-cli:
      - sims terminate-subscription-container
  /sims/{sim_id}/register:
    post:
      description: オペレーターに IoT SIM を登録します。
      operationId: registerSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSimRequest'
        description: IoT SIM 登録リクエスト
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: IoT SIM 登録完了
      security:
      - api_key: []
        api_token: []
      summary: オペレーターに IoT SIM を登録する
      tags:
      - Sim
      x-soracom-cli:
      - sims register
  /sims/{sim_id}/report_local_info:
    post:
      description: |
        SIM ローカル情報レポートを取得します。

        **Alert**: SIM ローカル情報レポート取得のリクエスト 1 件につき、IoT デバイスへの SMS 送信 1 通が発生します。IoT デバイスへの SMS 送信は有料です。利用料金について詳しくは、以下のページを参照してください。
        - [SMS 機能](https://soracom.jp/services/air/cellular/pricing/price_iot_sim/#sms) (グローバルカバレッジ)
        - [SMS 機能](https://soracom.jp/services/air/cellular/pricing/price_specific_area_sim/#sms) (日本カバレッジ)
      operationId: reportSimLocalInfo
      parameters:
      - description: 対象の IoT SIM の ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: SIM ローカル情報レポートの更新依頼に成功しました。SIM ローカル情報レポートは、IoT SIM からのレポートが成功すると非同期に更新されます。非同期に更新された情報は、SORACOM
            ユーザーコンソールで確認できます。詳しくは、[SIM ローカル情報レポートを確認する](/ja-jp/docs/air/get-local-info-report/)
            を参照してください。
        "400":
          description: 指定した IoT SIM は、SIM ローカル情報レポート機能に対応していません。
        "404":
          description: 指定したカバレッジタイプに、指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SIM ローカル情報レポートを取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims report-local-info
  /sims/{sim_id}/send_sms:
    post:
      description: 指定した IoT SIM 宛に SMS を送信する。
      operationId: sendSmsToSim
      parameters:
      - description: SMS 送信対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            example:
              encodingType: 2
              payload: テスト送信
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: メッセージ本体とエンコーディングタイプからなる SMS 送信リクエスト
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS 送信を受け付け完了。メッセージに割り振られた ID を返す
        "400":
          description: 指定した IoT SIM は SMS API をサポートしていない
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM に SMS を送信する
      tags:
      - Sim
      x-soracom-cli:
      - sims send-sms
  /sims/{sim_id}/sessions/arc:
    post:
      description: SORACOM Arc セッションの作成を行います。すでにセッションが存在する場合は再作成を行います。
      operationId: createArcSession
      parameters:
      - description: 対象とする IoT SIM の SIM ID
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArcSessionCreateResponse'
          description: Arc セッションが作成されました
        "400":
          description: 作成リクエスト中に Arc のクレデンシャルが不足しています
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Arc セッションの作成
      tags:
      - Sim
      x-soracom-cli:
      - sims create-arc-session
  /sims/{sim_id}/set_expiry_time:
    post:
      description: 指定した IoT SIM の有効期限とアクションを設定します。
      operationId: setSimExpiryTime
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      requestBody:
        content:
          application/json:
            example:
              expiryAction: deactivate
              expiryTime: 1893423600000
            schema:
              $ref: '#/components/schemas/ExpiryTime'
        description: 更新後の有効期限 (UNIX 時間 (ミリ秒)) とアクション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の有効期限とアクションを設定する
      tags:
      - Sim
      x-soracom-cli:
      - sims set-expiry-time
  /sims/{sim_id}/set_group:
    post:
      description: IoT SIM を SIM グループに所属させます。
      operationId: setSimGroup
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: IoT SIM が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM を SIM グループに所属させる
      tags:
      - Sim
      x-soracom-cli:
      - sims set-group
  /sims/{sim_id}/set_imei_lock:
    post:
      description: 指定した IoT SIM の IMEI ロックを設定する。
      operationId: setSimImeiLock
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetImeiLockRequest'
        description: IoT SIM に指定する IMEI ロックの設定 (オンラインの IoT SIM の現在の IMEI にロックするには
          IMEI は指定しなくてもよい)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報
        "400":
          description: |
            - IMEI 文字列が無効です。
            - オフラインの IoT SIM にも関わらず IMEI が指定されていません。
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の IMEI ロックを設定する
      tags:
      - Sim
      x-soracom-cli:
      - sims set-imei-lock
  /sims/{sim_id}/set_to_standby:
    post:
      description: 指定した IoT SIM のステータスを「利用開始待ち (standby)」に変更します。
      operationId: setSimToStandby
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "400":
          description: 指定した IoT SIM は「利用開始待ち (standby)」に対応していません。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のステータスを「利用開始待ち (standby)」に変更する
      tags:
      - Sim
      x-soracom-cli:
      - sims set-to-standby
  /sims/{sim_id}/statuses/history:
    get:
      description: IoT SIM のステータス操作履歴を取得します。ステータス操作履歴は、どの IMSI、どのサブスクリプションに対して、どのようなステータス操作を行ったかが操作時間とともに記録されています。速度クラスやグループ
        ID、IoT SIM のステータスなどが含まれます。ステータス操作履歴が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL
        が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listSimStatusHistory
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: ステータス操作履歴を取得する期間の開始時刻 (UNIX 時間 (ミリ秒))。省略した場合は、対象の IoT SIM の最も古いステータス操作履歴の発生時刻が設定されます。
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: ステータス操作履歴を取得する期間の終了時刻 (UNIX 時間 (ミリ秒))。省略した場合は、現在時刻が設定されます。
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のステータス操作履歴のプライマリ IMSI とタイムスタンプ (UNIX 時間 (ミリ秒)) を `@`
          で連結した文字列。このパラメータを指定することで次のステータス操作履歴以降のデータを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: ステータス操作履歴のソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するステータス操作履歴の上限。ただし、返却されるステータス操作履歴の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          default: 30
          maximum: 100
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SimStatusHistoryResponse'
                type: array
          description: IoT SIM のステータス操作履歴。
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定した IoT SIM が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のステータス操作履歴を取得する
      tags:
      - Sim
      x-soracom-cli:
      - sims list-status-history
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sims/{sim_id}/suspend:
    post:
      description: 指定した IoT SIM のステータスを「利用中断中 (suspended)」に変更します。
      operationId: suspendSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のステータスを「利用中断中 (suspended)」に変更する
      tags:
      - Sim
      x-soracom-cli:
      - sims suspend
  /sims/{sim_id}/tags:
    put:
      description: |
        指定した IoT SIM のタグを追加 / 更新します。

        なお、IoT SIM の名前は、`name` がキーのタグに登録する仕組みです。
      operationId: putSimTags
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
            - tagName: name
              tagValue: '{IoT SIM の名前}'
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のタグを追加 / 更新する
      tags:
      - Sim
      x-sam-operationId: putTags
      x-soracom-cli:
      - sims put-tags
  /sims/{sim_id}/tags/{tag_name}:
    delete:
      description: 指定した IoT SIM のタグを削除する。
      operationId: deleteSimTag
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: |
          削除対象のタグ名。URL のパスの一部になるので、URL エンコード (パーセントエンコーディング) を行います。たとえば JavaScript では、encodeURIComponent() を利用するとエンコードできます。

          **Warning**: SORACOM CLI を利用する場合は、URL エンコード (パーセントエンコーディング) しないでください。
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定した IoT SIM あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM のタグを削除する
      tags:
      - Sim
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sims delete-tag
  /sims/{sim_id}/terminate:
    post:
      description: |
        指定した IoT SIM を解約します。あらかじめ [Sim:enableSimTermination API](#/Sim/enableSimTermination) を使用して解約できるように (解約プロテクションを解除) してください。
      operationId: terminateSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          format: SimId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: 指定した IoT SIM が存在しません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM を解約する
      tags:
      - Sim
      x-soracom-cli:
      - sims terminate
  /sims/{sim_id}/unset_expiry_time:
    post:
      description: 指定した IoT SIM の有効期限を解除します。
      operationId: unsetSimExpiryTime
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: IoT SIM の有効期限の解除に成功しました。
        "404":
          description: 指定した IoT SIM が存在しないか、IoT SIM に有効期限が設定されていません。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の有効期限を解除する
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-expiry-time
  /sims/{sim_id}/unset_group:
    post:
      description: IoT SIM を SIM グループから外します。
      operationId: unsetSimGroup
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報。
        "404":
          description: IoT SIM が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM を SIM グループから外す
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-group
  /sims/{sim_id}/unset_imei_lock:
    post:
      description: 指定した IoT SIM の IMEI ロックを解除する。
      operationId: unsetSimImeiLock
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の IMEI ロックを解除する
      tags:
      - Sim
      x-soracom-cli:
      - sims unset-imei-lock
  /sims/{sim_id}/update_speed_class:
    post:
      description: IoT SIM の速度クラスを変更します。
      operationId: updateSimSpeedClass
      parameters:
      - description: 対象の IoT SIM の SIM ID。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpeedClassRequest'
        description: IoT SIM の速度クラス。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sim'
          description: 更新後の IoT SIM の詳細情報
        "400":
          description: 指定された速度クラスは、このサブスクリプションに存在しません。たとえば、plan01s のときは arc.standard
            は指定できません。
        "404":
          description: 指定した IoT SIM が存在しない
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM の速度クラスを変更する
      tags:
      - Sim
      x-soracom-cli:
      - sims update-speed-class
  /sora_cam/devices:
    get:
      description: |
        ソラカメ対応カメラの一覧を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDevices
      responses:
        "200":
          content:
            application/json:
              example:
              - configuration:
                  audioAlarmEnabled: false
                  motionDetectionEnabled: true
                  smokeAlarmEnabled: false
                connected: true
                deviceCategory: Camera
                deviceId: 7CDDDEADBEEF
                firmwareVersion: 4.58.0.97
                isShared: false
                lastConnectedTime: 1664512183393
                name: My ATOM Cam 2
                powerState: "on"
                productDisplayName: ATOM Cam 2
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamDevice'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの一覧を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices list
  /sora_cam/devices/{device_id}:
    delete:
      description: |
        ソラカメ対応カメラをオペレーターから削除します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: handleDeleteSoraCamDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラを削除する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam device delete
    get:
      description: |
        ソラカメ対応カメラの情報を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                appliedLicenses:
                - name: Cloud Continuous Recording License (14 Days)
                  value: storage_life=14
                configuration:
                  audioAlarmEnabled: false
                  motionDetectionEnabled: true
                  smokeAlarmEnabled: false
                connected: true
                deviceCategory: Camera
                deviceId: 7CDDDEADBEEF
                firmwareVersion: 4.58.0.97
                isShared: false
                lastConnectedTime: 1664512183393
                name: My ATOM Cam 2
                powerState: "on"
                productDisplayName: ATOM Cam 2
              schema:
                $ref: '#/components/schemas/SoraCamDevice'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの情報を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get
  /sora_cam/devices/{device_id}/atom_cam/firmware/update:
    get:
      description: |
        ソラカメ対応カメラで更新できるファームウェアバージョンを取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceAtomCamFirmwareUpdate
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - deviceId: 7CDDDEADBEEF
                firmwareVersion: 4.58.0.97
                timeout: 600
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamDevicesFirmwareUpdate'
                type: array
          description: OK.
        "204":
          description: 指定したソラカメ対応カメラには、更新できるファームウェアバージョンがありません。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで更新できるファームウェアバージョンを取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam get-firmware-update
    post:
      description: |
        更新できるファームウェアバージョンが存在する場合、ソラカメ対応カメラのファームウェアを更新します。ファームウェアの更新中は、ソラカメ対応カメラはオフラインになります。

        **Warning**: ファームウェアの更新中は、ソラカメ対応カメラの電源を切らないでください。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: updateSoraCamDeviceAtomCamFirmware
      parameters:
      - in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
        "400":
          description: 更新できるファームウェアバージョンがありません。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラのファームウェアを更新する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam update-firmware
  /sora_cam/devices/{device_id}/atom_cam/settings:
    get:
      description: |
        ソラカメ対応カメラの各種設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettings
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                logo: "on"
                motion: "off"
                motionSensitivity: low
                motionTagging: "on"
                nightVision: auto
                quality: high
                rotation: 0
                statusLight: "on"
                timestamp: "on"
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettings'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの各種設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam get-settings
  /sora_cam/devices/{device_id}/atom_cam/settings/logo:
    get:
      description: |
        撮影画像左下に表示されるアトムテック株式会社のロゴの表示設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsLogo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: "on"
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsLogo'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 撮影画像左下に表示されるアトムテック株式会社のロゴの表示設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-logo
    post:
      description: |
        撮影画像左下に表示されるアトムテック株式会社のロゴの表示設定を変更します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsLogo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: "on"
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsLogo'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 撮影画像左下に表示されるアトムテック株式会社のロゴの表示設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-logo
  /sora_cam/devices/{device_id}/atom_cam/settings/motion:
    get:
      description: |
        モーション検知の設定を取得します。モーション検知がオンの場合は、ソラカメ対応カメラが動いているものを検知したときに録画が開始されます。

        **Warning**: ソラカメ対応カメラにクラウドモーション検知 “無制限” 録画ライセンスを割り当てていても、モーション検知がオフの場合は、動いているものを検知しないため録画されません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsMotion
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: "on"
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsMotion'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: モーション検知の設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-motion
    post:
      description: |
        モーション検知の設定を変更します。モーション検知がオンの場合は、ソラカメ対応カメラが動いているものを検知したときに録画が開始されます。

        **Warning**: ソラカメ対応カメラにクラウドモーション検知 “無制限” 録画ライセンスを割り当てていても、モーション検知がオフの場合は、動いているものを検知しないため録画されません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsMotion
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: "on"
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsMotion'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: モーション検知の設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-motion
  /sora_cam/devices/{device_id}/atom_cam/settings/motion_sensitivity:
    get:
      description: |
        モーション検知の感度設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsMotionSensitivity
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: low
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsMotionSensitivity'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: モーション検知の感度設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-motion-sensitivity
    post:
      description: |
        モーション検知の感度設定を変更します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsMotionSensitivity
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: low
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsMotionSensitivity'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: モーション検知の感度設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-motion-sensitivity
  /sora_cam/devices/{device_id}/atom_cam/settings/motion_tagging:
    get:
      description: |
        モーションタグの表示設定を取得します。モーションタグは、動いているものを検知したときに表⽰される緑の枠です。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsMotionTagging
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: "on"
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsMotionTagging'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: モーションタグの表示設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-motion-tagging
    post:
      description: |
        モーションタグの表示設定を変更します。モーションタグは、動いているものを検知したときに表⽰される緑の枠です。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsMotionTagging
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: "on"
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsMotionTagging'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: モーションタグの表示設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-motion-tagging
  /sora_cam/devices/{device_id}/atom_cam/settings/night_vision:
    get:
      description: |
        ナイトビジョンモードの設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsNightVision
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: auto
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsNightVision'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ナイトビジョンモードの設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-night-vision
    post:
      description: |
        ナイトビジョンモードの設定を変更します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsNightVision
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: auto
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsNightVision'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ナイトビジョンモードの設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-night-vision
  /sora_cam/devices/{device_id}/atom_cam/settings/quality:
    get:
      description: |
        画質設定を取得します。
        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsQuality
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: low
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsQuality'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 画質設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-quality
    post:
      description: |
        画質設定を変更します。画質設定は、ソラカメ対応カメラで撮影するすべての動画および静止画に反映されます。なお、Wi-Fi の通信速度 (帯域) が不足した場合は、自動的に画質設定が変更される場合があります

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsQuality
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: low
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsQuality'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 画質設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-quality
  /sora_cam/devices/{device_id}/atom_cam/settings/rotation:
    get:
      description: |
        画像を 180° 回転させる設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsRotation
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: 180
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsRotation'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 画像を 180° 回転させる設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-rotation
    post:
      description: |
        画像を 180° 回転させる設定を変更します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsRotation
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: 180
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsRotation'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 画像を 180° 回転させる設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-rotation
  /sora_cam/devices/{device_id}/atom_cam/settings/status_light:
    get:
      description: |
        ステータスライト (カメラ本体の状態を示すランプ) の点灯設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsStatusLight
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: "on"
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsStatusLight'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ステータスライト (カメラ本体の状態を示すランプ) の点灯設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-status-light
    post:
      description: |
        ステータスライト (カメラ本体の状態を示すランプ) の点灯設定を変更します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsStatusLight
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: "on"
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsStatusLight'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ステータスライト (カメラ本体の状態を示すランプ) の点灯設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-status-light
  /sora_cam/devices/{device_id}/atom_cam/settings/timestamp:
    get:
      description: |
        撮影画像右下に表示されるタイムスタンプの表示設定を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: getSoraCamDeviceAtomCamSettingsTimestamp
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: "on"
              schema:
                $ref: '#/components/schemas/SoraCamAtomCamSettingsTimestamp'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 撮影画像右下に表示されるタイムスタンプの表示設定を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings get-timestamp
    post:
      description: |
        撮影画像右下に表示されるタイムスタンプの表示設定を変更します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: この API は、[Public beta](/ja-jp/resources/glossary/#public-beta) です。
      operationId: setSoraCamDeviceAtomCamSettingsTimestamp
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              state: "on"
            schema:
              $ref: '#/components/schemas/SoraCamAtomCamSettingsTimestamp'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なリクエスト。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 撮影画像右下に表示されるタイムスタンプの表示設定を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam settings set-timestamp
  /sora_cam/devices/{device_id}/events:
    get:
      description: |
        ソラカメ対応カメラで検出されたイベントの一覧を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceEventsForDevice
      parameters:
      - description: 対象のソラカメ対応カメラの ID
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 前回の listSoraCamDeviceEventsForDevice リクエストのレスポンスに含まれていた x-soracom-next-key
          ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 1 回のリクエストで取得するデータ数の上限 (1 〜 1000)。なお、レスポンスには、指定した最大値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 1000
          minimum: 1
          type: integer
      - description: イベントを取得する期間の開始時刻 (UNIX 時間 (ミリ秒))。省略した場合は、対象のソラカメ対応カメラで検出された最も古いイベントの発生時刻が設定されます。
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: イベントを取得する期間の終了時刻 (UNIX 時間 (ミリ秒))。省略した場合は、現在時刻が設定されます。
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          イベント一覧のソート順。

          - `desc`: 降順 (対象のソラカメ対応カメラで検出された最新のイベントが先頭)
          - `asc`: 昇順 (対象のソラカメ対応カメラで検出された最も古いイベントが先頭)
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - deviceId: 7CDDDEADBEEF
                deviceType: atomCamV2
                eventId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                eventInfo:
                  endTime: 1662973203000
                  picture: https://atom-device-alarm-file.s3.ap-northeast-1.amazonaws.com/7CDDDEADBEEF/2022-12-12/7CDDDEADBEEF131670825831_1670825831000_13_1_0/xxx.jpg?...
                  recordingStatus: completed
                  startTime: 1662973200000
                  type: motion
                time: 1662973200000
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamEvent'
                type: array
          description: OK.
        "400":
          description: 指定された引数が不正です。
        "404":
          description: 指定されたソラカメ対応カメラが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラのイベント一覧を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices events list-for-device
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/devices/{device_id}/exports/usage:
    get:
      description: |
        静止画の残りのエクスポート可能枚数や、録画映像の残りのエクスポート可能時間などを取得します。

        **Warning**: 静止画をエクスポートしても、録画映像をエクスポートしても、動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) が消費されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceExportUsage
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                deviceId: 7CDDDEADBEEF
                image:
                  billedFrames: 0
                  limitFrames: 259200
                  remainingFrames: 259131
                  usedFrames: 69
                meteredYearMonth: "202209"
                video:
                  billedSeconds: 0
                  limitSeconds: 259200
                  remainingSeconds: 259131
                  usedSeconds: 69
              schema:
                $ref: '#/components/schemas/SoraCamExportUsage'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの静止画のエクスポート可能枚数や録画映像のエクスポート可能時間を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get-export-usage
  /sora_cam/devices/{device_id}/exports/usage/limit_override:
    delete:
      description: |
        動画のエクスポート可能時間の上限をデフォルトの値に戻します。デフォルトは、72 時間です。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: deleteSoraCamDeviceExportUsageLimitOverride
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 設定がデフォルトに戻りました。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの動画のエクスポート可能時間の上限をデフォルトに戻す
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices delete-export-usage-limit-override
    put:
      description: |
        動画のエクスポート可能時間の上限を変更します。デフォルトは、72 時間です。最大で 1,500 時間まで設定できます。

        **Warning**: 動画のエクスポート可能時間の消費時間が 72 時間を超えると課金が発生します。上限を変更しただけでは、課金は発生しません。動画のエクスポート可能時間の上限の設定にかかわらず、消費時間が 72 時間を超えると課金が発生します。料金について詳しくは、Soracom Cloud Camera Services ソラカメの [料金について](https://soracom.jp/sora_cam/#pricing) を参照してください。

        **Warning**: 上限を 72 時間未満に設定することもできます。その場合でも、料金は変わりません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: updateSoraCamDeviceExportUsageLimitOverride
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              limitHours: 144
            schema:
              $ref: '#/components/schemas/SoraCamExportUsageLimitOverrideSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                deviceId: 7CDDDEADBEEF
                image:
                  billedFrames: 69
                  limitFrames: 518400
                  remainingFrames: 259131
                  usedFrames: 259269
                meteredYearMonth: "202209"
                video:
                  billedSeconds: 69
                  limitSeconds: 518400
                  remainingSeconds: 259131
                  usedSeconds: 259269
              schema:
                $ref: '#/components/schemas/SoraCamExportUsage'
          description: 設定が変更されました。
        "400":
          description: 不正な上限値が指定されました。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの動画のエクスポート可能時間の上限を変更する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices update-export-usage-limit-override
  /sora_cam/devices/{device_id}/images/exports:
    get:
      description: |
        [SoraCam:exportSoraCamDeviceRecordedImage API](#/SoraCam/exportSoraCamDeviceRecordedImage) で開始した「録画映像から静止画をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象を 1 台のソラカメ対応カメラに限定します。

        なお、対象を 1 台のソラカメ対応カメラに限定しないで、オペレーターが所有するすべてのソラカメ対応カメラにする場合は、[SoraCam:listSoraCamDeviceImageExports API](#/SoraCam/listSoraCamDeviceImageExports) を使用してください。

        **Warning**: エクスポートが完了してから 10 分が経過すると、URL は利用できなくなります。利用できなくなる時間は、`expiryTime` で確認できます。また、さらに時間が経過するとリストから削除されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceImageExportsForDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 前回の listSoraCamDeviceImageExportsForDevice リクエストのレスポンスに含まれていた
          x-soracom-next-key ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 1 回のリクエストで取得するデータ数の上限。なお、レスポンスには、指定した最大値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: ソート順。レスポンスに含まれるリストは、`requestedTime` の昇順 (`asc`) もしくは降順 (`desc`)
          にソートされます。デフォルトは降順 (`desc`) すなわち新しいアイテムほど先に来る順でソートされます。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) Initializing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: initializing
                (2) Processing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: processing
                (3) Completed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    expiryTime: 1663735622739
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: completed
                    url: https://sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.jpg?...
                (4) Retrying:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: retrying
                (5) Failed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: failed
                (6) limitExceeded:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: limitExceeded
                (7) Expired:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: expired
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamImageExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像から静止画をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images list-exports-for-device
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: |
        クラウドに保存された録画映像から静止画を切り出してエクスポートする処理を開始します。エクスポート処理は非同期で処理されます。エクスポート処理の進捗や、エクスポートしたファイルの URL は、[SoraCam:listSoraCamDeviceImageExports API](#/SoraCam/listSoraCamDeviceImageExports) で取得できます。URL には有効期限が設定されています。

        - URL を取得した時点で、ダウンロードを開始したかどうかにかかわらず動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) が消費されます。
        - エクスポート処理の結果はキャッシュされません。同じ時間を 2 回エクスポートすると、動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) は 2 回分が消費されます。

        **Warning**: クラウド常時録画ライセンスもしくはクラウドモーション検知 “無制限” 録画ライセンスを割り当てていないソラカメ対応カメラの静止画はエクスポートできません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。

        **Info**: エクスポートされる静止画の画像サイズは、1920 x 1080 ピクセルです。
      operationId: exportSoraCamDeviceRecordedImage
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              (1) imageFilters なし:
                value:
                  time: 1658400332905
              (2) imageFilters あり:
                value:
                  imageFilters:
                  - wide_angle_correction
                  time: 1658400332905
            schema:
              $ref: '#/components/schemas/SoraCamImageExportSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: initializing
              schema:
                $ref: '#/components/schemas/SoraCamImageExportInfo'
          description: OK.
        "400":
          description: '`time` に指定した値が不適切です。'
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウドに保存された録画映像から静止画をエクスポートする処理を開始する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images export
  /sora_cam/devices/{device_id}/images/exports/{export_id}:
    get:
      description: |
        [SoraCam:exportSoraCamDeviceRecordedImage API](#/SoraCam/exportSoraCamDeviceRecordedImage) で開始した「録画映像から静止画をエクスポートする処理」の現在の状況を取得します。この API では、対象を 1 つのエクスポート処理に限定します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceExportedImage
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 対象のエクスポート処理のエクスポート ID
        in: path
        name: export_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) Initializing:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: initializing
                (2) Processing:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: processing
                (3) Completed:
                  value:
                    deviceId: 7CDDDEADBEEF
                    expiryTime: 1662973800000
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: completed
                    url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.jpg?...
                (4) Retrying:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: retrying
                (5) Failed:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: failed
                (6) limitExceeded:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: limitExceeded
                (7) Expired:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: expired
              schema:
                $ref: '#/components/schemas/SoraCamImageExportInfo'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラ、またはエクスポート処理が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウドに保存された録画映像から静止画をエクスポートする処理の現在の状況を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images get-exported
  /sora_cam/devices/{device_id}/name:
    get:
      description: ソラカメ対応カメラの現在の名前を取得します。
      operationId: getSoraCamDeviceName
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: ATOM Cam 2
              schema:
                $ref: '#/components/schemas/SoraCamDeviceName'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの現在の名前を取得します
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get-name
    post:
      description: ソラカメ対応カメラの名前を変更します。
      operationId: setSoraCamDeviceName
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              name: ATOM Cam 2
            schema:
              $ref: '#/components/schemas/SoraCamDeviceName'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なパラメーターが指定されました。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの名前を変更します
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices set-name
  /sora_cam/devices/{device_id}/power_state:
    get:
      description: ソラカメ対応カメラの電源状態を取得します。
      operationId: getSoraCamDevicePowerState
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                powerState: "on"
              schema:
                $ref: '#/components/schemas/SoraCamPowerState'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの電源状態を取得します
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get-power-state
    post:
      description: ソラカメ対応カメラの電源状態を変更します。
      operationId: setSoraCamDevicePowerState
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              powerState: "on"
            schema:
              $ref: '#/components/schemas/SoraCamPowerState'
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なパラメーターが指定されました。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラの電源状態を変更します
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices set-power-state
  /sora_cam/devices/{device_id}/reboot:
    post:
      description: ソラカメ対応カメラを再起動します。
      operationId: rebootSoraCamDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラを再起動します
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices reboot
  /sora_cam/devices/{device_id}/recordings_and_events:
    get:
      description: |
        ソラカメ対応カメラがクラウドに映像を録画した期間の一覧、およびソラカメ対応カメラが検知したイベントの一覧を取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceRecordingsAndEvents
      parameters:
      - description: ソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 前回の listSoraCamDeviceRecordingsAndEvents リクエストのレスポンスに含まれていた x-soracom-next-key
          ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: リストの取得開始時刻 (UNIX 時間 (ミリ秒))。省略した場合は、対象のソラカメ対応カメラに割り当てられたライセンスの保存期間のうち最も古い時刻が指定されます。
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: リストの所得終了時刻 (UNIX 時間 (ミリ秒))。省略した場合は、現在時刻が設定されます。
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          録画期間およびイベント一覧のソート順。

          - `desc`: 降順 (最新のデータが先頭)。
          - `asc`: 昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - endTime: 1699318810000
                  startTime: 1699318800000
                  type: motion
                - endTime: 1699320820000
                  startTime: 1699320810000
                  type: sound
                - endTime: 1699315210000
                  startTime: 1699315200000
                  type: motion
                records:
                - startTime: 1699318800000
                - endTime: 1699318800000
                  startTime: 169931520000011
              schema:
                $ref: '#/components/schemas/SoraCamRecordingsAndEventsList'
          description: OK.
        "400":
          description: 不正なパラメーターが指定されました。
        "404":
          description: 指定されたソラカメ対応カメラ、または指定された期間の録画が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラが録画した期間の一覧およびイベントの一覧を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices recordings-and-events list-for-device
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/devices/{device_id}/stream:
    get:
      description: |
        ストリーミング映像 (リアルタイム映像 / 録画映像) をダウンロードするための情報を取得します。具体的には、MPEG-DASH (Dynamic Adaptive Streaming over HTTP) と呼ばれるストリーミング方式に対応した URL の配列を取得できます。URL には有効期限が設定されています。

        - リアルタイム映像をストリーミング再生するには、`from` と `to` をどちらも省略します。その場合は、以下の点に注意してください。
          - API を呼び出した時刻を基準に、300 秒 (5 分) のリアルタイム映像をストリーミング再生できる URL を取得できます。続きを視聴する場合は、もう一度 API を呼び出して、次の URL を取得してください。
          - URL を取得した時点で、視聴状況にかかわらず動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) が 5 分消費されます。
        - 録画映像をストリーミング再生するには、`from` または `to` を指定します。その場合は、以下の点に注意してください。
          - 最大 900 秒 (15 分) の録画映像をストリーミング再生できる URL を取得できます。
          - URL を取得した時点で、視聴状況にかかわらず動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) が消費されます。

        **Warning**: **リアルタイム映像**は、クラウドに保存された録画映像から最新の映像を取得する機能です。したがって、クラウド常時録画ライセンスもしくはクラウドモーション検知 “無制限” 録画ライセンスを割り当てていないソラカメ対応カメラのリアルタイム映像は取得できません。ATOM アプリで再生できる**「ライブ映像 (P2P)」**は、リアルタイム映像とは異なる機能です。SORACOM API を利用して「ライブ映像 (P2P)」は取得できません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceStreamingVideo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: |
          録画映像の開始時刻 (UNIX 時間 (ミリ秒))

          - リアルタイム映像をダウンロードするための情報を取得するには、`from` と `to` をどちらも省略します。
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          録画映像の終了時刻 (UNIX 時間 (ミリ秒))

          - リアルタイム映像をダウンロードするための情報を取得するには、`from` と `to` をどちらも省略します。
          - 一回の API 呼び出しで視聴できる時間は最大 900 秒 (15 分) です。`from` と `to` の差が、900 秒を超えないようにしてください。
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
                playList:
                - from: 1658400332905
                  to: 1658400532705
                  url: https://xxxxxxx.kinesisvideo.ap-northeast-1.amazonaws.com/dash/v1/getDASHManifest.mpd?SessionToken=foo
              schema:
                $ref: '#/components/schemas/SoraCamStreamingVideo'
          description: OK.
        "400":
          description: '`from` または `to` に指定した値が不適切です。'
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ストリーミング映像 (リアルタイム映像 / 録画映像) をダウンロードするための情報を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices get-streaming-video
  /sora_cam/devices/{device_id}/videos/exports:
    get:
      description: |
        [SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) で開始した「録画映像をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象を 1 台のソラカメ対応カメラに限定します。

        なお、対象を 1 台のソラカメ対応カメラに限定しないで、オペレーターが所有するすべてのソラカメ対応カメラにする場合は、[SoraCam:listSoraCamDeviceVideoExports API](#/SoraCam/listSoraCamDeviceVideoExports) を使用してください。

        **Warning**: エクスポートが完了してから 10 分が経過すると、URL は利用できなくなります。利用できなくなる時間は、`expiryTime` で確認できます。また、さらに時間が経過するとリストから削除されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceVideoExportsForDevice
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 前回の listSoraCamDeviceVideoExportsForDevice リクエストのレスポンスに含まれていた
          x-soracom-next-key ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 1 回のリクエストで取得するデータ数の上限。なお、レスポンスには、指定した最大値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: ソート順。レスポンスに含まれるリストは、`requestedTime` の昇順 (`asc`) もしくは降順 (`desc`)
          にソートされます。デフォルトは降順 (`desc`) すなわち新しいアイテムほど先に来る順でソートされます。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) Initializing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: initializing
                (2) Processing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: processing
                (3) Completed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    expiryTime: 1662973800000
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: completed
                    url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.zip?...
                (4) Retrying:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: retrying
                (5) Failed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: failed
                (6) limitExceeded:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: limitExceeded
                (7) Expired:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: expired
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamVideoExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos list-exports-for-device
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: |
        クラウドに保存された録画映像を、ダウンロードできる方式 (mp4 ファイルを zip 形式で圧縮したファイル) でエクスポートする処理を開始します。エクスポート処理は非同期で処理されます。エクスポート処理の進捗や、エクスポートしたファイルの URL は、[SoraCam:listSoraCamDeviceVideoExports API](#/SoraCam/listSoraCamDeviceVideoExports) で取得できます。URL には有効期限が設定されています。

        - ひとつの URL でエクスポートできる時間は最大 900 秒 (15 分) です。
        - URL を取得した時点で、ダウンロードを開始したかどうかにかかわらず動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) が消費されます。
        - エクスポート処理の結果はキャッシュされません。同じ時間を 2 回エクスポートすると、動画の視聴可能時間 (デフォルトでは 1 か月 72 時間) は 2 回分が消費されます。

        **Warning**: クラウド常時録画ライセンスもしくはクラウドモーション検知 “無制限” 録画ライセンスを割り当てていないソラカメ対応カメラの録画映像はエクスポートできません。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: exportSoraCamDeviceRecordedVideo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              from: 1662962400000
              to: 1662962430000
            schema:
              $ref: '#/components/schemas/SoraCamVideoExportSpecification'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                deviceId: 7CDDDEADBEEF
                exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                operatorId: OP0012345678
                requestedTime: 1662973200000
                status: initializing
              schema:
                $ref: '#/components/schemas/SoraCamVideoExportInfo'
          description: OK.
        "400":
          description: |
            - `from` または `to` に指定した値が不適切です。
            - 指定された時刻の範囲にはエクスポート可能な録画映像が見つかりません。
            - `Content-Type: application/json` ヘッダーが指定されていません。
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウドに保存された録画映像をエクスポートする処理を開始する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos export
  /sora_cam/devices/{device_id}/videos/exports/{export_id}:
    get:
      description: |
        [SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) で開始した「録画映像をエクスポートする処理」の現在の状況を取得します。この API では、対象を 1 つのエクスポート処理に限定します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: getSoraCamDeviceExportedVideo
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。
        in: path
        name: device_id
        required: true
        schema:
          type: string
      - description: 対象のエクスポート処理のエクスポート ID
        in: path
        name: export_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) Initializing:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: initializing
                (2) Processing:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: processing
                (3) Completed:
                  value:
                    deviceId: 7CDDDEADBEEF
                    expiryTime: 1662973800000
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: completed
                    url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.zip?...
                (4) Retrying:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: retrying
                (5) Failed:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: failed
                (6) limitExceeded:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: limitExceeded
                (7) Expired:
                  value:
                    deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: expired
              schema:
                $ref: '#/components/schemas/SoraCamVideoExportInfo'
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラ、またはエクスポート処理が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: クラウドに保存された録画映像をエクスポートする処理の現在の状況を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos get-exported
  /sora_cam/devices/atom_cam/firmware/updates:
    get:
      description: |
        ファームウェアを更新できるソラカメ対応カメラをリストで取得します。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceAtomCamFirmwareUpdates
      responses:
        "200":
          content:
            application/json:
              example:
              - deviceId: 7CDDDEADBEEF
                firmwareVersion: 4.58.0.97
                timeout: 600
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamDevicesFirmwareUpdate'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: ファームウェアを更新できるソラカメ対応カメラをリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices atom-cam list-firmware-updates
  /sora_cam/devices/events:
    get:
      description: ソラカメ対応カメラで検出されたイベントの一覧を取得します。
      operationId: listSoraCamDeviceEvents
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。省略した場合は、オペレーターが所有するすべてのソラカメ対応デバイスのイベントが対象となります。
        in: query
        name: device_id
        required: false
        schema:
          type: string
      - description: 前回の listSoraCamDeviceEvents リクエストのレスポンスに含まれていた x-soracom-next-key
          ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: integer
      - description: 1 回のリクエストで取得するデータ数の上限 (1 〜 1000)。なお、レスポンスには、指定した最大値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 1000
          minimum: 1
          type: integer
      - description: イベントを取得する期間の開始時刻 (UNIX 時間 (ミリ秒))。省略した場合は、ソラカメ対応カメラで検出された最も古いイベントの発生時刻が設定されます。
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: イベントを取得する期間の終了時刻 (UNIX 時間 (ミリ秒))。省略した場合は、現在時刻が設定されます。
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
      - description: |
          イベント一覧のソート順。

          - `desc`: 降順 (ソラカメ対応カメラで検出された最新のイベントが先頭)
          - `asc`: 昇順 (ソラカメ対応カメラで検出された最も古いイベントが先頭)
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - deviceId: 7CDDDEADBEEF
                deviceType: atomCamV2
                eventId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                eventInfo:
                  endTime: 1662973203000
                  picture: https://atom-device-alarm-file.s3.ap-northeast-1.amazonaws.com/7CDDDEADBEEF/2022-12-12/7CDDDEADBEEF131670825831_1670825831000_13_1_0/filename.jpg?...
                  recordingStatus: completed
                  startTime: 1662973200000
                  type: motion
                time: 1662973200000
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamEvent'
                type: array
          description: OK.
        "400":
          description: 指定された引数が不正です。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで検出されたイベントの一覧を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices events list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/devices/images/exports:
    get:
      description: |
        [SoraCam:exportSoraCamDeviceRecordedImage API](#/SoraCam/exportSoraCamDeviceRecordedImage) で開始した「録画映像から静止画をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象をオペレーターが所有するすべてのデバイスにしたり、1 台のソラカメ対応カメラに限定したりできます。

        **Warning**: エクスポートが完了してから 10 分が経過すると、URL は利用できなくなります。利用できなくなる時間は、`expiryTime` で確認できます。また、さらに時間が経過するとリストから削除されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceImageExports
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。省略した場合はオペレーターが所有するすべてのデバイスが対象となります。
        in: query
        name: device_id
        required: false
        schema:
          type: string
      - description: 前回の listSoraCamDeviceImageExports リクエストのレスポンスに含まれていた x-soracom-next-key
          ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 1 回のリクエストで取得するデータ数の上限。なお、レスポンスには、指定した最大値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: ソート順。レスポンスに含まれるリストは、`requestedTime` の昇順 (`asc`) もしくは降順 (`desc`)
          にソートされます。デフォルトは降順 (`desc`) すなわち新しいデータほど先に来る順でソートされます。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) Initializing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: initializing
                (2) Processing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: processing
                (3) Completed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    expiryTime: 1662973800000
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: completed
                    url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.jpg?...
                (4) Retrying:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: retrying
                (5) Failed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: failed
                (6) limitExceeded:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: limitExceeded
                (7) Expired:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: expired
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamImageExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像から静止画をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices images list-exports
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/devices/videos/exports:
    get:
      description: |
        [SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) で開始した「録画映像をエクスポートする処理」の現在の状況をリストで取得します。この API では、対象をオペレーターが所有するすべてのデバイスにしたり、1 台のソラカメ対応カメラに限定したりできます。

        **Warning**: エクスポートが完了してから 10 分が経過すると、URL は利用できなくなります。利用できなくなる時間は、`expiryTime` で確認できます。また、さらに時間が経過するとリストから削除されます。

        **Warning**: この API を SAM ユーザーの API キーと API トークンで実行する場合は、SAM ユーザーに、この API を呼び出すために必要な権限 (例: `SoraCam:*`) に加えて、`OAuth2:authorize` を実行する権限を追加してください。権限設定について詳しくは、[SAM ユーザーの権限を設定する](/ja-jp/docs/sam/set-permissions/) を参照してください。
      operationId: listSoraCamDeviceVideoExports
      parameters:
      - description: 対象のソラカメ対応カメラのデバイス ID。省略した場合はオペレーターが所有するすべてのデバイスが対象となります。
        in: query
        name: device_id
        required: false
        schema:
          type: string
      - description: 前回の listSoraCamDeviceVideoExports リクエストのレスポンスに含まれていた x-soracom-next-key
          ヘッダーの値。このパラメータを指定することで、前回のリクエストの続きからリストを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      - description: 1 回のリクエストで取得するデータ数の上限。なお、レスポンスには、指定した最大値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: ソート順。レスポンスに含まれるリストは、`requestedTime` の昇順 (`asc`) もしくは降順 (`desc`)
          にソートされます。デフォルトは降順 (`desc`) すなわち新しいデータほど先に来る順でソートされます。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) Initializing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: initializing
                (2) Processing:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: processing
                (3) Completed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    expiryTime: 1662973800000
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: completed
                    url: https://soracom-sora-cam-devices-api-export-file-prod.s3.amazonaws.com/filename.zip?...
                (4) Retrying:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5b
                    operatorId: OP0012345678
                    requestedTime: 1662973200000
                    status: retrying
                (5) Failed:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: failed
                (6) limitExceeded:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: limitExceeded
                (7) Expired:
                  value:
                  - deviceId: 7CDDDEADBEEF
                    exportId: 5ed62746-6c53-47e5-94e6-90697057cf5a
                    operatorId: OP0012345678
                    requestedTime: 1663649222739
                    status: expired
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamVideoExportInfo'
                type: array
          description: OK.
        "404":
          description: 指定したソラカメ対応カメラが見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: ソラカメ対応カメラで撮影した録画映像をエクスポートする処理の現在の状況をリストで取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam devices videos list-exports
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sora_cam/license_packs:
    get:
      description: 利用可能なライセンスパックの一覧を取得します。 現在、この API は日本カバレッジでのみ利用可能です。
      operationId: listSoraCamLicensePacks
      responses:
        "200":
          content:
            application/json:
              example:
              - id: CR7-SC
                name: Cloud Recording License (7 Days)
                quantity: 0
                quantityInUse: 0
                salesChannel: SORACOM Inc.
              - id: CR14-SC
                name: Cloud Recording License (14 Days)
                quantity: 1
                quantityInUse: 1
                salesChannel: SORACOM Inc.
              - id: CR30-SC
                name: Cloud Recording License (30 Days)
                quantity: 2
                quantityInUse: 2
                salesChannel: SORACOM Inc.
              - id: MR7-SC
                name: Cloud Motion Detection "Unlimited" Recording License (7 Days)
                quantity: 0
                quantityInUse: 0
                salesChannel: SORACOM Inc.
              - id: MR14-SC
                name: Cloud Motion Detection "Unlimited" Recording License (14 Days)
                quantity: 1
                quantityInUse: 1
                salesChannel: SORACOM Inc.
              - id: MR30-SC
                name: Cloud Motion Detection "Unlimited" Recording License (30 Days)
                quantity: 2
                quantityInUse: 2
                salesChannel: SORACOM Inc.
              schema:
                items:
                  $ref: '#/components/schemas/SoraCamLicensePackResponse'
                type: array
          description: ライセンスパックの一覧を取得しました。
        "400":
          description: リクエストが不正です。
      security:
      - api_key: []
        api_token: []
      summary: Soracom Cloud Camera Services のライセンスパックの一覧を取得する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam license-packs list
  /sora_cam/license_packs/{license_pack_id}/quantity:
    put:
      description: license_pack_id で指定されたライセンスパックのライセンス数を更新します。 ライセンス数に応じて月額費用が発生します。
        現在、この API は日本カバレッジでのみ利用可能です。
      operationId: updateSoraCamLicensePackQuantity
      parameters:
      - description: ライセンスパックの ID。
        in: path
        name: license_pack_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoraCamLicensePackQuantityUpdatingRequest'
        description: ライセンス数の更新内容。
        required: true
      responses:
        "204":
          description: ライセンス数を更新しました。
        "400":
          description: 更新リクエストが不正です。
      security:
      - api_key: []
        api_token: []
      summary: Soracom Cloud Camera Services のライセンス数を更新する
      tags:
      - SoraCam
      x-soracom-cli:
      - sora-cam license-packs update-quantity
  /soralets:
    get:
      description: Soralet の一覧を取得します。
      operationId: listSoralets
      parameters:
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: 一度のレスポンスに含まれる項目数の最大値。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現在のページで最後に取得された Soralet の識別子を指定します。このパラメータを指定することで、Soralet のリストの続きを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Soralet'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Soralet の一覧を取得する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Soralet を作成します。
      operationId: createSoralet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSoraletRequest'
        description: request
        required: true
      responses:
        "201":
          description: 新しい Soralet が作成されました。
        "400":
          description: 指定された Soralet はすでに存在しているか、不正な soralet_id が指定されました。
      security:
      - api_key: []
        api_token: []
      summary: Soralet を作成する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets create
  /soralets/{soralet_id}:
    delete:
      description: Soralet を削除します。
      operationId: deleteSoralet
      parameters:
      - description: 削除したい Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された Soralet が削除されました。
        "404":
          description: 指定された Soralet が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Soralet を削除する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets delete
    get:
      description: Soralet を取得します。
      operationId: getSoralet
      parameters:
      - description: 取得したい Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Soralet'
          description: OK.
        "404":
          description: 指定された Soralet が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Soralet を取得する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets get
  /soralets/{soralet_id}/logs:
    get:
      description: 指定された Soralet からのログメッセージの一覧を取得します。
      operationId: getSoraletLogs
      parameters:
      - description: Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: 一度のレスポンスに含まれる項目数の最大値。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現在のページで最後に取得されたログの識別子を指定します。このパラメータを指定することで、ログのリストの続きを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoraletLog'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Soralet のログメッセージを取得する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets get-logs
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /soralets/{soralet_id}/test:
    post:
      description: 引数を指定して Soralet をテスト実行します。
      operationId: testSoralet
      parameters:
      - description: Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSoraletRequest'
        description: 実行リクエスト。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteSoraletResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 引数を指定して Soralet をテスト実行する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets test
      - soralets exec
  /soralets/{soralet_id}/versions:
    get:
      description: Soralet のバージョン一覧を取得します。
      operationId: listSoraletVersions
      parameters:
      - description: バージョン一覧を取得したい Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: 一度のレスポンスに含まれる項目数の最大値。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 現在のページで最後に取得されたバージョンの識別子を指定します。このパラメータを指定することで、バージョンのリストの続きを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoraletVersion'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Soralet のバージョン一覧を取得する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets list-versions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: コードをアップロードし、新しいバージョンを作成します。
      operationId: uploadSoraletCode
      parameters:
      - description: コードのアップロード先の Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: アップロードするファイルの Content-Type。.wasm ファイルをアップロードする場合は `application/json`
          を指定してください。
        in: header
        name: content-type
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              format: binary
              type: string
        description: アップロードしたいファイルの内容。
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoraletVersion'
          description: Successfully created a new version.
      security:
      - api_key: []
        api_token: []
      summary: コードをアップロードし、新しいバージョンを作成する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets upload
  /soralets/{soralet_id}/versions/{version}:
    delete:
      description: Soralet のバージョンを削除します。
      operationId: deleteSoraletVersion
      parameters:
      - description: Soralet の識別子。
        in: path
        name: soralet_id
        required: true
        schema:
          type: string
      - description: 削除したい Soralet のバージョン。
        in: path
        name: version
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: 指定された Soralet のバージョンが削除されました。
        "404":
          description: 指定された Soralet のバージョンが見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Soralet のバージョンを削除する
      tags:
      - Soralet
      x-soracom-cli:
      - soralets delete-version
  /stats/air/groups/{group_id}:
    get:
      description: 指定したグループに所属するすべての IoT SIM を集約したデータ通信量履歴を取得します。
      operationId: getAirStatsOfGroup
      parameters:
      - description: グループ ID
        in: path
        name: group_id
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 3 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 7 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirAggregatedStatsResponse'
                type: array
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: 指定したグループに所属するすべての IoT SIM を集約したデータ通信量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats air groups get
  /stats/air/operators/{operator_id}:
    get:
      description: 指定したオペレーターが保有するすべての IoT SIM を集約したデータ通信量履歴を取得します。
      operationId: getAirStatsOfOperator
      parameters:
      - description: オペレーター ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 3 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 7 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirAggregatedStatsResponse'
                type: array
          description: OK.
        "400":
          description: 不正なリクエストです。
      security:
      - api_key: []
        api_token: []
      summary: 指定したオペレーターが保有するすべての IoT SIM を集約したデータ通信量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats air operators get
  /stats/air/operators/{operator_id}/export:
    post:
      description: |
        オペレーターが所有していたすべての IoT SIM のデータ通信量を、[Air データ通信量実績データ CSV](/ja-jp/docs/air/stats-csv/) でダウンロードします。

        **Warning**: 対象期間にデータ通信を行わなかった場合は、ヘッダー行だけの CSV ファイルが出力されます。
        **Info**: 解約した IoT SIM のデータ通信量も確認できます。
      operationId: exportAirStats
      parameters:
      - description: オペレーター ID。オペレーター ID は [Operator:getOperator API](#/Operator/getOperator)
          で取得できます。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: |
          Air データ通信量実績データ CSV をダウンロードするための URL を取得する方法を指定します。

          - `async`: SORACOM プラットフォームで URL が発行されるのを待たずに、`exportedFieldId` を取得します。この `exportedFieldId` を [Files:getExportedFile API](#/Files/getExportedFile) で指定すると、URL を取得できます。Air データ通信量実績データ CSV のファイルサイズが大きい場合は、`async` を利用してください。
          - `sync` (デフォルト): SORACOM プラットフォームで URL が発行されるのを待ちます。ただし、Air データ通信量実績データ CSV のファイルサイズが大きい場合など、タイムアウトして URL を取得できないことがあります。タイムアウトする場合は、`async` を指定してください。
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            example:
              from: 1709218800
              period: month
              to: 1714402800
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間および集計単位。
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                (1) export_mode=async:
                  description: |
                    この `exportedFieldId` を [Files:getExportedFile API](#/Files/getExportedFile) で指定すると、ダウンロード用の URL を取得できます。URL にアクセスして、CSV ファイルをダウンロードしてください。
                  value:
                    exportedFileId: fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    exportedFilePath: //files/exported/fe_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                (2) export_mode=sync:
                  description: |
                    `url` がダウンロード用の URL です。URL にアクセスして、CSV ファイルをダウンロードしてください。

                    コマンド例:

                    ```bash
                    $ wget -O export.csv "https://soracom-xxxxxxxx-...."
                    ```
                  value:
                    url: https://soracom-xxxxxxxx-....
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: すべての IoT SIM のデータ通信量をエクスポートする
      tags:
      - Stats
      x-soracom-cli:
      - stats air export
  /stats/air/sims/{sim_id}:
    get:
      description: |
        SIM ID で指定した IoT SIM のデータ通信量履歴を取得します。

        **Warning**: 解約した IoT SIM のデータ通信量は確認できません。
      operationId: getAirStatsOfSim
      parameters:
      - description: 対象の IoT SIM の SIM ID。SIM ID は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: sim_id
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
          - `minutes`: 約 5 分ごと。

            `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: SIM ID で指定した IoT SIM のデータ通信量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats air sims get
  /stats/air/subscribers/{imsi}:
    get:
      description: |
        IMSI で指定した IoT SIM のデータ通信量履歴を取得します。

        **Warning**: 解約した IoT SIM のデータ通信量は確認できません。
      operationId: getAirStats
      parameters:
      - description: 対象の IMSI。IMSI は [Sim:listSims API](#/Sim/listSims) で取得できます。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
          - `minutes`: 約 5 分ごと。

            `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: IMSI で指定した IoT SIM のデータ通信量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats air get
  /stats/beam/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の SORACOM Beam 利用量履歴をファイルで取得する。取得対象の期間は
        from, to の unixtime で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportBeamStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: すべての Subscriber の SORACOM Beam 利用量履歴をエクスポートする
      tags:
      - Stats
      x-soracom-cli:
      - stats beam export
  /stats/beam/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Beam 利用量履歴を取得する。
      operationId: getBeamStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
          - `minutes`: 約 5 分ごと。

            `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BeamStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: IMSI で指定した Subscriber の SORACOM Beam 利用量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats beam get
  /stats/funk/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の SORACOM Funk 利用量履歴をファイルで取得する。取得対象の期間は
        from, to の unixtime で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportFunkStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: すべての Subscriber の SORACOM Funk 利用量履歴をエクスポートする
      tags:
      - Stats
      x-soracom-cli:
      - stats funk export
  /stats/funk/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Funk 利用量履歴を取得する。
      operationId: getFunkStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
          - `minutes`: 約 5 分ごと。

            `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunkStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: IMSI で指定した Subscriber の SORACOM Funk 利用量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats funk get
  /stats/funnel/operators/{operator_id}/export:
    post:
      description: Operator が保有する全 Subscriber の SORACOM Funnel 利用量履歴をファイルで取得する。取得対象の期間は
        from, to の unixtime で指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。
      operationId: exportFunnelStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: export_mode (async, sync)
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: すべての Subscriber の SORACOM Funnel 利用量履歴をエクスポートする
      tags:
      - Stats
      x-soracom-cli:
      - stats funnel export
  /stats/funnel/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Funnel 利用量履歴を取得する。
      operationId: getFunnelStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
          - `minutes`: 約 5 分ごと。

            `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunnelStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: IMSI で指定した Subscriber の SORACOM Funnel 利用量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats funnel get
  /stats/harvest/operators/{operator_id}:
    get:
      description: 指定された Operator の指定された年月における Harvest データの読み込みデータ通信量を byte 単位で取得します。
      operationId: getHarvestExportedDataStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: 現在時刻の 18 か月前 〜 現在時刻の年月を YYYYMM 形式で指定します。
        in: query
        name: year_month
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestExportedDataStatsResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Harvest の利用統計情報を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest operators get
  /stats/harvest/operators/{operator_id}/export:
    post:
      description: |
        オペレーターが所有していたすべての IoT SIM の SORACOM Harvest Data への書き込み回数を、[Harvest Data 書き込み回数実績データ CSV](/ja-jp/docs/harvest/stats-csv/) でダウンロードします。

        **Info**: 解約した IoT SIM の SORACOM Harvest Data への書き込み回数も確認できます。
      operationId: exportHarvestStats
      parameters:
      - description: オペレーター ID。
        in: path
        name: operator_id
        required: true
        schema:
          type: string
      - description: |
          Harvest Data 書き込み回数実績データ CSV をダウンロードするための URL を取得する方法を指定します。

          - `async`: SORACOM プラットフォームで URL が発行されるのを待たずに、`exportedFieldId` を取得します。この `exportedFieldId` を [Files:getExportedFile API](#/Files/getExportedFile) で指定すると、ダウンロード用の URL を取得できます。Harvest Data 書き込み回数実績データ CSV のファイルサイズが大きい場合は、`async` を利用してください。
          - `sync` (デフォルト): SORACOM プラットフォームでダウンロード用の URL が発行されるのを待ちます。ただし、Harvest Data 書き込み回数実績データ CSV のファイルサイズが大きい場合など、タイムアウトして URL を取得できないことがあります。タイムアウトする場合は、`async` を指定してください。
        in: query
        name: export_mode
        required: false
        schema:
          enum:
          - async
          - sync
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
        description: 出力するデータの期間。
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: すべての IoT SIM の Harvest Data 書き込み回数をエクスポートする
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest export
  /stats/harvest/subscribers/{imsi}:
    get:
      description: IMSI で指定した Subscriber の SORACOM Harvest Data 利用量履歴を取得する。
      operationId: getHarvestStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: from
        required: true
        schema:
          type: integer
      - description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
        in: query
        name: to
        required: true
        schema:
          type: integer
      - description: |
          集計単位。

          - `month`: 月ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
          - `day`: 日ごと。

            `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
          - `minutes`: 約 5 分ごと。

            `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

            | 項目 | 説明 |
            |-|-|
            | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
            | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
        in: query
        name: period
        required: true
        schema:
          enum:
          - month
          - day
          - minutes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HarvestStatsResponse'
                type: array
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: IMSI で指定した Subscriber の SORACOM Harvest Data 利用量履歴を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest subscribers get
  /stats/napter/audit_logs:
    get:
      description: 指定された年月における Napter 監査ログの読み込みデータ通信量を byte 単位で取得する。
      operationId: getNapterAuditLogsExportedDataStats
      parameters:
      - description: 現在時刻の 18 か月前 〜 現在時刻の年月を YYYYMM 形式で指定します。
        in: query
        name: year_month
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NapterAuditLogsExportedDataStatsResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: Napter 監査ログの月次読み込みデータ量を取得する
      tags:
      - Stats
      x-soracom-cli:
      - stats napter audit-logs get
  /subscribers:
    get:
      description: |
        条件に合う Subscriber を取得します。Subscriber が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listSubscribers
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: '検索対象にする status。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `active`,
          `inactive`, `ready`, `instock`, `shipped`, `suspended`, `terminated`'
        in: query
        name: status_filter
        required: false
        schema:
          type: string
      - description: |
          検索対象にする速度クラス。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり:

          - `s1.minimum`
          - `s1.slow`
          - `s1.standard`
          - `s1.fast`
          - `s1.4xfast`
          - `s1.8xfast`
          - `u1.standard`
          - `u1.slow`
          - `t1.standard`
          - `arc.standard`
        in: query
        name: speed_class_filter
        required: false
        schema:
          type: string
      - description: 検索対象にする製造番号。`|`で区切って複数指定することができる。指定された値で始まる製造番号を持つ Subscriber
          の一覧を返す。
        in: query
        name: serial_number_filter
        required: false
        schema:
          type: string
      - description: 取得する Subscriber の上限 (1 〜 100)。ただし、返却される Subscriber の個数は指定された値を下回る可能性があります。
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
      - description: 前ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscriber'
                type: array
          description: A list of subscribers
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のリストを取得する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}:
    get:
      description: 指定した Subscriber の情報を取得する。
      operationId: getSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の情報を取得する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers get
  /subscribers/{imsi}/activate:
    post:
      description: 指定した Subscriber のステータスを「使用中 (active)」に変更する。
      operationId: activateSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のステータスを「使用中 (active)」に変更する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers activate
  /subscribers/{imsi}/bundles:
    put:
      description: 指定した Subscriber にバンドルを設定します。
      operationId: putBundles
      parameters:
      - description: 対象の Subscriber の IMSI。IMSI は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
            - D-300MB
            schema:
              items:
                description: 設定するバンドル。以下のいずれかを指定します。サブスクリプションがサポートするバンドルを指定してください。
                enum:
                - D-300MB
                - DU-10GB
                - DU-50GB
                - DU-100GB
                type: string
              type: array
        description: Subscriber に設定するバンドルの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "400":
          description: 指定されたバンドルは、この Subscriber のサブスクリプションではサポートされていない
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber にバンドルを設定する
      tags:
      - Subscriber
      x-sam-operationId: putBundles
      x-soracom-cli:
      - subscribers put-bundles
  /subscribers/{imsi}/data:
    get:
      description: |
        指定した IoT SIM から Harvest Data に送信されたデータの中で、条件に合うデータを取得します。データエントリが 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: getDataFromSubscriber
      parameters:
      - description: データ取得対象の IoT SIM の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 取得対象の期間の始まり (UNIX 時間 (ミリ秒))
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: 取得対象の期間の終わり (UNIX 時間 (ミリ秒))
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: データエントリのソート順。下降順 (最新のデータが先頭) もしくは上昇順 (最も古いデータが先頭)。
        in: query
        name: sort
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
      - description: 取得するデータエントリ数の上限 (1 〜 1000)。デフォルトは、`10` です。
        in: query
        name: limit
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: |
          前のページで取得した最後のデータエントリのキー。この API でのデータエントリーのキーは、`${UNIX 時間 (ミリ秒)}_${IMSI}` です。このパラメータを指定することで次のデータエントリを取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataEntry'
                type: array
          description: データエントリのリスト
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM から Harvest Data に送信したデータを取得する
      tags:
      - Subscriber
      x-soracom-cli:
      - data get
      - subscribers get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/deactivate:
    post:
      description: 指定した Subscriber のステータスを「休止中 (inactive)」に変更する。
      operationId: deactivateSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のステータスを「休止中 (inactive)」に変更する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers deactivate
  /subscribers/{imsi}/delete_session:
    post:
      description: 指定した Subscriber のセッションを切断する。
      operationId: deleteSubscriberSession
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のセッションを切断する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-session
  /subscribers/{imsi}/disable_termination:
    post:
      description: 指定した Subscriber の解約プロテクションを設定する (解約できないようにする)。
      operationId: disableTermination
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の解約プロテクションを設定する (解約できないようにする)
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers disable-termination
  /subscribers/{imsi}/downlink/ping:
    post:
      description: 指定した Subscriber に ICMP ping リクエストを送信する。
      operationId: subscriberDownlinkPingToUserEquipment
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownlinkPingRequest'
        description: ping リクエストのオプション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownlinkPingResponse'
          description: ping の結果
      security:
      - api_key: []
        api_token: []
      summary: Subscriber に対して ping リクエストを送信する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers downlink-ping
  /subscribers/{imsi}/enable_termination:
    post:
      description: 指定した Subscriber の解約プロテクションを解除する (解約できるようにする)。
      operationId: enableTermination
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の解約プロテクションを解除する (解約できるようにする)
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers enable-termination
  /subscribers/{imsi}/events/sessions:
    get:
      description: |
        指定した Subscriber に関する過去 32 日間のセッションの作成 / 変更 / 切断のイベント履歴を取得します。イベント履歴が 1 ページに収まらない場合は、同じ条件で次のページを取得するための URL が、レスポンスの `link` ヘッダーに含まれます。
      operationId: listSessionEvents
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: イベントの検索範囲時刻の始まり(unixtime)
        in: query
        name: from
        required: false
        schema:
          type: integer
      - description: イベントの検索範囲時刻の終わり(unixtime)
        in: query
        name: to
        required: false
        schema:
          type: integer
      - description: 取得するイベント数の上限
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後のイベントのタイムスタンプ。このパラメータを指定することで次のイベント以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
          description: A list of session events
      security:
      - api_key: []
        api_token: []
      summary: セッション履歴リストを取得する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/register:
    post:
      description: オペレーターに Subscriber を登録する。
      operationId: registerSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSubscribersRequest'
        description: subscriber
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: Subscriber 登録完了
      security:
      - api_key: []
        api_token: []
      summary: Subscriber を登録する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers register
  /subscribers/{imsi}/report_local_info:
    post:
      description: Subscriber に対し、SIM ローカル情報レポートを更新するように指示する。
      operationId: reportLocalInfo
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: SIM ローカル情報レポートの指示に成功。Subscriber の情報は SIM からのレポートが成功した時点で非同期に更新される
        "400":
          description: Subscriber が SIM ローカル情報レポート機能に対応していない
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: SIM ローカル情報レポートを更新する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers report-local-info
  /subscribers/{imsi}/send_sms:
    post:
      description: 指定した Subscriber 宛に SMS を送信する。
      operationId: sendSms
      parameters:
      - description: SMS 送信対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: メッセージ本体とエンコーディングタイプからなる SMS 送信リクエスト
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS 送信を受け付け完了。メッセージに割り振られた ID を返す
        "400":
          description: 指定した Subscriber は SMS API をサポートしていない
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber を IMSI で指定して SMS を送信する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms
  /subscribers/{imsi}/set_expiry_time:
    post:
      description: 指定した Subscriber の有効期限とアクションを設定する。
      operationId: setExpiryTime
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryTime'
        description: 更新後の有効期限 (UNIX 時間 (ミリ秒)) とアクション
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の有効期限とアクションを設定する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-expiry-time
  /subscribers/{imsi}/set_group:
    post:
      description: IoT SIM を SIM グループに所属させます。
      operationId: setGroup
      parameters:
      - description: 対象の IoT SIM の Subscriber の IMSI。IMSI は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM を SIM グループに所属させる
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-group
  /subscribers/{imsi}/set_imei_lock:
    post:
      description: 指定した Subscriber の IMEI ロックを設定する。
      operationId: setImeiLock
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetImeiLockRequest'
        description: Subscriber に指定する IMEI ロックの設定 （オンラインの Subscriber の現在の IMEI にロックするには
          IMEI は指定しなくてもよい）
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "400":
          description: IMEI 文字列が無効か、オフラインの Subscriber にも関わらず IMEI が指定されていない.
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の IMEI ロックを設定する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-imei-lock
  /subscribers/{imsi}/set_to_standby:
    post:
      description: 指定した Subscriber のステータスを「利用開始待ち (standby)」に変更する。
      operationId: setSubscriberToStandby
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "400":
          description: 指定した Subscriber は「利用開始待ち (standby)」に対応していない
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のステータスを「利用開始待ち (standby)」に変更する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-to-standby
  /subscribers/{imsi}/suspend:
    post:
      description: 指定した Subscriber のステータスを「利用中断中 (suspended)」に変更する。
      operationId: suspendSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のステータスを「利用中断中 (suspended)」に変更する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers suspend
  /subscribers/{imsi}/tags:
    put:
      description: 指定した Subscriber のタグを追加 / 更新する。
      operationId: putSubscriberTags
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagUpdateRequest'
              type: array
        description: 追加・更新対象のタグの配列
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のタグを追加 / 更新する
      tags:
      - Subscriber
      x-sam-operationId: putTags
      x-soracom-cli:
      - subscribers put-tags
  /subscribers/{imsi}/tags/{tag_name}:
    delete:
      description: 指定した Subscriber のタグを削除する。
      operationId: deleteSubscriberTag
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定した Subscriber あるいはタグが存在しない
      security:
      - api_key: []
        api_token: []
      summary: Subscriber のタグを削除する
      tags:
      - Subscriber
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - subscribers delete-tag
  /subscribers/{imsi}/terminate:
    post:
      description: 指定した Subscriber を解約する。
      operationId: terminateSubscriber
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          format: IMSI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber を解約する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers terminate
  /subscribers/{imsi}/unset_expiry_time:
    post:
      description: 指定した Subscriber の有効期限を解除する。
      operationId: unsetExpiryTime
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定した Subscriber の有効期限の解除に成功
        "404":
          description: 指定した Subscriber が存在しないか、Subscriber に有効期限がない
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の有効期限を解除する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-expiry-time
  /subscribers/{imsi}/unset_group:
    post:
      description: IoT SIM を SIM グループから外します。
      operationId: unsetGroup
      parameters:
      - description: 対象の IoT SIM の Subscriber の IMSI。IMSI は [Sim:listSims API](#/Sim/listSims)
          で取得できます。
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: IoT SIM を SIM グループから外す
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-group
  /subscribers/{imsi}/unset_imei_lock:
    post:
      description: 指定した Subscriber の IMEI ロックを解除する。
      operationId: unsetImeiLock
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の IMEI ロックを解除する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-imei-lock
  /subscribers/{imsi}/update_speed_class:
    post:
      description: 指定した Subscriber の速度クラスを変更する。
      operationId: updateSpeedClass
      parameters:
      - description: 対象の Subscriber の IMSI
        in: path
        name: imsi
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpeedClassRequest'
        description: speed_class
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: 更新後の Subscriber の詳細情報。
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber の速度クラスを更新する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers update-speed-class
  /subscribers/export:
    post:
      description: すべての Subscriber を CSV ファイルとしてエクスポートする
      operationId: exportSubscribers
      parameters:
      - description: エクスポート方法 (非同期, 同期)
        in: query
        name: export_mode
        required: false
        schema:
          default: sync
          enum:
          - async
          - sync
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileExportResponse'
          description: Subscriber のエクスポート先
      security:
      - api_key: []
        api_token: []
      summary: すべての Subscriber を CSV ファイルにエクスポートする
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers export
  /subscribers/msisdn/{msisdn}/send_sms:
    post:
      description: MSISDN で指定した Subscriber 宛に SMS を送信する。
      operationId: sendSmsByMsisdn
      parameters:
      - description: SMS 送信対象の Subscriber の MSISDN
        in: path
        name: msisdn
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsForwardingRequest'
        description: メッセージ本体とエンコーディングタイプからなる SMS 送信リクエスト
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsForwardingReport'
          description: SMS 送信を受け付け完了。メッセージに割り振られた ID を返す
        "400":
          description: 指定した Subscriber は SMS API をサポートしていない
        "404":
          description: Subscriber が存在しない。
      security:
      - api_key: []
        api_token: []
      summary: Subscriber を MSISDN で指定して SMS を送信する
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms-by-msisdn
  /subscribers/transfer_token/{token}:
    delete:
      description: IoT SIM の譲渡用トークンを無効化し、譲渡用トークンに紐づくすべての IoT SIM の譲渡をキャンセルします。この API
        を利用するには、譲渡元のオペレーターで発行した API キーと API トークンが必要です。
      operationId: deleteSubscriberTransferToken
      parameters:
      - description: 譲渡用トークン。譲渡用トークンは [Subscriber:issueSubscriberTransferToken](#/Subscriber/issueSubscriberTransferToken)
          で取得できます。
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 譲渡用トークンが無効化され、譲渡がキャンセルされました。
        "404":
          description: 譲渡用トークンが存在しません。
      security:
      - api_key: []
        api_token: []
      summary: 未使用の IoT SIM の譲渡をキャンセルする (譲渡用トークンを無効化する)
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-transfer-token
  /subscribers/transfer_token/issue:
    post:
      description: |
        未使用の IoT SIM の譲渡を開始します。この API を利用するには、譲渡元のオペレーターで発行した API キーと API トークンが必要です。この API を実行すると、譲渡用トークンが発行され、譲渡先のオペレーターにメールで送付されます。譲渡について詳しくは、[IoT SIM をほかのオペレーターへ譲渡 (移管) する](/ja-jp/docs/air/transfer-sim/?tab-16-2=selected) を参照してください。

        - 譲渡をキャンセルする際は、譲渡用トークンごとにキャンセルします。IoT SIM を 1 件ずつキャンセルする可能性がある場合は、IMSI を 1 件だけ指定してください。キャンセルする場合は、[Subscriber:deleteSubscriberTransferToken API](#/Subscriber/deleteSubscriberTransferToken) を利用します。
        - この API を実行すると、IoT SIM のステータスが「譲渡手続き中」に切り替わります。

        **Warning**: 「譲渡手続き中」の IoT SIM のステータスは、変更しないでください。ステータスを変更すると、この手順では譲渡できなくなります。ステータスが変更された IoT SIM を譲渡する手続きについては、[ステータスが変わった IoT SIM を譲渡する](/ja-jp/docs/air/transfer-sim/#ステータスが変わった-iot-sim-を譲渡する) を参照してください。

        **Info**: 譲渡先のオペレーターの情報は、譲渡先のオペレーターで SORACOM ユーザーコンソールにログインすると確認できます。詳しくは、[オペレーター ID を確認する](/ja-jp/guides/basic-knowledge/display-operator-id/) を参照してください。
      operationId: issueSubscriberTransferToken
      requestBody:
        content:
          application/json:
            example:
              transferDestinationOperatorEmail: transfer-destination-XX@example.com
              transferDestinationOperatorId: OPXXXXXXXXXX
              transferImsi:
              - 44XX01234567891
              - 44XX01234567892
              - 44XX01234567893
              - 44XX01234567894
            schema:
              $ref: '#/components/schemas/IssueSubscriberTransferTokenRequest'
        description: 譲渡先のオペレーターのメールアドレス、オペレーター ID、譲渡対象の IoT SIM の IMSI。
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                token: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
              schema:
                $ref: '#/components/schemas/IssueSubscriberTransferTokenResponse'
          description: |
            OK。`transferImsi` で指定した IoT SIM のステータスが「譲渡手続き中」に切り替わります。

            **Warning**: 「譲渡手続き中」の IoT SIM のステータスは、変更しないでください。ステータスを変更すると、API を利用した譲渡はできなくなります。
      security:
      - api_key: []
        api_token: []
      summary: 未使用の IoT SIM の譲渡を開始する (譲渡用トークンを発行する)
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers issue-transfer-token
  /subscribers/transfer_token/verify:
    post:
      description: IoT SIM の譲渡用トークンを検証して、譲渡を受け入れます。この API を利用するには、譲渡先のオペレーターで発行した
        API キーと API トークンが必要です。
      operationId: verifySubscriberTransferToken
      requestBody:
        content:
          application/json:
            example:
              token: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            schema:
              $ref: '#/components/schemas/VerifySubscriberTransferTokenRequest'
        description: 譲渡用トークン。譲渡用トークンは、メールで送付されます。
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transferredImsi:
                - 44XX01234567891
                - 44XX01234567892
                - 44XX01234567893
                - 44XX01234567894
              schema:
                $ref: '#/components/schemas/VerifySubscriberTransferTokenResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 未使用の IoT SIM の譲渡を受け入れる (譲渡用トークンを検証する)
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers verify-transfer-token
  /virtual_private_gateways:
    get:
      description: VPG の一覧を返す
      operationId: listVirtualPrivateGateways
      parameters:
      - description: VPG についた Tag 名。完全一致する Tag 名が検索対象となる。tag_name を指定した場合、tag_value
          が必須。
        in: query
        name: tag_name
        required: false
        schema:
          type: string
      - description: VPG についた Tag の値。
        in: query
        name: tag_value
        required: false
        schema:
          type: string
      - description: タグの検索条件。
        in: query
        name: tag_value_match_mode
        required: false
        schema:
          default: exact
          enum:
          - exact
          - prefix
          type: string
      - description: レスポンス 1 ページあたりの最大数
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の VPG の ID。このパラメータを指定することで次の VPG から始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualPrivateGateway'
                type: array
          description: VPG の一覧
      security:
      - api_key: []
        api_token: []
      summary: VPG の一覧を取得する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: VPG を新規作成する
      operationId: createVirtualPrivateGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualPrivateGatewayRequest'
        description: 作成対象の VPG の情報を含むリクエスト
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: VPG を新規作成する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create
  /virtual_private_gateways/{vpg_id}:
    get:
      description: 指定された VPG の情報を取得する
      operationId: getVirtualPrivateGateway
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: 指定された VPG
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG の情報を取得する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get
  /virtual_private_gateways/{vpg_id}/customer_routes:
    post:
      description: VPG にルーティングテーブルエントリを作成する
      operationId: createCustomerRoute
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRouteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRoute'
          description: ルーティングテーブルエントリが作成されました
        "400":
          description: リクエストが不正
        "404":
          description: 指定された VPG が存在しません
      security:
      - api_key: []
        api_token: []
      summary: ルーティングテーブルエントリを作成する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-customer-route
  /virtual_private_gateways/{vpg_id}/customer_routes/{route_id}:
    delete:
      description: VPG のルーティングテーブルエントリを削除する
      operationId: deleteCustomerRoute
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: ルートの ID
        in: path
        name: route_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ルーティングテーブルエントリが削除されました
        "404":
          description: 指定された VPG が存在しません
      security:
      - api_key: []
        api_token: []
      summary: ルーティングテーブルエントリを削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-customer-route
    put:
      description: VPG のルーティングテーブルエントリのゲートウェイを更新する
      operationId: updateCustomerRoute
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: ルートの ID
        in: path
        name: route_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRouteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRoute'
          description: ルーティングテーブルエントリが更新されました
        "400":
          description: リクエストが不正
        "404":
          description: 指定された VPG が存在しません
      security:
      - api_key: []
        api_token: []
      summary: ルーティングテーブルエントリを更新する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-customer-route
  /virtual_private_gateways/{vpg_id}/fixed_public_ip_addresses:
    delete:
      description: VPG の固定グローバル IP アドレスオプションを無効化します。
      operationId: releaseFixedPublicIpAddresses
      parameters:
      - in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: VPG の固定グローバル IP アドレスオプションが無効化されました。
        "400":
          description: すでに VPG の固定グローバル IP アドレスオプションは無効化されています。
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: VPG の固定グローバル IP アドレスオプションを無効化する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg release-fixed-public-ip-addresses
    post:
      description: VPG の固定グローバル IP アドレスオプションを有効化します。
      operationId: assignFixedPublicIpAddresses
      parameters:
      - in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: VPG の固定グローバル IP アドレスオプションが有効化されました。
        "400":
          description: すでに VPG の固定グローバル IP アドレスオプションは有効化されています。
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: VPG の固定グローバル IP アドレスオプションを有効化する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-fixed-public-ip-addresses
  /virtual_private_gateways/{vpg_id}/gate/close:
    post:
      description: 指定した VPG で SORACOM Gate を無効化し、Gate を閉じる
      operationId: closeGate
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: SORACOM Gate の無効化が完了
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Gate を閉じる
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg close-gate
  /virtual_private_gateways/{vpg_id}/gate/disable_privacy_separator:
    post:
      description: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を無効化して、Gate D2D 機能を有効化します。
      operationId: disableGatePrivacySeparator
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          format: VpgId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: プライバシーセパレーター機能の無効化に成功
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を無効にする
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg disable-gate-privacy-separator
  /virtual_private_gateways/{vpg_id}/gate/enable_privacy_separator:
    post:
      description: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を有効化して、Gate D2D 機能を無効化します。
      operationId: enableGatePrivacySeparator
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          format: VpgId
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: プライバシーセパレーター機能の有効化に成功
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: 指定された VPG に対して SORACOM Gate のプライバシーセパレーター機能を有効化する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg enable-gate-privacy-separator
  /virtual_private_gateways/{vpg_id}/gate/open:
    post:
      description: 指定した VPG で SORACOM Gate を有効化し、Gate を開く
      operationId: openGate
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenGateRequest'
        description: オプショナルな Gate の設定パラメータ。
      responses:
        "200":
          description: SORACOM Gate の有効化が完了
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: SORACOM Gate を開く
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg open-gate
  /virtual_private_gateways/{vpg_id}/gate/peers:
    get:
      description: VPG に登録された Gate Peer の一覧を取得する
      operationId: listGatePeers
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GatePeer'
                type: array
          description: 正しく VPG に登録された Gate Peer のリストが取得できた
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG に登録された Gate Peer の一覧を取得する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-gate-peers
    post:
      description: VPG に Gate Peer を登録する
      operationId: registerGatePeer
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterGatePeerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatePeer'
          description: VPG に Gate Peer の登録が完了した
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG に Gate Peer を登録する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg register-gate-peer
  /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}:
    delete:
      description: Gate Peer を VPG から登録解除する
      operationId: unregisterGatePeer
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象の Peer の ID
        in: path
        name: outer_ip_address
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Gate Peer の登録解除に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG あるいは Peer は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG から Gate Peer を登録解除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unregister-gate-peer
  /virtual_private_gateways/{vpg_id}/gate/routing/static/sims/disable:
    post:
      description: SIM ベースルーティングを無効化します。
      operationId: disableSimBasedRouting
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: SIM ベースルーティングが無効化されました。
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SIM ベースルーティングを無効化する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg disable-sim-based-routing
  /virtual_private_gateways/{vpg_id}/gate/routing/static/sims/enable:
    post:
      description: SIM ベースルーティングを有効化します。
      operationId: enableSimBasedRouting
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "201":
          description: SIM ベースルーティングが有効化されました。
        "400":
          description: SORACOM Gate が有効化されていません。
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: SIM ベースルーティングを有効化する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg enable-sim-based-routing
  /virtual_private_gateways/{vpg_id}/gate/routing/static/sims/routes:
    put:
      description: ルーターの LAN の IP アドレスレンジと SIM ID の対応を登録します。
      operationId: putSimBasedRoutingRoutes
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSimBasedRoutingRoutesRequest'
        description: ルーターの LAN の IP アドレスレンジと、SIM ID の対応を指定します。
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: リクエストに誤りがあります。
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: ルーターの LAN の IP アドレスレンジと SIM ID の対応を登録する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg put-sim-based-routing-routes
  /virtual_private_gateways/{vpg_id}/gate/set_vxlan_id:
    post:
      description: Gate の VXLAN ID を設定します。
      operationId: setVirtualPrivateGatewayVxLanId
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVirtualPrivateGatewayVxLanIdRequest'
        required: true
      responses:
        "204":
          description: OK
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: Gate の VXLAN ID を設定する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-vxlan-id
  /virtual_private_gateways/{vpg_id}/ip_address_map:
    get:
      description: 指定された VPG の IP アドレスマップのエントリを取得します。
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      parameters:
      - description: 対象の VPG の ID。
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 取得する IP アドレスマップのエントリの上限数。なお、レスポンスには、指定した値よりも少ないデータしか含まれないことがあります。
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: 前ページで取得した最後の IP アドレス。このパラメータを指定することで、次ページ (IP アドレスマップのエントリのリスト)
          を取得できます。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpAddressMapEntry'
                type: array
          description: IP アドレスマップのエントリのリスト
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG の IP アドレスマップのエントリの一覧を取得する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-ip-address-map-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: VPG の IP アドレスマップのエントリーを追加します。
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIpAddressMapEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressMapEntry'
          description: IP アドレスマップのエントリー追加に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG の IP アドレスマップのエントリーを追加する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg put-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/ip_address_map/{key}:
    delete:
      description: VPG の IP アドレスマップからエントリーを削除する
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象の Key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          description: IP アドレスマップのエントリー削除に成功
        "400":
          description: リクエストに誤りがある
        "404":
          description: 指定された VPG または Key は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG の IP アドレスマップからエントリーを削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers:
    post:
      description: Junction ミラーリング peer を追加します。
      operationId: createMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionMirroringPeer'
        description: ミラーリング peer に関する情報
        required: true
      responses:
        "201":
          description: ミラーリング peer が作成または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction ミラーリング peer を追加する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}:
    delete:
      description: Junction ミラーリング peer を削除します。
      operationId: deleteMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 削除したいミラーリング peer の IP アドレス
        in: path
        name: ipaddr
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ミラーリング peer が削除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction ミラーリング peer を削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-mirroring-peer
    put:
      description: Junction ミラーリング peer を更新します。
      operationId: updateMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 更新したいミラーリング peer の IP アドレス
        in: path
        name: ipaddr
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AttributeUpdate'
              type: array
        description: 更新する属性のリスト
        required: true
      responses:
        "200":
          description: ミラーリング peer の情報が更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction ミラーリング peer を更新する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/set_inspection:
    post:
      description: Junction インスペクション機能の設定を行います。
      operationId: setInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionInspectionConfiguration'
        description: インスペクション設定内容
        required: true
      responses:
        "200":
          description: 設定内容が追加または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction インスペクション機能の設定を行う
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-inspection
  /virtual_private_gateways/{vpg_id}/junction/set_redirection:
    post:
      description: Junction リダイレクション機能の設定を行います。
      operationId: setRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JunctionRedirectionConfiguration'
        description: リダイレクション設定内容
        required: true
      responses:
        "200":
          description: 設定内容が追加または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction リダイレクション機能の設定を行う
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-redirection
  /virtual_private_gateways/{vpg_id}/junction/unset_inspection:
    post:
      description: Junction インスペクション機能の設定を解除します。
      operationId: unsetInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 設定が解除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction インスペクション機能の設定を解除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-inspection
  /virtual_private_gateways/{vpg_id}/junction/unset_redirection:
    post:
      description: Junction リダイレクション機能の設定を解除します。
      operationId: unsetRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 設定が解除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
        api_token: []
      summary: Junction リダイレクション機能の設定を解除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-redirection
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions:
    get:
      description: VPG に対するパケットキャプチャセッションのリストを取得する。
      operationId: listPacketCaptureSessions
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 前ページで取得した最後のパケットキャプチャセッション。このパラメータを指定することで次のパケットキャプチャセッション以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        schema:
          default: "null"
          type: string
      - description: 取得するパケットキャプチャセッションの上限
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PacketCaptureSession'
                type: array
          description: VPG に対するパケットキャプチャセッションのリスト
        "400":
          description: Failed to list packet capture sessions associated with the
            VPG
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG に対するパケットキャプチャセッションのリストを取得する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-packet-capture-sessions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: VPG に対するパケットキャプチャセッションを作成する。
      operationId: createPacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacketCaptureSessionRequest'
        description: パケットキャプチャセッションリクエスト
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: VPG に対するパケットキャプチャセッション
        "400":
          description: VPG に対するパケットキャプチャセッションの作成が失敗した
        "404":
          description: 指定された VPG が存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG に対するパケットキャプチャセッションを作成する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-packet-capture-session
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}:
    delete:
      description: VPG に対するパケットキャプチャセッションを削除する。
      operationId: deletePacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 削除されたパケットキャプチャセッションの情報
        "400":
          description: VPG に対するパケットキャプチャセッションの削除に失敗
        "404":
          description: VPG に対するパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG に対するパケットキャプチャセッションを削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-packet-capture-session
    get:
      description: VPG に対するパケットキャプチャセッションを取得する。
      operationId: getPacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: VPG に対するパケットキャプチャセッション
        "404":
          description: VPG に対するパケットキャプチャセッションが存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG に対するパケットキャプチャセッションを取得する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get-packet-capture-session
  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop:
    post:
      description: VPG に対するパケットキャプチャセッションを停止する。
      operationId: stopPacketCaptureSession
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 対象のパケットキャプチャセッション ID
        in: path
        name: session_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PacketCaptureSession'
          description: 停止されたパケットキャプチャセッションの情報
        "400":
          description: The packet capture session can be stopped only when its status
            is CAPTURING
        "404":
          description: VPG に対するパケットキャプチャセッションが存在しない
        "500":
          description: VPG に対するパケットキャプチャセッションが停止できなかった
      security:
      - api_key: []
        api_token: []
      summary: VPG に対するパケットキャプチャセッションを停止する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg stop-packet-capture-session
  /virtual_private_gateways/{vpg_id}/set_routing_filter:
    post:
      description: VPG のアウトバウンドルーティングフィルタを設定する
      operationId: setRoutingFilter
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoutingFilterEntry'
              type: array
        description: アウトバウンドルーティングフィルタエントリのリスト
        required: true
      responses:
        "200":
          description: アウトバウンドルーティングフィルタが正しく設定された
        "400":
          description: 引数が不正
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG のアウトバウンドルーティングフィルタを設定する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-routing-filter
  /virtual_private_gateways/{vpg_id}/tags:
    put:
      description: VPG のタグを更新します。
      operationId: updateVirtualPrivateGatewayTags
      parameters:
      - in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVirtualPrivateGatewayTagsRequest'
        required: true
      responses:
        "204":
          description: OK
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: VPG のタグを更新する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-tags
  /virtual_private_gateways/{vpg_id}/tags/{tag_name}:
    delete:
      description: VPG のタグを削除します。
      operationId: deleteVirtualPrivateGatewayTag
      parameters:
      - in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: OK
        "404":
          description: 指定された VPG は存在しません。
      security:
      - api_key: []
        api_token: []
      summary: VPG のタグを削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-tag
  /virtual_private_gateways/{vpg_id}/terminate:
    post:
      description: 指定された VPG を Terminate する
      operationId: terminateVirtualPrivateGateway
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 指定された VPG の Terminate 作業を開始
        "400":
          description: 指定された VPG の Terminate できない理由が存在
        "404":
          description: 指定された VPG は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPG を削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg terminate
  /virtual_private_gateways/{vpg_id}/transit_gateway_peering_connections:
    post:
      description: 指定された VPG に Transit Gateway ピアリング接続を作成
      operationId: createTransitGatewayPeeringConnection
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayPeeringConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: Transit Gateway ピアリング接続が作成されました
        "400":
          description: リクエストが不正
        "404":
          description: 指定された VPG が存在しません
      security:
      - api_key: []
        api_token: []
      summary: Transit Gateway ピアリング接続を作成する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-transit-gateway-peering-connection
  /virtual_private_gateways/{vpg_id}/transit_gateway_peering_connections/{soracom_tgw_peering_attachment_id}:
    delete:
      description: 指定された Transit Gateway ピアリング接続を削除
      operationId: deleteTransitGatewayPeeringConnection
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Transit Gateway ピアリング接続の ID
        in: path
        name: soracom_tgw_peering_attachment_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Transit Gateway ピアリング接続が削除されました
        "404":
          description: 指定された VPG または Transit Gateway ピアリング接続が存在しません
      security:
      - api_key: []
        api_token: []
      summary: Transit Gateway ピアリング接続を削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-transit-gateway-peering-connection
  /virtual_private_gateways/{vpg_id}/transit_gateway_vpc_attachments:
    post:
      description: 指定された VPG に Transit Gateway VPC アタッチメントを作成
      operationId: createTransitGatewayVpcAttachment
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayVpcAttachmentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualPrivateGateway'
          description: Transit Gateway VPC アタッチメントが作成されました
        "400":
          description: リクエストが不正
        "404":
          description: 指定された VPG が存在しません
      security:
      - api_key: []
        api_token: []
      summary: Transit Gateway VPC アタッチメントを作成する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-transit-gateway-vpc-attachment
  /virtual_private_gateways/{vpg_id}/transit_gateway_vpc_attachments/{customer_tgw_vpc_attachment_id}:
    delete:
      description: 指定された Transit Gateway VPC アタッチメントを削除
      operationId: deleteTransitGatewayVpcAttachment
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Transit Gateway VPC アタッチメントの ID
        in: path
        name: customer_tgw_vpc_attachment_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Transit Gateway VPC アタッチメントが削除されました
        "404":
          description: 指定された VPG または Transit Gateway VPC アタッチメントが存在しません
      security:
      - api_key: []
        api_token: []
      summary: Transit Gateway VPC アタッチメントを削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-transit-gateway-vpc-attachment
  /virtual_private_gateways/{vpg_id}/transit_gateway_vpc_attachments/{customer_tgw_vpc_attachment_id}/accept:
    post:
      description: 指定された Transit Gateway VPC アタッチメントの接続リクエストを受け入れる
      operationId: acceptTransitGatewayVpcAttachmentFromCustomer
      parameters:
      - description: 対象の VPG ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: Transit Gateway VPC アタッチメントの ID
        in: path
        name: customer_tgw_vpc_attachment_id
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Transit Gateway VPC アタッチメントが受け入れられました
        "400":
          description: リクエストが不正
        "404":
          description: 指定された VPG または Transit Gateway VPC アタッチメントが存在しません
      security:
      - api_key: []
        api_token: []
      summary: Transit Gateway VPC アタッチメントの接続リクエストを受け入れる
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg accept-transit-gateway-vpc-attachment
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections:
    post:
      description: 指定された VPG に VPC ピアリング接続を作成
      operationId: createVpcPeeringConnection
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
        description: 作成対象の VPC ピアリング接続
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'
          description: 作成された VPC ピアリング接続
        "404":
          description: 指定された VPC ピアリング接続は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPC ピアリング接続を作成する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-vpc-peering-connection
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}:
    delete:
      description: 指定された VPC ピアリング接続を削除
      operationId: deleteVpcPeeringConnection
      parameters:
      - description: 対象の VPG の ID
        in: path
        name: vpg_id
        required: true
        schema:
          type: string
      - description: 削除対象の VPC ピアリング接続の ID
        in: path
        name: pcx_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: 指定された VPC ピアリング接続の削除完了
        "404":
          description: 指定された VPC ピアリング接続は存在しない
      security:
      - api_key: []
        api_token: []
      summary: VPC ピアリング接続を削除する
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-vpc-peering-connection
  /volume_discounts:
    get:
      description: |
        契約済みの長期利用割引リストを返します。

        **Warning**: 取得できる情報は、過去 18 か月、または契約が終了してから 6 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: listVolumeDiscounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 契約済みの長期利用割引の一覧を取得する
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts list
    post:
      description: 新規で長期利用割引の見積もりの作成を行います。orderId を /volume_discounts/{order_id}/confirm
        に PUT すると発注が完了します (現時点では、長期利用割引は plan-D バンドルなし、plan-K でのみ利用できます)。
      operationId: createVolumeDiscountQuotation
      requestBody:
        content:
          application/json:
            example:
              contractTermMonth: 12
              quantity: 1
              startDate: "20220401"
              volumeDiscountPaymentType: MONTHLY
              volumeDiscountType: SORACOM_AIR_BASIC_CHARGE_V2
            schema:
              $ref: '#/components/schemas/CreateEstimatedVolumeDiscountRequest'
        description: 長期割引契約詳細
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                currency: JPY
                orderId: xxxxxxxxxxxxxx_xxxxxxxx
                taxAmount: 0
                totalAmount: 0
                volumeDiscount:
                  contractTermMonth: 12
                  endDate: "20230331"
                  initialCost: 0
                  quantity: 1
                  startDate: "20220401"
                  taxIncludedInitialCost: 0
                  taxIncludedUnitPrice: 302.5
                  unitPrice: 275
                  volumeDiscountPaymentType: MONTHLY
                  volumeDiscountType: SORACOM_AIR_BASIC_CHARGE_V2
              schema:
                $ref: '#/components/schemas/EstimatedVolumeDiscountModel'
          description: Created
      security:
      - api_key: []
        api_token: []
      summary: 長期利用割引の見積もりを作成する
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts create
  /volume_discounts/{contract_id}:
    get:
      description: |
        契約済みの長期利用割引を取得します。

        **Warning**: 取得できる情報は、過去 18 か月、または契約が終了してから 6 か月までです。それ以前の情報が必要な場合は、[SORACOM サポート](/ja-jp/guides/support/) に問い合わせてください。
      operationId: getVolumeDiscount
      parameters:
      - description: 契約 ID。
        in: path
        name: contract_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVolumeDiscountResponse'
          description: OK.
        "400":
          description: 長期利用割引が見つかりません。
      security:
      - api_key: []
        api_token: []
      summary: 契約済みの長期利用割引を取得する
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts get
  /volume_discounts/{order_id}/confirm:
    put:
      description: 与信を実施し、問題ない場合に発注を確定します。
      operationId: confirmVolumeDiscountOrder
      parameters:
      - description: 発注 ID。発注 ID は [Order:createVolumeDiscountQuotation API](#/Order/createVolumeDiscountQuotation)
          で取得できます。
        in: path
        name: order_id
        required: true
        schema:
          example: xxxxxxxxxxxxxx_xxxxxxxx
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVolumeDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 長期利用割引の発注を確定する
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts confirm
  /volume_discounts/available_discounts:
    get:
      description: 購入可能な長期利用割引のリストを返します。
      operationId: listAvailableDiscounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableLongTermDiscountResponse'
          description: OK.
      security:
      - api_key: []
        api_token: []
      summary: 購入可能な長期利用割引の一覧を取得する
      tags:
      - Order
      x-soracom-cli:
      - volume-discounts available-discounts
components:
  examples:
    APITokenCredentials:
      value:
        credentials:
          token: sample_token
        type: api-token-credentials
    AWSCredentials:
      value:
        credentials:
          accessKeyId: sampleAccessKeyId
          secretAccessKey: sampleSecret
        type: aws-credentials
    AzureCredentials:
      value:
        credentials:
          key: your_key
          policyName: your_policy_name
        type: azure-credentials
    AzureIoTCredentials:
      value:
        credentials:
          sharedAccessKey: sample_access_key
          sharedAccessKeyName: sample
        type: azureIoT-credentials
    EsrijCredentials:
      value:
        credentials:
          refererUrl: https://example.com
        type: esrij-credentials
    GoogleIoTCredentials:
      value:
        credentials:
          algorithm: RS256
          deviceId: sample_device
          privateKey: your_private_key
          projectId: sample_projectID
          region: asia-east1
          registryId: sample
        type: googleIoT-credentials
    GoogleServiceAccountJson:
      value:
        credentials:
          credentials: '{"sample": "value"}'
        type: google-service-account-json
    IAMRoleCredentials:
      value:
        credentials:
          externalId: your_external_id
          roleArn: sample_role
        type: aws-iam-role-credentials
    InfoteriaPlatioCredentials:
      value:
        credentials:
          secretToken: sample_secret
          tokenId: sample_token
        type: infoteria-platio-credentials
    KiiThingifCredentials:
      value:
        credentials:
          app_id: sample_app
          app_key: sample_key
          client_id: sample_id
          client_secret: sample_secret
        type: kii-thingif-credentials
    LandlogCredentials:
      value:
        credentials:
          client_id: sample_id
          client_secret: sample_secret
        type: landlog-credentials
    MmcloudCredentials:
      value:
        credentials:
          commandcode: sample_code
          customerid: sample_customer
          machineid: sample_id
          machineidtype: sample_type
        type: mmcloud-credentials
    MotionboardCredentials:
      value:
        credentials:
          authkey: sample_auth
          template: temple_temp
          tenant: sample_tenant
        type: motionboard-credentials
    OptimCloudCredentials:
      value:
        credentials:
          client_id: sample_client
          client_secret: sample_secret
        type: optim-cloud-IoT-OS-credentials
    PreSharedKey:
      value:
        credentials:
          key: sample_key
        type: psk
    PubnubCredentials:
      value:
        credentials:
          pubKey: sample
          subKey: sample_sub
        type: pubnub-credentials
    SensorcorpusCredentials:
      value:
        credentials:
          session_code: sample_code
        type: sensorcorpus-credentials
    UsernamePasswordCredentials:
      value:
        credentials:
          password: sample_pass
          username: sample_user
        type: username-password-credentials
    X509Certificate:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: x509
  requestBodies:
    CreateAndUpdateCredentialsModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'
      description: 認証情報。
      required: true
    DeviceObjectModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceObjectModel'
        application/xml:
          schema:
            $ref: '#/components/schemas/DeviceObjectModel'
      description: XML か JSON により表現されたデバイスオブジェクトモデルの表記。
      required: true
    ExpiryTime:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExpiryTime'
      description: 'Expiry time after the update (unixtime: in milliseconds).'
      required: true
    Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
      required: true
    LagoonPlanChangingRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LagoonPlanChangingRequest'
      description: リクエスト。
      required: true
    MFAAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MFAAuthenticationRequest'
      description: request
      required: true
  schemas:
    APIAuditLogEntry:
      properties:
        apiKind:
          description: 'API 種別 (例: `/v1/auth`)。'
          type: string
        operatorId:
          description: API を呼び出したオペレーター ID。
          type: string
        remoteIpAddress:
          description: API の呼び出し元 IP アドレス。
          type: string
        requestPath:
          description: リクエストされた API のパス。
          type: string
        requestedTimeEpochMs:
          description: API が呼び出された時刻。この値はページネーションのために `last_evaluated_key` リクエストパラメータに利用することができます。
          format: int64
          type: integer
        userName:
          description: API を呼び出した SAM ユーザー名。もしこの値が空の場合は呼び出しユーザーは root ユーザーです。
          type: string
      type: object
    APICallError:
      properties:
        errorMessage:
          $ref: '#/components/schemas/APICallErrorMessage'
        httpStatus:
          format: int32
          type: integer
      type: object
    APICallErrorMessage:
      properties:
        code:
          description: エラーコード
          type: string
        message:
          description: エラーメッセージ。リクエスト時に X-Soracom-Lang ヘッダーに言語 (en, ja) を設定すると、エラーメッセージの出力言語を選択できます。
          type: string
      required:
      - code
      - message
      type: object
    ActionConfig:
      properties:
        properties:
          $ref: '#/components/schemas/ActionConfigProperty'
        type:
          description: "アクションの種類。以下のいずれかを設定します。種類によって、`properties` で指定できる値は異なります。\n\n-
            `SendMailAction`: メールを送る。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `executionDateTimeConst` (必須)\n  - `executionOffsetMinutes`\n  - `to`\n
            \ - `title`\n  - `message`\n- `SendMailToOperatorAction`: オペレーターのプライマリメールアドレスにメールを送る。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `executionDateTimeConst`
            (必須)\n  - `executionOffsetMinutes`\n  - `title`\n  - `message`\n- `ChangeSpeedClassAction`:
            IoT SIM の速度クラスを変更する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n  -
            `executionDateTimeConst` (必須)\n  - `executionOffsetMinutes`\n  - `speedClass`\n-
            `ActivationAction`、`DeactivationAction`、`StandbyAction`、`SuspendAction`:
            使用中 (active)、休止中 (inactive)、利用開始待ち (standby)、利用中断中 (suspended) に変更する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `executionDateTimeConst`
            (必須)\n  - `executionOffsetMinutes`\n- `ExecuteWebRequestAction`: 指定の URL
            にリクエストを送る。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `executionDateTimeConst`
            (必須)\n  - `executionOffsetMinutes`\n  - `url` (必須)\n  - `httpMethod` (必須)\n
            \ - `contentType` (必須)\n  - `headers` (必須)\n  - `body`\n- `InvokeAWSLambdaAction`:
            AWS Lambda を呼び出す。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `executionDateTimeConst`
            (必須)\n  - `executionOffsetMinutes`\n  - `endpoint` (必須)\n  - `functionName`
            (必須)\n  - `credentialsId` (必須)\n  - `parameter1`、`parameter2`、`parameter3`、`parameter4`、`parameter5`\n
            \ \n  **Warning**: `accessKey` および `secretAccessKey` は非推奨のプロパティです。`credentialsId`
            を利用してください。\n"
          enum:
          - ChangeSpeedClassAction
          - InvokeAWSLambdaAction
          - ExecuteWebRequestAction
          - SendMailAction
          - SendMailToOperatorAction
          - ActivationAction
          - DeactivationAction
          - StandbyAction
          - SuspendAction
          type: string
      required:
      - properties
      - type
      type: object
    ActionConfigProperty:
      properties:
        accessKey:
          deprecated: true
          description: (非推奨)。
          type: string
        body:
          description: |
            HTTP リクエストメッセージボディ。`httpMethod` が `POST` または `PUT` のときのみ有効です。

            - 変数を利用できます。詳しくは、[アクションで利用できる変数](/ja-jp/docs/event-handler/actions/#variables-that-can-be-used-for-actions) を参照してください。
          type: string
        contentType:
          description: Content-Type。
          type: string
        credentialsId:
          description: |
            AWS Lambda の認証情報 ID。あらかじめ、[認証情報ストア](/ja-jp/docs/credentials-store/) で「AWS 認証情報」または「AWS IAM ロール認証情報」を登録してください。
          type: string
        endpoint:
          description: AWS Lambda のサービスエンドポイント。
          type: string
        executionDateTimeConst:
          description: |
            アクションを実行するタイミング。

            - `IMMEDIATELY`: すぐに実行します。
            - `BEGINNING_OF_NEXT_MONTH`: 翌月の 1 日 0:00 (*1) に実行します。
            - `BEGINNING_OF_NEXT_DAY`: 翌日の 0:00 (*1) に実行します。
            - `AFTER_ONE_DAY`: 1 日後 (24 時間後) に実行します。
            - `NEVER`: 実行しません。

            (*1) アクションの実行は、UTC (協定世界時) を基準に行われます。たとえば `BEGINNING_OF_NEXT_DAY` を指定した場合は、日本時間ではなく UTC で日付が変わったときに実行されます。
          enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
          type: string
        executionOffsetMinutes:
          description: |
            アクションのオフセット (分)。デフォルトは `0` です。`0`～`525600` の整数を String 型で指定します。`executionDateTimeConst` で指定したタイミングから、実際にアクションを実行する時間をずらすことができます。詳しくは、[アクションのオフセット (分)](/ja-jp/docs/event-handler/how-it-works/#アクションのオフセット-分) を参照してください。
          type: string
        functionName:
          description: AWS Lambda のファンクション名。バージョンやエイリアスも指定できます。
          type: string
        headers:
          description: |
            HTTP リクエストヘッダー。キーと値を、エスケープした JSON オブジェクトで指定します。

            例: `"{\"key1\":\"value1\"},{\"key2\":\"value2\"}"`

            - 変数を利用できます。詳しくは、[アクションで利用できる変数](/ja-jp/docs/event-handler/actions/#variables-that-can-be-used-for-actions) を参照してください。
          type: object
        httpMethod:
          description: HTTP リクエストメソッド。
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          type: string
        message:
          description: |
            本文。

            - 変数を利用できます。詳しくは、[アクションで利用できる変数](/ja-jp/docs/event-handler/actions/#variables-that-can-be-used-for-actions) を参照してください。
          type: string
        parameter1:
          description: |
            AWS Lambda に渡すパラメーターの値。

            - `parameter1` を複数指定するなど、同じキーを繰り返し指定しないでください。
            - 変数を利用できます。詳しくは、[アクションで利用できる変数](/ja-jp/docs/event-handler/actions/#variables-that-can-be-used-for-actions) を参照してください。
          type: string
        parameter2:
          description: |
            `parameter1` と同様。
          type: string
        parameter3:
          description: |
            `parameter1` と同様。
          type: string
        parameter4:
          description: |
            `parameter1` と同様。
          type: string
        parameter5:
          description: |
            `parameter1` と同様。
          type: string
        secretAccessKey:
          deprecated: true
          description: (非推奨)。
          type: string
        speedClass:
          description: |
            速度クラス。以下のいずれかを指定します。ただし、サブスクリプションにあわせた速度クラスを指定してください。

            - plan01s、plan01s - Low Data Volume、planX3 X3-5MB、planP1、plan-D (バンドルなし)、plan-D D-300MB、plan-K2 K2-300MB、plan-K の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
            - plan-US の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
                - `s1.8xfast`
            - plan-DU の場合:
                - `u1.standard`
                - `u1.slow`

            **Warning**: plan-KM1 およびバーチャル SIM/Subscriber は、速度クラスが 1 種類のため変更できません。
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          - s1.8xfast
          - u1.standard
          - u1.slow
          type: string
        title:
          description: |
            件名。

            - 変数を利用できます。詳しくは、[アクションで利用できる変数](/ja-jp/docs/event-handler/actions/#variables-that-can-be-used-for-actions) を参照してください。
          type: string
        to:
          description: |
            宛先のメールアドレス。複数のメールアドレスは指定できません。
          type: string
        url:
          description: |
            接続先 URL とクエリパラメーター。

            - 変数を利用できます。詳しくは、[アクションで利用できる変数](/ja-jp/docs/event-handler/actions/#variables-that-can-be-used-for-actions) を参照してください。
          type: string
      required:
      - executionDateTimeConst
      type: object
    AirAggregatedStatsResponse:
      properties:
        downloadByteSizeTotal:
          description: 集計対象期間にダウンロードしたバイト数
          format: int64
          type: integer
        unixtime:
          description: 集計対象期間の開始日時 (UNIX 時間 (秒))
          format: int64
          type: integer
        uploadByteSizeTotal:
          description: 集計対象期間にアップロードしたバイト数
          format: int64
          type: integer
      type: object
    AirStatsResponse:
      properties:
        dataTrafficStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/DataTrafficStats'
          type: object
        date:
          description: 日時 (協定世界時 (UTC))
          type: string
        unixtime:
          format: int64
          type: integer
      type: object
    ArcCredentialAttachRequest:
      properties:
        arcClientPeerPublicKey:
          description: if this parameter is missing, the sever generates keypair
          type: string
      type: object
    ArcCredentialAttachResponse:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
      type: object
    ArcCredentialRenewRequest:
      properties:
        arcClientPeerPublicKey:
          description: IoT SIM に付与する Arc クライアントの公開鍵。もしこの値が空の場合はサーバーがキーペアを生成します。
          type: string
      type: object
    ArcCredentialRenewResponse:
      properties:
        arcClientPeerPrivateKey:
          type: string
        arcClientPeerPublicKey:
          type: string
      type: object
    ArcSessionCreateResponse:
      properties:
        arcAllowedIPs:
          items:
            type: string
          type: array
        arcClientPeerIpAddress:
          type: string
        arcClientPeerPublicKey:
          type: string
        arcServerEndpoint:
          type: string
        arcServerPeerPublicKey:
          type: string
      type: object
    ArcSessionStatus:
      properties:
        arcAllowedIPs:
          description: Arc サーバーから受信した WireGuard AllowedIPs が表示されます。
          items:
            type: string
          type: array
        arcClientPeerIpAddress:
          description: クライアントの IP アドレスです。
          type: string
        arcClientPeerPublicKey:
          type: string
        arcServerEndpoint:
          description: Arc サーバーの WireGuard プロトコルのエンドポイントです。
          type: string
        arcServerPeerPublicKey:
          description: Arc サーバーのサーバーピア公開鍵です。
          type: string
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        lastUpdatedAt:
          format: int64
          type: integer
        vpgId:
          type: string
      type: object
    AttachRoleRequest:
      properties:
        roleId:
          type: string
      type: object
    AttributeUpdate:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    AuthKeyResponse:
      properties:
        authKeyId:
          type: string
        createDateTime:
          format: int64
          type: integer
        lastUsedDateTime:
          format: int64
          type: integer
      type: object
    AuthRequest:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
        email:
          type: string
        mfaOTPCode:
          type: string
        operatorId:
          type: string
        password:
          type: string
        tokenTimeoutSeconds:
          default: 86400
          format: int64
          maximum: 172800
          type: integer
        userName:
          type: string
      type: object
    AuthResponse:
      properties:
        apiKey:
          example: api-abcde123-45fg-hij6-7890-klmno12345pq
          type: string
        operatorId:
          example: OPXXXXXXXXXX
          type: string
        token:
          example: abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...
          type: string
        userName:
          example: SORACOMAPI
          type: string
      type: object
    AvailableLongTermDiscountModel:
      properties:
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        taxIncludedUnitPrice:
          description: 税込単価
          format: double
          type: number
        unitPrice:
          description: 単価
          format: double
          type: number
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    AvailableLongTermDiscountResponse:
      properties:
        availableLongTermDiscounts:
          description: 購入可能な長期利用割引のリスト
          items:
            $ref: '#/components/schemas/AvailableLongTermDiscountModel'
          type: array
      type: object
    BeamStatsResponse:
      properties:
        beamStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomBeamStats'
          type: object
        date:
          type: string
        unixtime:
          format: int64
          type: integer
      type: object
    BillItemCostBreakdown:
      properties:
        amount:
          description: 合計金額
          format: double
          type: number
        billItemCategory:
          description: 課金項目カテゴリ
          type: string
        billItemName:
          description: 課金項目名
          type: string
    BillingSummaryResponseOfBillItems:
      properties:
        costBreakdownList:
          description: 利用料金のリスト。合計金額順に降順でソートされます。
          items:
            $ref: '#/components/schemas/BillItemCostBreakdown'
          type: array
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        updatedTime:
          description: サマリーの最終更新日時 (UNIX 時間 (秒))
          format: int64
          type: integer
        yearMonth:
          description: 年月
          type: string
      type: object
    BillingSummaryResponseOfSims:
      properties:
        costBreakdownList:
          description: 利用料金のリスト。合計金額順に降順でソートされ、上位 100 件まで出力します。
          items:
            $ref: '#/components/schemas/SimCostBreakdown'
          type: array
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        updatedTime:
          description: サマリーの最終更新日時 (UNIX 時間 (秒))
          format: int64
          type: integer
        yearMonth:
          description: 年月
          type: string
      type: object
    Capabilities:
      properties:
        data:
          description: |
            データ通信対応。

            - `true`: データ通信あり
            - `false`: データ通信なし
          type: boolean
        sms:
          description: |
            SMS 対応。

            - `true`: SMS あり
            - `false`: SMS なし
          type: boolean
      type: object
    Cell:
      properties:
        ci:
          description: The Cell Identity (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.3)
          type: integer
        eci:
          description: The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value
            represented in decimal form as a long. (See 3GPP TS 23.003 19.6)
          type: integer
        lac:
          description: The Location Area Code (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.1)
          type: integer
        mcc:
          description: The Mobile Country Code, a 3 digit number.
          type: integer
        mnc:
          description: The Mobile Network Code, a 2 or 3 digit number. If the value
            returned is only 1 digit in length, then you should prepend the value
            with a leading zero.
          type: integer
        rac:
          description: The Routing Area Code (for 2G and 3G networks), an 8 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 4.2)
          type: integer
        radioType:
          description: |
            IoT SIM が接続されている無線アクセス技術またはネットワークの種類。

            **Warning**: 通信キャリアの設備によっては、実際に利用されている無線アクセス技術またはネットワークの種類と異なる情報が表示されることがあります。たとえば、LTE-M で接続されている場合でも LTE と表示されることがあります。
          enum:
          - 3G
          - GSM
          - LTE
          - LTE-M
          - NB-IoT
          type: string
        sac:
          description: The Service Area Code (for 2G and 3G networks), a 16 bit value
            represented in decimal form as an integer. (See 3GPP TS 23.003 12.5)
          type: integer
        tac:
          description: The Tracking Area Code (for LTE networks), a 16 bit value represented
            in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3)
          type: integer
      type: object
    CellIdentifier:
      properties:
        cid:
          type: string
        eci:
          type: string
        ecid:
          type: string
        identifier:
          description: リクエストとそれに対する結果を結びつけるための識別子。オプショナルです。
          type: string
        lac:
          type: string
        mcc:
          type: string
        mnc:
          type: string
        tac:
          type: string
      type: object
    CellLocation:
      properties:
        avg_strength:
          description: セルで観測された平均の信号強度。dBm 単位の整数値。
          format: int32
          type: integer
        created:
          description: このレコードが最初に作られたときのタイムスタンプ (UTC)。
          format: date-time
          type: string
        exact:
          description: セルの位置情報が測定値から推定されたもので今後予告なく変わる可能性のあるもの (`0`) か、信頼できる情報源から得られた確定した情報か
            (`1`)。
          format: int32
          type: integer
        identifier:
          description: リクエストとそれに対する結果を結びつけるための識別子。
          type: string
        lat:
          description: 推定座標の緯度。
          format: double
          type: number
        lon:
          description: 推定座標の経度。
          format: double
          type: number
        range:
          description: 基地局のエリアの範囲 (推定座標からの半径。メートル単位)。測定値から推定された値の場合と、信頼できる情報源から得た値の場合がある。
          format: int32
          type: integer
        samples:
          description: 推定座標、範囲、平均信号強度を計算するために使われた測定値の総数。
          format: int32
          type: integer
        updated:
          description: このレコードが最後に更新されたときのタイムスタンプ (UTC)。
          format: date-time
          type: string
      type: object
    CompanyInformationModel:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        contactPersonName:
          type: string
        countryCode:
          type: string
        department:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        vatIdentificationNumber:
          type: string
        zipCode:
          type: string
      required:
      - companyName
      - countryCode
      - zipCode
      - department
      - contactPersonName
      - phoneNumber
      type: object
    ContractDetailOfHarvest:
      properties:
        plan:
          description: 契約種別。現在は、"extended"のみ指定できます。
          enum:
          - extended
          type: string
        ttl:
          description: データの保持期間（日にち）。現在は 731 のみ指定できます。
          example: 731
          format: int64
          type: integer
      type: object
    ContractDetailOfSupport:
      properties:
        tier:
          description: |
            契約するサポートプランを指定します。
            エンタープライズプランの契約を希望する場合は、セールスまでお問い合わせください ( https://soracom.jp/contact/ )。
            現在は、日本カバレッジでのみ契約できます。
          enum:
          - priority
          type: string
      type: object
    ContractUpdatedResponse:
      properties:
        contractDetail:
          oneOf:
          - $ref: '#/components/schemas/ContractDetailOfHarvest'
          - $ref: '#/components/schemas/ContractDetailOfSupport'
        contractName:
          enum:
          - api_audit_log
          - harvest
          - napter
          - support
          type: string
      type: object
    ContractUpdatingRequest:
      properties:
        contractDetail:
          oneOf:
          - $ref: '#/components/schemas/ContractDetailOfHarvest'
          - $ref: '#/components/schemas/ContractDetailOfSupport'
        contractName:
          enum:
          - api_audit_log
          - harvest
          - napter
          - support
          example: harvest
          type: string
      required:
      - contractName
      type: object
    CouponResponse:
      properties:
        amount:
          description: クーポン額
          format: double
          type: number
        balance:
          description: 残高
          format: double
          type: number
        billItemName:
          description: 対象課金アイテム
          type: string
        couponCode:
          description: クーポンコード
          type: string
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        expiryYearMonth:
          description: 有効期限
          format: yyyyMM
          type: string
        orderId:
          description: 発注 ID
          type: string
      type: object
    CoverageType:
      enum:
      - jp
      - g
      type: string
    CreateAndUpdateCredentialsModel:
      properties:
        credentials:
          type: object
        description:
          type: string
        type:
          enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
          type: string
      type: object
    CreateCustomerRouteRequest:
      properties:
        destinationCidr:
          type: string
        ignoreDeviceSubnetCidrRangeOverlap:
          type: boolean
        target:
          type: string
      required:
      - destinationCidr
      - target
      type: object
    CreateEstimatedCouponRequest:
      properties:
        amount:
          description: クーポン額
          format: double
          type: number
      required:
      - amount
      type: object
    CreateEstimatedOrderRequest:
      properties:
        orderItemList:
          description: 発注商品リスト
          items:
            $ref: '#/components/schemas/OrderItemModel'
          type: array
        preferredDeliveryDate:
          description: お受け取り希望日
          format: yyyyMMdd
          type: string
        shippingAddressId:
          description: 商品発送先 ID
          type: string
        shippingOptions:
          description: 配送オプション
          items:
            oneOf:
            - $ref: '#/components/schemas/ShippingOptionOfNekopos'
            - $ref: '#/components/schemas/ShippingOptionOfExpeditedShipping'
          type: array
      type: object
    CreateEstimatedVolumeDiscountRequest:
      properties:
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        quantity:
          description: 数量
          format: int32
          type: integer
        startDate:
          description: 適用開始日
          example: yyyyMMdd
          type: string
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      required:
      - volumeDiscountType
      - volumeDiscountPaymentType
      - contractTermMonth
      - quantity
      type: object
    CreateEventHandlerRequest:
      properties:
        actionConfigList:
          description: |
            アクションタイプ。詳しくは、[アクションタイプ一覧](/ja-jp/docs/event-handler/actions/) を参照してください。
          items:
            $ref: '#/components/schemas/ActionConfig'
          type: array
        description:
          description: 概要。
          type: string
        name:
          description: イベント名。
          type: string
        ruleConfig:
          $ref: '#/components/schemas/RuleConfig'
          description: |
            ルール。詳しくは、[ルールタイプ一覧](/ja-jp/docs/event-handler/rules/) を参照してください。
        status:
          description: |
            イベントハンドラーの有効 / 無効。

            - `active`: 有効
            - `inactive`: 無効
          enum:
          - inactive
          - active
          type: string
        targetGroupId:
          description: |
            監視対象のグループ。グループに所属するすべての IoT SIM が監視されます。

            `targetGroupId`、`targetImsi`、`targetOperatorId`、`targetSimId` のいずれか 1 つを指定してください。
          type: string
        targetImsi:
          description: |
            監視対象の IoT SIM の IMSI。

            `targetGroupId`、`targetImsi`、`targetOperatorId`、`targetSimId` のいずれか 1 つを指定してください。
          type: string
        targetOperatorId:
          description: |
            監視対象のオペレーター。オペレーターが保有するすべての IoT SIM が監視されます。

            `targetGroupId`、`targetImsi`、`targetOperatorId`、`targetSimId` のいずれか 1 つを指定してください。
          type: string
        targetSimId:
          description: |
            監視対象の IoT SIM の SIM ID。

            `targetGroupId`、`targetImsi`、`targetOperatorId`、`targetSimId` のいずれか 1 つを指定してください。
          type: string
      required:
      - actionConfigList
      - name
      - ruleConfig
      - status
      type: object
    CreateGroupRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/GroupConfiguration'
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    CreateOrUpdateRoleRequest:
      properties:
        description:
          type: string
        permission:
          description: パーミッションの JSON。
          type: string
      required:
      - permission
      type: object
    CreatePortMappingRequest:
      properties:
        destination:
          $ref: '#/components/schemas/PortMappingDestination'
        duration:
          description: |
            オンデマンドリモートアクセスを維持する時間 (リモートアクセスを許可する時間) (秒)。指定した時間を経過すると、オンデマンドリモートアクセスが自動的に削除されます。最大で 8 時間です。
          type: number
        source:
          $ref: '#/components/schemas/PortMappingSource'
        tlsRequired:
          description: |
            アクセス元から SORACOM までを TLS で暗号化するかどうか。

            - `true`: TLS を使用して暗号化する。

              デバイスで HTTP で待ち受けている場合は、`true` を指定します。
            - `false`: TLS を使用しない。

              デバイスに SSH 接続する場合や、デバイスで HTTPS で待ち受けている場合は、`false` を指定します。なお、SSH や HTTPS では、アクセス元からデバイスまでの通信は暗号化されています。
          type: boolean
      required:
      - destination
      type: object
    CreateRoleResponse:
      properties:
        roleId:
          type: string
      type: object
    CreateRoutingTableEntryRequest:
      properties:
        destination:
          description: 宛先の IP アドレスレンジ
        gateway:
          description: Transit Gateway の ID
    CreateSimProfileOrderRequest:
      description: eSIM プロファイルの発注リクエスト。
      properties:
        description:
          description: 発注の説明。注文履歴を識別するために使用できます。
          example: This is a test order
          maxLength: 100
          type: string
        quantity:
          description: 発注する eSIM プロファイルの数量。
          example: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        subscription:
          description: |
            発注する eSIM プロファイルのサブスクリプション。以下のいずれかです。

            - `plan01s`
            - `planP1`
            - `planX1`
          example: plan01s
          type: string
      required:
      - subscription
      - quantity
      type: object
    CreateSimRequest:
      properties:
        subscription:
          description: バーチャル SIM/Subscriber を作成するには、`planArc01` を指定します。
          enum:
          - planArc01
          type: string
        type:
          description: バーチャル SIM/Subscriber を作成するには、`virtual` を指定します。
          enum:
          - virtual
          type: string
      required:
      - type
      - subscription
      type: object
    CreateSoraletRequest:
      properties:
        description:
          type: string
        soraletId:
          type: string
      required:
      - soraletId
      type: object
    CreateTransitGatewayPeeringConnectionRequest:
      properties:
        customerAwsAccountId:
          description: ピア Transit Gateway の AWS アカウント ID
          type: string
        customerRegion:
          description: ピア Transit Gateway の AWS リージョン
          type: string
        customerTransitGatewayId:
          description: ピア Transit Gateway の AWS Transit Gateway ID
          type: string
        name:
          description: ピアリング接続を識別するために使用される名前
          type: string
      required:
      - customerAwsAccountId
      - customerRegion
      - customerTransitGatewayId
      type: object
    CreateTransitGatewayVpcAttachmentRequest:
      properties:
        customerAwsAccountId:
          description: アタッチされる VPC の AWS アカウント ID
          type: string
        customerVpcId:
          description: アタッチされる VPC の AWS VPC ID
          type: string
        name:
          description: VPC アタッチメントを識別するために使用される名前
          type: string
      required:
      - customerAwsAccountId
      - customerVpcId
      type: object
    CreateUserPasswordRequest:
      properties:
        password:
          type: string
      type: object
    CreateUserRequest:
      properties:
        description:
          type: string
      type: object
    CreateVirtualPrivateGatewayRequest:
      properties:
        deviceSubnetCidrRange:
          default: 10.128.0.0/9
          type: string
        placement:
          properties:
            region:
              description: |
                VPG の [ランデブーポイント](/ja-jp/docs/rendezvous-point/)。

                - `ap-northeast-1`: 東京 (日本)。日本カバレッジのデフォルトです。
                - `eu-central-1`: フランクフルト (ドイツ)。グローバルカバレッジのデフォルトです。
                - `us-west-2`: オレゴン (米国)。
                - `ap-southeast-2`: シドニー (オーストラリア)。
              enum:
              - ap-northeast-1
              - eu-central-1
              - us-west-2
              - ap-southeast-2
              type: string
          type: object
        soracomTransitGateway:
          properties:
            asn:
              type: integer
          type: object
        tags:
          $ref: '#/components/schemas/TagSet'
        type:
          description: |
            VPG のタイプ

            - `14` : Type-E
            - `15` : Type-F
          enum:
          - 14
          - 15
          - 242
          type: integer
        useInternetGateway:
          default: true
          type: boolean
      required:
      - type
      type: object
    CreateVpcPeeringConnectionRequest:
      properties:
        destinationCidrBlock:
          type: string
        peerOwnerId:
          type: string
        peerRegion:
          type: string
        peerVpcId:
          type: string
      type: object
    CredentialsModel:
      properties:
        createDateTime:
          format: int64
          type: integer
        credentials:
          type: object
        credentialsId:
          type: string
        description:
          type: string
        lastUsedDateTime:
          format: int64
          type: integer
        type:
          enum:
          - api-token-credentials
          - aws-credentials
          - aws-iam-role-credentials
          - azure-credentials
          - azureIoT-credentials
          - esrij-credentials
          - google-service-account-json
          - googleIoT-credentials
          - infoteria-platio-credentials
          - kii-thingif-credentials
          - landlog-credentials
          - mmcloud-credentials
          - motionboard-credentials
          - optim-cloud-IoT-OS-credentials
          - private-key-pem
          - psk
          - pubnub-credentials
          - sensorcorpus-credentials
          - username-password-credentials
          - x509
          type: string
        updateDateTime:
          format: int64
          type: integer
      required:
      - createDateTime
      - credentials
      - credentialsId
      - lastUsedDateTime
      - type
      - updateDateTime
      type: object
    CreditCard:
      properties:
        cvc:
          type: string
        expireMonth:
          format: int32
          type: integer
        expireYear:
          format: int32
          type: integer
        name:
          type: string
        number:
          type: string
      type: object
    CustomerRoute:
      properties:
        destinationCidr:
          type: string
        id:
          type: string
        target:
          type: string
        type:
          enum:
          - static
          - dynamic
          type: string
      type: object
    DailyBill:
      properties:
        amount:
          description: 金額
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        date:
          description: 年月日
          format: yyyyMMdd
          type: string
      type: object
    DailyBillResponse:
      properties:
        billList:
          description: 日ごとの利用料金
          items:
            $ref: '#/components/schemas/DailyBill'
          type: array
      type: object
    DataEntry:
      properties:
        content:
          type: string
        contentType:
          type: string
        time:
          format: int64
          type: integer
      type: object
    DataSourceResourceMetadata:
      properties:
        attributeNames:
          items:
            type: string
          type: array
        lastModifiedTime:
          format: int64
          type: integer
        resourceId:
          type: string
        resourceType:
          type: string
      type: object
    DataTrafficStats:
      properties:
        downloadByteSizeTotal:
          format: int64
          type: integer
        downloadPacketSizeTotal:
          format: int64
          type: integer
        uploadByteSizeTotal:
          format: int64
          type: integer
        uploadPacketSizeTotal:
          format: int64
          type: integer
      type: object
    Device:
      properties:
        device_id:
          type: string
        endpoint:
          type: string
        firmwareVersion:
          type: string
        groupId:
          type: string
        ipAddress:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastRegistrationUpdate:
          format: date-time
          type: string
        manufacturer:
          type: string
        modelNumber:
          type: string
        objects:
          type: object
        online:
          default: false
          type: boolean
        operatorId:
          type: string
        registrationId:
          type: string
        registrationLifeTime:
          format: int64
          type: integer
        serialNumber:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    DeviceObjectModel:
      properties:
        createdTime:
          format: date-time
          type: string
        format:
          enum:
          - xml
          - json
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        objectId:
          type: string
        objectName:
          type: string
        operatorId:
          type: string
        scope:
          type: string
      type: object
    DiagnosticRequest:
      properties:
        from:
          description: 診断対象期間の始まり (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
        resourceId:
          description: |
            resourceType に応じた識別子。

            - resourceType が `sim` の場合は、SIM ID を指定します。
          type: string
        resourceType:
          enum:
          - sim
          type: string
        service:
          enum:
          - Air
          type: string
        to:
          description: 診断対象期間の終わり (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
      required:
      - service
      - resourceType
      - resourceId
      type: object
    DiagnosticResponse:
      properties:
        diagnosticId:
          type: string
        from:
          description: 診断対象期間の始まり (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
        insights:
          items:
            $ref: '#/components/schemas/Insight'
          type: array
        resourceId:
          description: resourceType に応じた識別子。
          type: string
        resourceType:
          enum:
          - sim
          type: string
        service:
          enum:
          - Air
          type: string
        status:
          enum:
          - diagnosing
          - done
          - failed
          type: string
        to:
          description: 診断対象期間の終わり (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
      required:
      - diagnosticId
      - status
      - service
      - resourceType
      - resourceId
      - from
      - to
      - insights
      type: object
    DownlinkPingRequest:
      properties:
        numberOfPingRequests:
          default: 1
          description: ping の試行回数。
          maximum: 5
          type: integer
        timeoutSeconds:
          default: 1
          description: 各 ping 試行のタイムアウト秒数。
          maximum: 3
          type: integer
      type: object
    DownlinkPingResponse:
      properties:
        rtt:
          description: ping の RTT 的な結果
          type: string
        stat:
          description: ping の統計的な結果
          type: string
        success:
          description: ping の成功可否
          type: boolean
      type: object
    EmailConfigurationOfBilling:
      properties:
        attachInvoicePdfEnabled:
          description: |
            毎月の請求に関するお知らせメールにソラコム発行の請求書 (PDF) を添付するかどうかの設定 (グローバルカバレッジのみ)。

            - `true`: 添付します。
            - `false`: 添付しません。
          type: boolean
      type: object
    EmailConfigurationOfNotification:
      properties:
        exceedBundleDisabled:
          description: |
            データ通信量に関するプライマリメールアドレスへの通知設定。詳しくは、[データ通信量に関する通知を停止する](/ja-jp/docs/air/set-bundle/#データ通信量に関する通知を停止する) を参照してください。

            - `true`: データ通信量に関するプライマリメールアドレスへの通知をすべて停止します。
            - `false`: データ通信量に関するプライマリメールアドレスへの通知をすべて有効化します。
          type: boolean
      type: object
    EmailsModel:
      properties:
        createDateTime:
          format: int64
          type: integer
        email:
          type: string
        emailId:
          type: string
        updateDateTime:
          format: int64
          type: integer
        verified:
          description: メールアドレス宛てに送信されたトークンを用いて認証済みかどうか。
          type: boolean
      type: object
    EnableMFAOTPResponse:
      properties:
        totpUri:
          type: string
      required:
      - totpUri
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        fields:
          type: string
        message:
          type: string
      type: object
    EstimatedCouponModel:
      properties:
        amount:
          description: クーポン額
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        expiryYearMonth:
          description: 有効期限
          format: yyyyMM
          type: string
        orderId:
          description: 発注 ID
          type: string
        taxAmount:
          description: 消費税
          format: double
          type: number
        totalAmount:
          description: 合計金額
          format: double
          type: number
      type: object
    EstimatedOrderItemModel:
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        productAmount:
          description: 商品金額
          format: double
          type: number
        quantity:
          description: 購入数
          format: int32
          type: integer
        taxIncludedProductAmount:
          type: number
      type: object
    EstimatedOrderModel:
      properties:
        appliedShippingOptions:
          description: 適用された配送オプション
          items:
            oneOf:
            - $ref: '#/components/schemas/ShippingOptionOfNekopos'
            - $ref: '#/components/schemas/ShippingOptionOfExpeditedShipping'
          type: array
        balanceDue:
          description: 差引請求額
          format: double
          type: number
        containsTaxIncludedAmounts:
          description: 税込金額の有無
          type: boolean
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        email:
          description: メールアドレス
          type: string
        orderChannel:
          description: 注文チャンネル
          type: string
        orderId:
          description: 発注 ID
          type: string
        orderItemList:
          description: 発注商品リスト
          items:
            $ref: '#/components/schemas/EstimatedOrderItemModel'
          type: array
        preferredDeliveryDate:
          description: お受け取り希望日
          format: yyyyMMdd
          type: string
        purchaseOrderNumber:
          description: 注文番号
          type: string
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressModel'
        shippingAddressId:
          description: 商品発送先 ID
          type: string
        shippingCost:
          description: 配送料
          format: double
          type: number
        taxAmount:
          description: 消費税
          format: double
          type: number
        taxIncludedInShippingCost:
          description: 配送料に含まれる税
          format: double
          type: number
        taxOnShippingCost:
          description: 配送料へ課税
          type: boolean
        totalAmount:
          description: 合計金額
          format: double
          type: number
        withholdingTaxAmount:
          description: 源泉徴収税
          format: double
          type: number
      type: object
    EstimatedVolumeDiscountModel:
      properties:
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        orderId:
          description: 発注 ID
          type: string
        taxAmount:
          description: 消費税
          format: double
          type: number
        totalAmount:
          description: 合計金額
          format: double
          type: number
        volumeDiscount:
          $ref: '#/components/schemas/VolumeDiscountModel'
      type: object
    EventHandlerModel:
      properties:
        actionConfigList:
          items:
            $ref: '#/components/schemas/ActionConfig'
          type: array
        description:
          type: string
        handlerId:
          type: string
        name:
          type: string
        ruleConfig:
          $ref: '#/components/schemas/RuleConfig'
        status:
          enum:
          - inactive
          - active
          type: string
        targetGroupId:
          type: string
        targetImsi:
          type: string
        targetOperatorId:
          type: string
        targetSimId:
          type: string
      required:
      - actionConfigList
      - handlerId
      - ruleConfig
      - status
      - name
      type: object
    ExecuteSoraletRequest:
      properties:
        contentType:
          type: string
        direction:
          enum:
          - uplink
          - downlink
          type: string
        encodingType:
          enum:
          - text
          - binary
          type: string
        payload:
          type: string
        source:
          additionalProperties:
            $ref: '#/components/schemas/SoraletDataSource'
          type: object
        userdata:
          type: string
        version:
          type: string
      required:
      - version
      - direction
      - contentType
      - payload
      - source
      type: object
    ExecuteSoraletResponse:
      properties:
        body:
          type: string
        contentType:
          type: string
        encodingType:
          type: string
        resultCode:
          format: int32
          type: integer
      type: object
    ExpiryTime:
      properties:
        expiryAction:
          description: |
            期限切れ時のアクション。以下のいずれかを指定します。各設定について詳しくは、[IoT SIM の有効期限とアクションを設定する](/ja-jp/docs/air/set-expiry/) を参照してください。なお、`terminate` を指定する場合は、あらかじめ解約プロテクションを解除してください。

            省略した場合は、null 値が設定されます。
            - `doNothing` : 保留
            - `deleteSession` : セッション切断
            - `deactivate` : 休止
            - `suspend` : 利用中断
            - `terminate` : 解約
            - null 値 : (なし) (`doNothing` と同じ動作です)
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          - (null value)
          nullable: true
          type: string
        expiryTime:
          description: 有効期限として設定された日付のタイムスタンプ (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
      required:
      - expiryTime
      type: object
    ExportRequest:
      properties:
        from:
          description: 対象期間の開始月/日/分を UNIX 時間 (秒) で指定します。
          example: 1709218800
          format: int64
          type: integer
        period:
          description: |
            集計単位。

            - `month`: 月ごと。

              `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

              | 項目 | 説明 |
              |-|-|
              | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む月の 1 日 00:00:00 です。 |
              | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む月の月末の 24:00:00 です。 |
            - `day`: 日ごと。

              `from` と `to` には、現在時刻の 18 か月前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の対象期間は、`from` と `to` で指定した時刻ではありません。

              | 項目 | 説明 |
              |-|-|
              | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む日の 00:00:00 です 。|
              | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む日の 24:00:00 です。 |
            - `minutes`: 約 5 分ごと。

              `from` と `to` には、現在時刻の 32 日前 〜 現在時刻の UNIX 時間 (秒) を指定してください。実際の集計対象期間は、`from` と `to` で指定した時刻ではありません。

              | 項目 | 説明 |
              |-|-|
              | 実際の開始時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の開始時刻です。 |
              | 実際の終了時刻 | 指定した UNIX 時間 (秒) を含む約 5 分間の終了時刻です。 |
          enum:
          - month
          - day
          - minutes
          type: string
        to:
          description: 対象期間の終了月/日/分を UNIX 時間 (秒) で指定します。
          example: 1714402800
          format: int64
          type: integer
      type: object
    FileEntry:
      properties:
        contentLength:
          description: コンテントの長さ
          format: int64
          type: integer
        contentType:
          description: コンテントタイプ
          type: string
        createdTime:
          description: ファイルの作成時刻
          format: int64
          type: integer
        directory:
          description: 親ディレクトリ名
          type: string
        etag:
          description: ファイルの ETag
          type: string
        filePath:
          description: ファイルの絶対パス
          type: string
        filename:
          description: ファイル名
          type: string
        isDirectory:
          description: ディレクトリか否か
          type: boolean
        lastModifiedTime:
          description: ファイルの更新時刻
          format: int64
          type: integer
      type: object
    FileExportResponse:
      properties:
        exportedFileId:
          description: ファイルエクスポート ID。この ID を [Files:getExportedFile API](#/Files/getExportedFile)
            を呼び出すときに指定すると、ファイルをダウンロードするための URL を取得できます。`export_mode` に `async` を指定した場合のみ含まれます。
          type: string
        exportedFilePath:
          description: エクスポート済みファイルのパス。`export_mode` に `async` を指定した場合のみ含まれます。
          type: string
        url:
          description: ファイルをダウンロードするための URL。`export_mode` に `sync` を指定した場合のみ含まれます。
          type: string
      type: object
    FunkStatsResponse:
      properties:
        funkStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomFunkStats'
          type: object
        unixtime:
          format: int64
          type: integer
      type: object
    FunnelAWSFirehoseDestination:
      properties:
        payloadsOnly:
          default: false
          type: boolean
        provider:
          enum:
          - aws
          type: string
        resourceUrl:
          example: https://firehose.<region>.amazonaws.com/<delivery stream name>
          type: string
        service:
          enum:
          - firehose
          type: string
      type: object
    FunnelAWSIoTDestination:
      properties:
        payloadsOnly:
          default: false
          type: boolean
        provider:
          enum:
          - aws
          type: string
        resourceUrl:
          example: https://<id>.iot.<region>.amazonaws.com/<topic>
          type: string
        sendPayloadsAsBinary:
          default: false
          type: boolean
        service:
          enum:
          - aws-iot
          type: string
      type: object
    FunnelAWSKinesisDestination:
      properties:
        payloadsOnly:
          default: false
          type: boolean
        provider:
          enum:
          - aws
          type: string
        randomizePartitionKey:
          type: boolean
        resourceUrl:
          example: https://kinesis.<region>.amazonaws.com/<delivery stream name>
          type: string
        service:
          enum:
          - kinesis
          type: string
      type: object
    FunnelAcroquestTorrentioDestination:
      properties:
        endpointId:
          type: string
        provider:
          enum:
          - acroquest
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - torrentio
          type: string
        tenantId:
          type: string
      type: object
    FunnelAppressoDataSpiderDestination:
      properties:
        provider:
          enum:
          - appresso
          type: string
        resourceUrl:
          example: https://ss.dataspidercloud.com/ws/trigger/funnel?cid=<cid>&sid=<sid>
          type: string
        service:
          enum:
          - dataspider
          type: string
      type: object
    FunnelAzureEventHubDestination:
      properties:
        payloadsOnly:
          default: false
          type: boolean
        provider:
          enum:
          - azure
          type: string
        resourceUrl:
          example: https://<namespace>.servicebus.windows.net/<event hubs name>/messages
          type: string
        service:
          enum:
          - eventhubs
          type: string
      type: object
    FunnelBrainsTechImpulseDestination:
      properties:
        provider:
          enum:
          - brains-tech
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - impulse
          type: string
      type: object
    FunnelConfiguration:
      properties:
        addSimId:
          default: false
          type: boolean
        contentType:
          $ref: '#/components/schemas/FunnelContentType'
        credentialsId:
          type: string
        destination:
          oneOf:
          - $ref: '#/components/schemas/FunnelDestination'
          - $ref: '#/components/schemas/FunnelAWSFirehoseDestination'
          - $ref: '#/components/schemas/FunnelAWSIoTDestination'
          - $ref: '#/components/schemas/FunnelAWSKinesisDestination'
          - $ref: '#/components/schemas/FunnelAzureEventHubDestination'
          - $ref: '#/components/schemas/FunnelGooglePubSubDestination'
          - $ref: '#/components/schemas/FunnelAcroquestTorrentioDestination'
          - $ref: '#/components/schemas/FunnelAppressoDataSpiderDestination'
          - $ref: '#/components/schemas/FunnelBrainsTechImpulseDestination'
          - $ref: '#/components/schemas/FunnelEsrijArcgisOnlineDestination'
          - $ref: '#/components/schemas/FunnelInfoteriaPlatioDestination'
          - $ref: '#/components/schemas/FunnelKiiThingifDestination'
          - $ref: '#/components/schemas/FunnelLandlogDestination'
          - $ref: '#/components/schemas/FunnelOptimCloudiotosDestination'
          - $ref: '#/components/schemas/FunnelTeradataIntellicloudDestination'
          - $ref: '#/components/schemas/FunnelWingarcMotionboardDestination'
          - $ref: '#/components/schemas/FunnelYaskawaMmcloudDestination'
          - $ref: '#/components/schemas/FunnelSensorCorpusDestination'
        enabled:
          default: false
          type: boolean
      type: object
    FunnelContentType:
      enum:
      - json
      - text
      - unspecified
      - binary
      - application/x-soracom-bf-v1
      type: string
    FunnelDestination:
      properties:
        provider:
          type: string
        resourceUrl:
          type: string
        service:
          type: string
      type: object
    FunnelEsrijArcgisOnlineDestination:
      properties:
        config:
          type: string
        provider:
          enum:
          - esrij
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - arcgis-online
          type: string
      type: object
    FunnelGooglePubSubDestination:
      properties:
        payloadsOnly:
          default: false
          type: boolean
        provider:
          enum:
          - google
          type: string
        resourceUrl:
          example: your_topic_name
          type: string
        service:
          enum:
          - pubsub
          type: string
      type: object
    FunnelInfoteriaPlatioDestination:
      properties:
        applicationId:
          type: string
        collectionId:
          type: string
        passAll:
          type: boolean
        provider:
          enum:
          - infoteria
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - platio
          type: string
        values:
          type: string
      type: object
    FunnelKiiThingifDestination:
      properties:
        provider:
          enum:
          - kii
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - thingif
          type: string
      type: object
    FunnelLandlogDestination:
      properties:
        channel_id:
          type: string
        data_format:
          enum:
          - json
          - text
          - xml
          type: string
        provider:
          enum:
          - landlog
          type: string
        resourceUrl:
          example: https://api.landlog.info
          type: string
        service:
          enum:
          - landlog
          type: string
      type: object
    FunnelOptimCloudiotosDestination:
      properties:
        channel_id:
          type: string
        data_format:
          type: string
        provider:
          enum:
          - optim
          type: string
        resourceUrl:
          example: https://messaging.optimcloudapis.com
          type: string
        service:
          enum:
          - cloudiotos
          type: string
      type: object
    FunnelSensorCorpusDestination:
      properties:
        additionalData:
          type: string
        provider:
          enum:
          - infocorpus
          type: string
        resourceUrl:
          example: https://www.sensorcorpus.net/
          type: string
        service:
          enum:
          - sensorcorpus
          type: string
      type: object
    FunnelStatsResponse:
      properties:
        funnelStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomFunnelStats'
          type: object
        unixtime:
          format: int64
          type: integer
      type: object
    FunnelTeradataIntellicloudDestination:
      properties:
        provider:
          enum:
          - teradata
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - intellicloud
          type: string
      type: object
    FunnelWingarcMotionboardDestination:
      properties:
        provider:
          enum:
          - wingarc
          type: string
        resourceUrl:
          example: https://iot-cloud.motionboard.jp/motionboard/
          type: string
        service:
          enum:
          - motionboard
          type: string
      type: object
    FunnelYaskawaMmcloudDestination:
      properties:
        desthost:
          type: string
        destport:
          maximum: 0
          minimum: 65535
          type: integer
        provider:
          enum:
          - yaskawa
          type: string
        resourceUrl:
          type: string
        service:
          enum:
          - mmcloud
          type: string
      type: object
    Gadget:
      properties:
        attributes:
          properties:
            contractEndingTime:
              description: SORACOM LTE-M Button powered by AWS の有効期限。
              format: date-time
              type: string
            firstClickTimestamp:
              description: SORACOM LTE-M Button powered by AWS を初めてクリックした日時。
              format: date-time
              type: string
            remainingCount:
              description: SORACOM LTE-M Button powered by AWS の残りクリック回数。
              type: integer
            wimaxBillingStartDate:
              description: ソラカメ専用セルラーパックの課金開始日。
              type: string
            wimaxIccid:
              description: ソラカメ専用セルラーパックに含まれる au IC カードの ICCID (Integrated Circuit
                Card ID)。au IC カードを識別するための識別子。
              type: string
            wimaxImei:
              description: ソラカメ専用セルラーパックに含まれる Speed Wi-Fi HOME 5G L11 の [IMEI (International
                Mobile Equipment Identity)](/ja-jp/resources/glossary/#imei-international-mobile-equipment-identity)。
              type: string
          type: object
        createdTime:
          description: Gadget API 対応デバイスを登録した UNIX 時間 (ミリ秒)。
          format: int64
          type: integer
        id:
          description: Gadget API 対応デバイスの ID。
          type: string
        lastModifiedTime:
          description: Gadget API 対応デバイスの情報が変更された UNIX 時間 (ミリ秒)。
          format: int64
          type: integer
        lastSeen:
          properties:
            batteryLevel:
              description: SORACOM LTE-M Button powered by AWS のバッテリーレベル。
              type: integer
            clickEventPropagated:
              type: boolean
            clickTime:
              description: SORACOM LTE-M Button powered by AWS をクリックした日時。
              format: date-time
              type: string
            clickType:
              enum:
              - SINGLE
              - DOUBLE
              type: string
          type: object
        operatorId:
          description: Gadget API 対応デバイスを登録したオペレーター ID。
          type: string
        productId:
          description: |
            Gadget API 対応デバイスのタイプ。

            - `button`: SORACOM LTE-M Button powered by AWS。
            - `wimax`: ソラカメ専用セルラーパック。
          enum:
          - button
          - wimax
          type: string
        serialNumber:
          description: Gadget API 対応デバイスのシリアル番号。
          type: string
        status:
          description: |
            Gadget API 対応デバイスの契約状態。

            - `active`: 契約中。
            - `terminated`: 解約済み。
          enum:
          - active
          - terminated
          type: string
        tags:
          additionalProperties:
            type: string
          description: タグ
          type: object
        terminatedTime:
          description: Gadget API 対応デバイスの解約日時。解約していない場合は `null` です。
          format: int64
          type: integer
        terminationEnabled:
          default: false
          description: |
            Gadget API 対応デバイスの解約プロテクション。

            - `true`: OFF (解約できる)。
            - `false`: ON (解約できない)。
          type: boolean
      type: object
    GadgetRegistrationRequest:
      properties:
        tags:
          additionalProperties:
            type: string
          description: タグ。
          type: object
      type: object
    GatePeer:
      properties:
        innerIpAddress:
          type: string
        netmask:
          type: string
        outerIpAddress:
          type: string
        ownedByCustomer:
          type: boolean
      type: object
    GenerateOperatorsAuthKeyResponse:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
      type: object
    GenerateTokenRequest:
      properties:
        tokenTimeoutSeconds:
          default: 86400
          description: |
            新しい API トークンの有効期限の長さ (秒)。
            指定しなければデフォルトは 86400 [秒] (24 時間)。
            最大値は 172800 [秒] (48 時間)。
          maximum: 172800
          type: integer
      type: object
    GenerateTokenResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    GenerateUserAuthKeyResponse:
      properties:
        authKey:
          type: string
        authKeyId:
          type: string
      type: object
    GetBillingHistoryResponse:
      properties:
        billList:
          description: 月ごとの利用料金
          items:
            $ref: '#/components/schemas/MonthlyBill'
          type: array
      type: object
    GetDefaultPermissionsResponse:
      properties:
        defaultPermissions:
          type: string
      type: object
    GetExportedFileResponse:
      properties:
        status:
          description: |
            エクスポートステータス。

            - `processing`: エクスポート中です。お待ちください。
            - `exported`: エクスポートが完了しました。ダウンロードできます。
            - `failed`: エクスポートに失敗しました。
          enum:
          - processing
          - exported
          - failed
          type: string
        url:
          description: |
            ファイルダウンロード URL。`status` が `exported` になっていることを確認し、`url` で取得した URL から CSV ファイルをダウンロードします。

            ```bash
            $ wget -O export.csv "https://soracom-xxxxxxxx-...."
            ```
          type: string
      type: object
    GetLatestBill:
      properties:
        amount:
          description: 金額
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        lastEvaluatedTime:
          description: 利用額計算を実施した時間
          example: yyyyMMddHHmmss
          type: string
      type: object
    GetOperatorResponse:
      properties:
        createDate:
          type: string
        description:
          type: string
        email:
          type: string
        operatorId:
          type: string
        rootOperatorId:
          type: string
        updateDate:
          type: string
      required:
      - createDate
      - description
      - email
      - operatorId
      - rootOperatorId
      - updateDate
      type: object
    GetOrderResponse:
      properties:
        appliedShippingOptions:
          description: 適用済み配送オプション。
          items:
            type: object
          type: array
        balanceDue:
          description: 差引請求額。
          format: double
          type: number
        containsTaxIncludedAmounts:
          type: boolean
        currency:
          description: 通貨。
          enum:
          - JPY
          - USD
          - EUR
          type: string
        email:
          description: メールアドレス。
          type: string
        orderChannel:
          description: 発注チャンネル。
          type: string
        orderDateTime:
          description: 発注日時 (yyyyMMddHHmmss)。
          format: yyyyMMddHHmmss
          type: string
        orderId:
          description: 発注 ID。
          type: string
        orderItemList:
          description: 発注商品リスト。
          items:
            $ref: '#/components/schemas/EstimatedOrderItemModel'
          type: array
        orderStatus:
          description: 発注ステータス。
          enum:
          - ordering
          - ordered
          - kitting
          - shipped
          - received
          - cancelling
          - cancelled
          - failed
          type: string
        paymentStatus:
          description: |
            お支払い状況。詳しくは、FAQ: [ご利用料金のお支払状況について](https://support.soracom.io/hc/ja/articles/360029337031) を参照してください。

            - `lessThanMinimumCharge`: 翌月以降請求 (最低課金額に満たないため)。
            - `paying`: 支払い処理中。
            - `paid`: 支払い済み。
            - `fail`: 処理失敗。
            - `refunding`: リファンド処理中。
            - `refunded`: リファンド済み。
            - `refund_fail`: リファンド処理失敗。
            - `delegating_to_third_party`: 債権譲渡中。
            - `delegated_to_third_party`: 債権譲渡済み。
            - `charging`: 請求実施中。
            - `canceling`: キャンセル中。
            - `cancelled`: キャンセル済み。
            - `cancel_failed`: キャンセル処理失敗。
          enum:
          - lessThanMinimumCharge
          - paying
          - paid
          - fail
          - refunding
          - refunded
          - refund_fail
          - delegating_to_third_party
          - delegated_to_third_party
          - charging
          - canceling
          - cancelled
          - cancel_failed
          type: string
        preferredDeliveryDate:
          description: 希望納品日。
          type: string
        purchaseOrderNumber:
          description: 注文番号。
          type: string
        resourceInitialSetting:
          $ref: '#/components/schemas/ResourceInitialSetting'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressModel'
        shippingAddressId:
          description: 商品発送先 ID。
          type: string
        shippingCost:
          description: 配送料。
          format: double
          type: number
        shippingDateTime:
          description: 発送日時 (yyyyMMddHHmmss)。
          example: 20231004123456
          format: yyyyMMddHHmmss
          type: string
        shippingLabelDetails:
          description: 配送業者の追跡情報。
          items:
            $ref: '#/components/schemas/ShippingLabelDetail'
          type: array
        shippingLabelNumber:
          description: 配送業者の伝票番号 (代表)。
          example: 0000-1111-2222
          type: string
        shippingLabelNumbers:
          description: 配送業者の伝票番号。
          example:
          - 0000-1111-2222
          items:
            type: string
          type: array
        taxAmount:
          description: 税額。
          format: double
          type: number
        taxIncludedInShippingCost:
          description: 送料に含まれる税額。
          format: double
          type: number
        taxOnShippingCost:
          description: 配送料の課税有無。
          type: boolean
        totalAmount:
          description: 合計額 (税込)。
          format: double
          type: number
        withholdingTaxAmount:
          description: 源泉徴収税額。
          format: double
          type: number
      type: object
    GetPaymentMethodResult:
      properties:
        errorCode:
          description: エラーコード (支払い情報が無効な場合のみ)
          enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
          type: string
        errorMessage:
          description: エラーメッセージ (支払い情報が無効な場合のみ)
          type: string
        properties:
          description: 支払い情報
          type: string
        providerType:
          description: 課金プロバイダ種別
          enum:
          - WebPay
          type: string
        updateDate:
          description: 登録日
          example: yyyyMMddHHmmss
          type: string
      type: object
    GetPaymentTransactionResult:
      properties:
        amount:
          $ref: '#/components/schemas/PaymentAmount'
          description: 課金額
        description:
          $ref: '#/components/schemas/PaymentDescription'
          description: 課金内容詳細
        message:
          description: メッセージ
          type: string
        messageCode:
          description: メッセージコード
          enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
          type: string
        status:
          description: ステータス
          enum:
          - success
          - error
          type: string
      type: object
    GetShippingAddressResponse:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        department:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        shippingAddressId:
          description: 配送先 ID。
          type: string
        shippingArea:
          description: 配送先エリア。
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - addressLine1
      - city
      - phoneNumber
      - shippingAddressId
      - shippingArea
      - state
      - zipCode
      type: object
    GetUserPasswordResponse:
      properties:
        hasPassword:
          type: boolean
      type: object
    GetUserPermissionResponse:
      properties:
        permission:
          description: Permission の JSON
          type: string
      required:
      - permission
      type: object
    GetUserTrustPolicyResponse:
      properties:
        trustPolicy:
          description: |
            この SAM ユーザーにスイッチできるルートユーザーまたは SAM ユーザーを指定する信頼ポリシー。以下の情報が含まれます。

            - この SAM ユーザーにスイッチできる別のアカウントのユーザーを表す SRN (Soracom Resource Name)。
            - スイッチできる条件。

            詳しくは、[信頼ポリシー構文](/ja-jp/docs/switch-user/trust-policy/) を参照してください。
          type: string
      type: object
    GetVolumeDiscountResponse:
      properties:
        contractDateTime:
          description: 契約日時
          example: yyyyMMddHHmmss
          type: string
        contractId:
          description: 契約 ID
          type: string
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        endDate:
          description: 適用終了日
          example: yyyyMMdd
          type: string
        initialCost:
          description: 初期費用
          format: double
          type: number
        quantity:
          description: 数量
          format: int32
          type: integer
        startDate:
          description: 適用開始日
          example: yyyyMMdd
          type: string
        status:
          description: ステータス
          enum:
          - active
          - expired
          type: string
        unitPrice:
          description: 単価
          format: double
          type: number
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    Group:
      properties:
        configuration:
          $ref: '#/components/schemas/GroupConfiguration'
        createdTime:
          format: int64
          type: integer
        groupId:
          type: string
        lastModifiedTime:
          format: int64
          type: integer
        operatorId:
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      type: object
    GroupConfiguration:
      additionalProperties:
        description: |
          キーは、以下のいずれかのネームスペースです。

          - SoracomAir
          - SoracomBeam
          - SoracomEndorse
          - SoracomOrbit
          - SoracomFunk
          - SoracomFunnel
          - SoracomHarvest
          - SoracomHarvestFiles
          - SoracomKrypton
          - UnifiedEndpoint

          値は、ネームスペースごとに異なるオブジェクトです。詳しくは、[Group:putConfigurationParameters API](#/Group/putConfigurationParameters) の Request body の Examples を参照してください。
        type: object
      description: |
        グループの設定。
      type: object
    GroupConfigurationUpdateRequest:
      properties:
        key:
          type: string
        value: {}
      required:
      - key
      - value
      type: object
    HarvestExportedDataStatsResponse:
      properties:
        exportedBytes:
          description: exportedBytes
          type: integer
        yearMonth:
          description: yearMonth
          type: string
      type: object
    HarvestStatsResponse:
      properties:
        harvestStatsMap:
          additionalProperties:
            $ref: '#/components/schemas/SoracomHarvestStats'
          type: object
        unixtime:
          format: int64
          type: integer
      type: object
    ImeiLock:
      description: IMEI ロックの設定
      properties:
        imei:
          description: 対象デバイスの IMEI
          type: string
      type: object
    IndividualInformationModel:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        countryCode:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - fullName
      - countryCode
      - zipCode
      - phoneNumber
      type: object
    Insight:
      properties:
        anomalyDetectedTimes:
          description: 異常と思われる状況を検出した時間。フォーマットは category に関するイベントのタイムスタンプに依存します。(例：session
            の場合は UNIX 時間 (ミリ秒))
          items:
            type: string
          type: array
        category:
          enum:
          - data
          - session
          - sim
          - others
          - unknown
          type: string
        insightId:
          type: string
        message:
          type: string
        referenceUrls:
          description: インサイトに関連のある参考情報の URL。
          items:
            $ref: '#/components/schemas/ReferenceUrl'
          type: array
        severity:
          enum:
          - error
          - warning
          - info
          - none
          - unknown
          type: string
      required:
      - insightId
      - message
      - category
      - severity
      type: object
    IpAddressMapEntry:
      properties:
        hostId:
          type: string
        ipAddress:
          type: string
        key:
          type: string
        lastUpdatedAt:
          type: integer
        type:
          enum:
          - static
          - dynamic
          - customerGatePeer
          - gatePeer
          type: string
      required:
      - ipAddress
      - hostId
      - key
      - type
      type: object
    IssueAddEmailTokenRequest:
      properties:
        email:
          description: 追加するメールアドレス。
          type: string
        password:
          description: ルートユーザーのパスワード。
          type: string
      required:
      - email
      - password
      type: object
    IssuePasswordResetTokenRequest:
      properties:
        email:
          type: string
      required:
      - email
      type: object
    IssueSubscriberTransferTokenRequest:
      properties:
        transferDestinationOperatorEmail:
          description: 譲渡先のオペレーターのプライマリーメールアドレス。譲渡先のオペレーターに確認してください。
          type: string
        transferDestinationOperatorId:
          description: 譲渡先のオペレーターのオペレーター ID。譲渡先のオペレーターに確認してください。
          type: string
        transferImsi:
          description: |
            譲渡対象の IoT SIM の IMSI のリスト。IMSI は [Sim:listSims API](#/Sim/listSims) で取得できます。

            IoT SIM を 1 件ずつキャンセルする可能性がある場合は、IMSI を 1 件だけ指定してください。
          items:
            type: string
          type: array
      required:
      - transferDestinationOperatorEmail
      - transferDestinationOperatorId
      - transferImsi
      type: object
    IssueSubscriberTransferTokenResponse:
      properties:
        token:
          description: 譲渡用トークン。
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          type: string
      required:
      - token
      type: object
    JunctionInspectionConfiguration:
      properties:
        enabled:
          default: false
          type: boolean
        report:
          $ref: '#/components/schemas/FunnelConfiguration'
      type: object
    JunctionMirroringConfiguration:
      properties:
        peers:
          additionalProperties:
            $ref: '#/components/schemas/JunctionMirroringPeer'
          type: object
      type: object
    JunctionMirroringPeer:
      properties:
        description:
          type: string
        enabled:
          default: false
          type: boolean
        ipAddress:
          type: string
        protocol:
          enum:
          - gre
          type: string
      type: object
    JunctionRedirectionConfiguration:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        gateway:
          type: string
      type: object
    LagoonDashboardPermissionsResponse:
      properties:
        dashboardId:
          format: int64
          type: number
        dashboardTitle:
          type: string
        permissions:
          items:
            properties:
              dashboardId:
                format: int64
                type: number
              dashboardTitle:
                type: string
              permissionName:
                enum:
                - View
                - Edit
                - Admin
                type: string
              userEmail:
                type: string
              userId:
                format: int64
                type: number
            type: object
          type: array
      type: object
    LagoonDashboardPermissionsUpdatingRequest:
      properties:
        permissions:
          items:
            properties:
              permission:
                type: string
              userId:
                format: int64
                type: integer
            type: object
          type: array
      type: object
    LagoonLicensePackStatusResponse:
      properties:
        licensePackName:
          type: string
        quantity:
          format: int32
          type: integer
      type: object
    LagoonLicensePacksUpdatingRequest:
      properties:
        licensePackQuantities:
          items:
            properties:
              desiredQuantity:
                format: int32
                type: integer
              licensePackName:
                description: |
                  個数を変更するライセンスパックを指定します。
                  - `basicUser`: ユーザー追加パック。
                  - `basicDashboard`: ダッシュボード追加パック。
                enum:
                - basicUser
                - basicDashboard
                type: string
            type: object
          type: array
      type: object
    LagoonMigrationRequest:
      properties:
        dashboardIds:
          description: バージョン移行する Dashboard の ID のリスト。
          items:
            type: string
          type: array
      type: object
    LagoonPlanChangingRequest:
      properties:
        plan:
          enum:
          - maker
          - pro
          - free
          type: string
      type: object
    LagoonRegistrationRequest:
      properties:
        plan:
          enum:
          - free
          - maker
          - pro
          type: string
        userPassword:
          description: はじめに作成される Lagoon ユーザーのパスワード。
          type: string
      type: object
    LagoonRegistrationResponse:
      properties:
        lagoonUserEmail:
          description: はじめに作成される Lagoon ユーザーのメールアドレス。
          type: string
      type: object
    LagoonUser:
      properties:
        email:
          description: Lagoon ユーザーのメールアドレス。
          type: string
        id:
          type: number
        lastSeenAt:
          description: 最終ログイン日時。
          type: string
        lastSeenAtAge:
          description: 最終ログインからの経過日数。
          type: string
        role:
          description: 権限を表すロール。
          enum:
          - Viewer
          - Editor
          type: string
      type: object
    LagoonUserCreationRequest:
      properties:
        role:
          description: 権限を表すロール。
          enum:
          - Viewer
          - Editor
          type: string
        userEmail:
          type: string
        userPassword:
          type: string
      type: object
    LagoonUserCreationResponse:
      properties:
        id:
          description: Lagoon ユーザーの ID。
          type: integer
      type: object
    LagoonUserEmailUpdatingRequest:
      properties:
        userEmail:
          type: string
      type: object
    LagoonUserPasswordUpdatingRequest:
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
      type: object
    LagoonUserPermissionUpdatingRequest:
      properties:
        role:
          description: 権限を表すロール。
          enum:
          - Viewer
          - Editor
          type: string
      type: object
    LastSeen:
      properties:
        rssi:
          format: int32
          type: integer
        snr:
          format: int32
          type: integer
        time:
          format: date-time
          type: string
      type: object
    ListCouponResponse:
      properties:
        couponList:
          description: クーポンリスト
          items:
            $ref: '#/components/schemas/CouponResponse'
          type: array
      type: object
    ListOrderResponse:
      properties:
        orderList:
          description: 発注リスト
          items:
            $ref: '#/components/schemas/GetOrderResponse'
          type: array
      type: object
    ListOrderedSubscriberResponse:
      properties:
        orderedSubscriberList:
          description: 発注した SIM のリスト
          items:
            $ref: '#/components/schemas/OrderedSubscriber'
          type: array
      type: object
    ListPaymentStatementResponse:
      properties:
        paymentStatementsList:
          description: 課金明細リスト
          items:
            $ref: '#/components/schemas/PaymentStatementResponse'
          type: array
      type: object
    ListProductResponse:
      properties:
        productList:
          items:
            $ref: '#/components/schemas/ProductModel'
          type: array
        shippingCostList:
          items:
            $ref: '#/components/schemas/ShippingCostModel'
          type: array
      type: object
    ListRolesResponse:
      properties:
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        roleId:
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    ListShippingAddressResponse:
      properties:
        shippingAddresses:
          items:
            $ref: '#/components/schemas/GetShippingAddressResponse'
          type: array
      type: object
    ListVolumeDiscountResponse:
      properties:
        volumeDiscountList:
          description: 契約済み長期利用割引リスト
          items:
            $ref: '#/components/schemas/GetVolumeDiscountResponse'
          type: array
      type: object
    LocationRegistrationStatus:
      properties:
        cs:
          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'
          description: CS ネットワークへのネットワーク登録状況
        eps:
          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'
          description: EPS ネットワークへのネットワーク登録状況
        ps:
          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'
          description: PS ネットワークへのネットワーク登録状況
      type: object
    LocationRegistrationStatusForNetwork:
      properties:
        lastModifiedTime:
          description: 最後にネットワーク登録が成功したときのタイムスタンプ（UNIX 時間 (ミリ秒)）
          format: int64
          type: integer
        vplmn:
          description: ローミング先の PLMN ID
          type: string
      type: object
    LogEntry:
      properties:
        body:
          description: エラーログ。
          type: object
        logLevel:
          description: ログレベル。
          enum:
          - debug
          - error
          - warning
          - info
          type: string
        operatorId:
          description: オペレーター ID。
          type: string
        resourceId:
          description: |
            リソース ID。`resourceType` ごとに異なります。

            - `resourceType` が `Subscriber` の場合は、サブスクライバーの IMSI です。
            - `resourceType` が `Device` の場合は、Inventory デバイスの ID です。
            - `resourceType` が `LoraDevice` の場合は、LoRaWAN デバイスの ID です。
            - `resourceType` が `SigfoxDevice` の場合は、Sigfox デバイスの ID です。
          type: string
        resourceType:
          description: リソースタイプ。
          enum:
          - Subscriber
          - Device
          - LoraDevice
          - SigfoxDevice
          type: string
        service:
          description: |
            エラーログを出力したサービス名。

            - `Air`: SORACOM Air
            - `Beam`: SORACOM Beam
            - `Funk`: SORACOM Funk
            - `Funnel`: SORACOM Funnel
            - `Harvest`: SORACOM Harvest Data/Files
            - `Napter`: SORACOM Napter
            - `Orbit`: SORACOM Orbit
            - `Unified`: Unified Endpoint
          enum:
          - Air
          - Beam
          - Funk
          - Funnel
          - Harvest
          - Napter
          - Orbit
          - Unified
          type: string
        time:
          description: UNIX 時間 (ミリ秒)。
          format: int64
          type: integer
      type: object
    LoraData:
      properties:
        data:
          type: string
        fPort:
          default: 2
          type: integer
      type: object
    LoraDevice:
      properties:
        device_id:
          type: string
        groupId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          $ref: '#/components/schemas/LastSeen'
        operatorId:
          type: string
        status:
          enum:
          - active
          - ready
          - terminated
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    LoraGateway:
      properties:
        address:
          type: string
        createdTime:
          format: date-time
          type: string
        gatewayId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        networkSetId:
          type: string
        online:
          default: false
          type: boolean
        operatorId:
          type: string
        owned:
          default: false
          type: boolean
        status:
          enum:
          - active
          - terminated
          - ready
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    LoraNetworkSet:
      properties:
        allowedOperators:
          items:
            type: string
          type: array
          uniqueItems: true
        createdTime:
          format: date-time
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        networkSetId:
          type: string
        operatorId:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    MFAAuthenticationRequest:
      properties:
        mfaOTPCode:
          type: string
      type: object
    MFAIssueRevokingTokenRequest:
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    MFARevokeRequest:
      properties:
        password:
          description: ルートユーザーのパスワード。
          type: string
      required:
      - password
      type: object
    MFARevokingTokenVerifyRequest:
      properties:
        backupCode:
          type: string
        email:
          type: string
        password:
          type: string
        token:
          type: string
      type: object
    MFAStatusOfUseResponse:
      properties:
        status:
          type: string
      type: object
    Map:
      additionalProperties:
        type: string
      type: object
    MonthlyBill:
      properties:
        amount:
          description: 利用料金
          format: double
          type: number
        appliedCouponAmount:
          description: クーポン適用金額
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        paymentStatus:
          description: |
            お支払い状況。詳しくは、FAQ: [ご利用料金のお支払状況について](https://support.soracom.io/hc/ja/articles/360029337031) を参照してください。

            - `lessThanMinimumCharge`: 翌月以降請求 (最低課金額に満たないため)
            - `paying`: 支払い処理中
            - `paid`: 支払い済み
            - `fail`: 処理失敗
            - `refunding`: リファンド処理中
            - `refunded`: リファンド済み
            - `refund_fail`: リファンド処理失敗
            - `delegating_to_third_party`: 債権譲渡中
            - `delegated_to_third_party`: 債権譲渡済み
            - `charging`: 請求実施中
            - `canceling`: キャンセル中
            - `cancelled`: キャンセル済み
            - `cancel_failed`: キャンセル処理失敗
          enum:
          - lessThanMinimumCharge
          - paying
          - paid
          - fail
          - refunding
          - refunded
          - refund_fail
          - delegating_to_third_party
          - delegated_to_third_party
          - charging
          - canceling
          - cancelled
          - cancel_failed
          type: string
        paymentTransactionId:
          description: 課金処理 ID。この ID を指定して [Payment:getPaymentTransaction API](#/Payment/getPaymentTransaction)
            を呼び出すと課金詳細が取得できます。
          type: string
        state:
          description: |
            利用料金の集計状況

            - `temporary`: 集計中
            - `closed`: 確定済み
          enum:
          - temporary
          - closed
          type: string
        yearMonth:
          description: 年月
          format: yyyyMM
          type: string
      type: object
    NapterAuditLogDirection:
      properties:
        destinationIPAddress:
          type: string
        destinationPort:
          format: int64
          type: integer
        sourceIPAddress:
          type: string
        sourcePort:
          format: int64
          type: integer
      type: object
    NapterAuditLogEntry:
      properties:
        connectionId:
          type: string
        createdAt:
          format: int64
          type: integer
        direction:
          $ref: '#/components/schemas/NapterAuditLogDirection'
        imsi:
          type: string
        operatorId:
          type: string
        tls:
          type: boolean
        type:
          enum:
          - ACCESS
          - DENIED
          - CONNECTED
          - CLOSED
          - REFUSED
          - CREATED
          - DELETED
          - EXPIRED
          type: string
      type: object
    NapterAuditLogsExportedDataStatsResponse:
      properties:
        exportedBytes:
          description: exportedBytes
          type: integer
        yearMonth:
          description: yearMonth
          type: string
      type: object
    ObjectInstance:
      properties:
        id:
          format: int32
          type: integer
        observed:
          default: false
          type: boolean
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ResourceInstance'
          type: object
      type: object
    OpenGateRequest:
      properties:
        privacySeparatorEnabled:
          default: false
          type: boolean
        vxlanId:
          default: 10
          format: int32
          type: integer
      type: object
    OperatorConfigurationModel:
      properties:
        configuration:
          oneOf:
          - $ref: '#/components/schemas/OperatorConfigurationOfEmail'
          - $ref: '#/components/schemas/OperatorConfigurationOfSupport'
          - $ref: '#/components/schemas/OperatorConfigurationOfUserConsole'
        isModifiable:
          description: false の場合、コンフィグレーションを setOperatorConfigurationNamespace API
            で更新できません。
          type: boolean
        namespace:
          description: ネームスペースごとに異なる configuration を指定します。詳細は configuration プロパティを参照してください。
          enum:
          - Support
          - Email
          type: string
        version:
          description: コンフィグレーションのバージョン。
          type: number
      type: object
    OperatorConfigurationOfEmail:
      properties:
        billing:
          $ref: '#/components/schemas/EmailConfigurationOfBilling'
        notification:
          $ref: '#/components/schemas/EmailConfigurationOfNotification'
      type: object
    OperatorConfigurationOfSupport:
      properties:
        paymentCoverage:
          allOf:
          - $ref: '#/components/schemas/CoverageType'
          description: サポート費用を支払うカバレッジです。
        tier:
          allOf:
          - $ref: '#/components/schemas/SupportTier'
          description: 現在のサポートプランです。
        upcomingTier:
          allOf:
          - $ref: '#/components/schemas/SupportTier'
          description: 来月に適用される予定のサポートプランです。この値が無い場合は、翌月も現在のサポートプランが継続されます。
      type: object
    OperatorConfigurationOfUserConsole:
      properties:
        usageMetricsAcknowledged:
          description: オペレーターが使用状況メトリクスを収集することを認識し、オプトアウトする機会が与えられたことを示します。使用状況メトリクスには、ページビューやパフォーマンス統計などの情報が含まれます。
          type: boolean
        usageMetricsDisabled:
          description: ユーザーコンソールの使用状況メトリクスの収集を無効にするかどうかの設定です。使用状況メトリクスには、ページビューやパフォーマンス統計などの情報が含まれます。
          type: boolean
      type: object
    OperatorMFAVerifyingResponse:
      properties:
        backupCodes:
          items:
            type: string
          type: array
      type: object
    OrderItemModel:
      properties:
        productCode:
          description: 商品コード
          type: string
        quantity:
          description: 購入数
          format: int32
          type: integer
      type: object
    OrderedSimProfileResponse:
      description: 作成された eSIM プロファイル。
      properties:
        activationCode:
          description: eSIM プロファイルのアクティベーションコード。デバイスに eSIM プロファイルをインストールするときに使用します。
          example: LPA:1$example.com$ABCDEFGHIJKLMNOPQRSTUVWXYZ
          type: string
        createdTime:
          description: eSIM プロファイルの作成日時 (UNIX 時間 (ミリ秒))。
          example: 1718756585000
          format: int64
          type: integer
        iccid:
          description: eSIM プロファイルの ICCID。
          example: "12345678901234567890"
          type: string
        imsi:
          description: eSIM プロファイルの IMSI。
          example: 123456789012345
          type: string
        installedTime:
          description: eSIM プロファイルのインストール日時 (UNIX 時間 (ミリ秒))。
          example: 1718756585000
          format: int64
          type: integer
        lastModifiedTime:
          description: eSIM プロファイルの最終更新日時 (UNIX 時間 (ミリ秒))。
          example: 1718756585000
          format: int64
          type: integer
        matchingId:
          description: eSIM プロファイルのマッチング ID。デバイスに eSIM プロファイルをインストールするときに使用します。
          example: ABCDEFGHIJKLMNOPQRSTUVWXYZ
          type: string
        profileOrderId:
          description: この eSIM プロファイルを発注した注文 ID。
          example: 01902ddd-1cf3-77d9-afc0-fe8d410cadb1
          type: string
        profileStatus:
          description: |
            eSIM プロファイルのステータス。

            - `SUBSCRIBER_REGISTRATION_SUCCEEDED`: eSIM プロファイルに対応する IoT SIM がオペレーターに登録された。
            - `INSTALLATION_SUCCEEDED`: eSIM プロファイルがデバイスにインストールされたことが、デバイスから通知された。
            - `INSTALLATION_FAILED`: eSIM プロファイルがデバイスにインストールできなかったことが、デバイスから通知された。
            - `ACTIVATION_SUCCEEDED`: eSIM プロファイルがデバイスで有効化され、通信の準備ができたことが、デバイスから通知された。
            - `ACTIVATION_FAILED`: eSIM プロファイルがデバイスで有効化できなかったことが、デバイスから通知された。
            - `INACTIVATION_SUCCEEDED`: eSIM プロファイルがデバイスで無効化されたことが、デバイスから通知された。
            - `INACTIVATION_FAILED`: eSIM プロファイルがデバイスで無効化できなかったことが、デバイスから通知された。
            - `DELETION_SUCCEEDED`: eSIM プロファイルがデバイスから削除されたことが、デバイスから通知された。
            - `DELETION_FAILED`: eSIM プロファイルがデバイスから削除できなかったことが、デバイスから通知された。
          enum:
          - SUBSCRIBER_REGISTRATION_SUCCEEDED
          - INSTALLATION_SUCCEEDED
          - INSTALLATION_FAILED
          - ACTIVATION_SUCCEEDED
          - ACTIVATION_FAILED
          - INACTIVATION_SUCCEEDED
          - INACTIVATION_FAILED
          - DELETION_SUCCEEDED
          - DELETION_FAILED
          example: DELETION_SUCCEEDED
          type: string
        smdpAddress:
          description: eSIM プロファイルを提供する SM-DP+ サーバーのアドレス。デバイスに eSIM プロファイルをインストールするときに使用します。
          example: example.com
          type: string
        subscription:
          description: |
            eSIM プロファイルのサブスクリプション。以下のいずれかです。

            - `plan01s`
            - `planP1`
            - `planX1`
          example: plan01s
          type: string
      required:
      - profileOrderId
      - iccid
      - imsi
      - matchingId
      - smdpAddress
      - activationCode
      - profileStatus
      - createdTime
      - lastModifiedTime
      type: object
    OrderedSubscriber:
      properties:
        bundles:
          description: バンドル
          items:
            type: string
          type: array
        deviceSerialNumber:
          description: デバイスの製造番号
          type: string
        eiccid:
          description: eICCID
          type: string
        iccid:
          description: ICCID
          type: string
        imsi:
          description: IMSI
          type: string
        msisdn:
          description: MSISDN
          type: string
        serialNumber:
          description: IoT SIM の製造番号
          type: string
        simId:
          description: SIM ID
          type: string
      type: object
    PacketCaptureSession:
      properties:
        createdTime:
          format: date-time
          type: string
        duration:
          format: int32
          type: integer
        endedTime:
          format: date-time
          type: string
        failedReason:
          type: string
        prefix:
          type: string
        sessionId:
          type: string
        startedTime:
          format: date-time
          type: string
        status:
          enum:
          - REQUESTED
          - ACCEPTED
          - CAPTURING
          - POST_PROCESSING
          - DONE
          - FAILED
          - STOPPED
          type: string
        url:
          format: uri
          type: string
      type: object
    PacketCaptureSessionRequest:
      properties:
        duration:
          format: int32
          maximum: 86400
          minimum: 30
          type: integer
        prefix:
          pattern: ^[0-9A-Za-z_\-]{0,100}$
          type: string
      required:
      - duration
      type: object
    PaymentAmount:
      description: Payment amount
      properties:
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        paymentAmount:
          type: number
        subTotalAmount:
          type: number
        taxAmount:
          description: 税額
          format: double
          type: number
        taxFreeSubTotalAmount:
          description: 非課税小計
          format: double
          type: number
        taxRate:
          type: object
        taxableSubTotalAmount:
          description: 課税小計
          format: double
          type: number
        totalAmount:
          description: 合計額 (税込)
          format: double
          type: number
        withholdingTaxAmount:
          description: 源泉徴収税額
          format: double
          type: number
      type: object
    PaymentDescription:
      description: Payment description
      properties:
        description:
          type: string
        itemList:
          items:
            type: string
          type: array
      type: object
    PaymentStatementResponse:
      properties:
        amount:
          description: 金額
          format: double
          type: number
        chargedYearMonths:
          description: この請求に含まれる利用年月のリスト。請求内容が月額費用でない場合は、このフィールドは省略されます。月額利用料金が一定金額未満の場合は翌月に繰り越されることがあり、そのようなケースでは複数月含まれることがあります。
          items:
            type: string
          type: array
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        orderId:
          description: オーダーID。請求内容がオーダーでない場合は、このフィールドは省略されます。
          type: string
        paymentDateTime:
          description: 課金日時
          format: int64
          type: integer
        paymentInstrument:
          description: 支払情報
          type: string
        paymentMethod:
          description: 支払方法
          type: string
        paymentStatementId:
          description: 課金明細 ID
          type: string
        paymentStatementInfo:
          description: 支払内容
          type: string
      type: object
    Placement:
      properties:
        infrastructureProvider:
          enum:
          - aws
          type: string
        region:
          description: |
            `infrastructureProvider` が `aws` の場合は、ランデブーポイントです。

            - `ap-northeast-1`: 東京 (日本)。日本カバレッジのデフォルトです。
            - `eu-central-1`: フランクフルト (ドイツ)。グローバルカバレッジのデフォルトです。
            - `us-west-2`: オレゴン (米国)。
            - `ap-southeast-2`: シドニー (オーストラリア)。
          enum:
          - ap-northeast-1
          - eu-central-1
          - us-west-2
          - ap-southeast-2
          type: string
      type: object
    PortMapping:
      properties:
        createdTime:
          description: オンデマンドリモートアクセスが作成された UNIX 時間 (ミリ秒)。
          format: int64
          type: integer
        destination:
          $ref: '#/components/schemas/PortMappingDestination'
        duration:
          description: オンデマンドリモートアクセスを維持する時間 (リモートアクセスを許可する時間) (秒)。
          type: number
        endpoint:
          description: オンデマンドリモートアクセスのエンドポイント (IP アドレスとポート番号)。
          type: string
        expired:
          type: boolean
        expiredTime:
          description: オンデマンドリモートアクセスが自動的に削除される日時 (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
        hostname:
          description: オンデマンドリモートアクセスのホスト名。
          type: string
        imsi:
          description: |
            IMSI。`destination.destinationChoosingStrategy` が `IMSI_PRIORITIZED` の場合にのみ含まれます。
          type: string
        ipAddress:
          description: オンデマンドリモートアクセスの IP アドレス。
          type: string
        operatorId:
          description: オペレーター ID。
          type: string
        placement:
          description: |
            ランデブーポイント。

            - `default`: デフォルトのランデブーポイント。日本カバレッジの場合は東京 (日本)、グローバルカバレッジの場合はフランクフルト (ドイツ) です。
            - `aws:ap-northeast-1`: 東京 (日本)。
            - `aws:eu-central-1`: フランクフルト (ドイツ)。
            - `aws:us-west-2`: オレゴン (米国)。
            - `aws:ap-southeast-2`: シドニー (オーストラリア)。
          type: string
        port:
          description: オンデマンドリモートアクセスのポート番号。
          type: number
        simId:
          description: |
            SIM ID。`destination.destinationChoosingStrategy` が `IMSI_PRIORITIZED` 以外の場合にのみ含まれます。
          type: string
        source:
          $ref: '#/components/schemas/PortMappingSource'
        tlsRequired:
          description: |
            アクセス元から SORACOM までを TLS で暗号化するかどうか。

            - `true`: TLS を使用して暗号化する。

              デバイスで HTTP で待ち受けている場合は、`true` を指定します。
            - `false`: TLS を使用しない。

              デバイスに SSH 接続する場合や、デバイスで HTTPS で待ち受けている場合は、`false` を指定します。なお、SSH や HTTPS では、アクセス元からデバイスまでの通信は暗号化されています。
          type: boolean
      type: object
    PortMappingDestination:
      description: |
        オンデマンドリモートアクセスを作成するときは、`imsi` または `simId` のいずれかを必ず指定してください。
      properties:
        destinationChoosingStrategy:
          description: |
            オンデマンドリモートアクセスが作成された方法を示す文字列。作成時は無視されます。

            - `AIR_PRIORITIZED`: SIM ID を指定し、`service` に `air` を指定して作成されたオンデマンドリモートアクセス。
            - `ARC_PRIORITIZED`: SIM ID を指定し、`service` に `arc` を指定して作成されたオンデマンドリモートアクセス。
            - `DYNAMIC`: SIM ID だけを指定して作成されたオンデマンドリモートアクセス。

                セッションがオンラインのサブスクライバーが、オンデマンドリモートアクセスを作成する対象となります。セッションがオンラインのサブスクライバーが複数ある場合、つまり SORACOM Air のセッションと SORACOM Arc のセッションが両方オンラインの場合は、どちらがオンデマンドリモートアクセス作成の対象となるかは保証されません。
            - `IMSI_PRIORITIZED`: IMSI を指定して作成されたオンデマンドリモートアクセス。
          enum:
          - AIR_PRIORITIZED
          - ARC_PRIORITIZED
          - DYNAMIC
          - IMSI_PRIORITIZED
          type: string
        imsi:
          description: |
            対象となる IMSI。オンデマンドリモートアクセスを作成する際、`simId` が指定されている場合は、`imsi` は無視されます。
          type: string
        port:
          description: IoT SIM やバーチャル SIM/Subscriber を利用するデバイスで、接続を待ち受けているポート番号。
          type: number
        service:
          description: |
            オンデマンドリモートアクセスを作成する対象。`simId` が指定されているときに有効です。

            - `air`: セッションがオンラインの SORACOM Air のサブスクライバーを対象とする。
            - `arc`: SORACOM Arc のバーチャル SIM/Subscriber を対象とする。

            **Warning**: `service` を省略した場合は、セッションがオンラインのサブスクライバーが、オンデマンドリモートアクセスを作成する対象となります。セッションがオンラインのサブスクライバーが複数ある場合 (SORACOM Air のセッションと SORACOM Arc のセッションが両方オンラインの場合) は、どちらがオンデマンドリモートアクセス作成の対象となるかは保証されません。`air` または `arc` を指定してください。

            **Warning**: オンデマンドリモートアクセスを作成するときに必要なプロパティです。レスポンスには含まれません。
          enum:
          - air
          - arc
          type: string
        simId:
          description: |
            対象となる SIM ID。オンデマンドリモートアクセスを作成する際、`simId` を指定する場合は、`service` も指定してください。なお、`simId` が指定されている場合は、`imsi` は無視されます。
          type: string
      required:
      - port
      type: object
    PortMappingSource:
      properties:
        ipRanges:
          description: |
            オンデマンドリモートアクセスへのアクセスを許可する CIDR 表記の IP アドレスの範囲。グローバル IP アドレスで指定します。指定した IP アドレスレンジに含まれる IP アドレスからのみ、デバイスにリモートアクセスできます。
          items:
            type: string
          type: array
      type: object
    PreviousSessionStatus:
      properties:
        cell:
          $ref: '#/components/schemas/Cell'
        createdTime:
          description: The time when the previous session was created.
          format: int64
          type: integer
        deletedTime:
          description: The time when the previous session was deleted.
          format: int64
          type: integer
        dnsServers:
          description: Array of IP address of the DNS servers.
          items:
            type: string
          type: array
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
        sessionId:
          description: The session ID of the previous session.
          type: string
        ueIpAddress:
          description: The IP address of the device.
          type: string
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    PriceByQuantity:
      properties:
        minQuantity:
          description: 最低数量
          format: int32
          type: integer
        price:
          description: 販売価格
          format: double
          type: number
        taxIncludedPrice:
          description: 税込販売価格
          format: double
          type: number
      type: object
    ProductModel:
      description: Product
      properties:
        campaignCode:
          description: キャンペーンコード
          type: string
        consignorId:
          description: 委託者 ID
          type: string
        consignorName:
          description: 委託者名
          type: string
        count:
          description: 入数
          format: double
          type: number
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        description:
          description: 商品詳細
          type: string
        maxQuantity:
          description: 注文あたりの最大購入数量
          format: int32
          type: integer
        price:
          description: 販売価格
          format: double
          type: number
        priceByQuantityList:
          description: 数量別価格リスト
          items:
            $ref: '#/components/schemas/PriceByQuantity'
          type: array
        productCode:
          description: 商品コード
          type: string
        productInfoURL:
          description: 商品説明ページ URL
          type: string
        productName:
          description: 商品名
          type: string
        productType:
          description: 商品種別
          enum:
          - sim
          - lora
          - sigfox
          - network_module
          - misc
          type: string
        properties:
          additionalProperties:
            type: string
          description: 商品プロパティ
          type: object
        regularPrice:
          description: 通常価格
          format: double
          type: number
        taxIncludedPrice:
          description: 税込販売価格
          format: double
          type: number
        taxIncludedRegularPrice:
          description: 税込通常価格
          format: double
          type: number
        termsOfConsignorURL:
          description: 委託先の販売条件に関するドキュメントの URL
          type: string
      type: object
    PutIpAddressMapEntryRequest:
      properties:
        ipAddress:
          type: string
        key:
          type: string
      required:
      - key
      - ipAddress
      type: object
    PutSimBasedRoutingRoutesRequest:
      additionalProperties:
        type: string
      description: ルーターの LAN の IP アドレスレンジと SIM ID の対応。
      example:
        YOUR_SIM_ID_1: 192.0.2.0/24
        YOUR_SIM_ID_2: 192.0.2.128/25
      type: object
    ReferenceUrl:
      properties:
        title:
          type: string
        url:
          type: string
      type: object
    RegisterGatePeerRequest:
      properties:
        innerIpAddress:
          type: string
        outerIpAddress:
          type: string
      required:
      - outerIpAddress
      type: object
    RegisterLoraDeviceRequest:
      properties:
        groupId:
          type: string
        registrationSecret:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    RegisterPayerInformationModel:
      properties:
        companyName:
          description: 企業名
          type: string
        department:
          description: 部署
          type: string
        fullName:
          description: 氏名
          type: string
      type: object
    RegisterSimRequest:
      properties:
        groupId:
          type: string
        registrationSecret:
          description: IoT SIM の PUK または PASSCODE。
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      required:
      - registrationSecret
      type: object
    RegisterSubscribersRequest:
      properties:
        groupId:
          type: string
        registrationSecret:
          description: IoT SIM の PUK または PASSCODE
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
      required:
      - registrationSecret
      type: object
    ResourceInitialSetting:
      description: リソースに対する初期設定。
      properties:
        simInitialSettings:
          additionalProperties:
            $ref: '#/components/schemas/SimInitialSetting'
          description: |
            IoT SIM のサブスクリプションごとの初期設定です。キーにサブスクリプションを表す文字列を指定します。

            - `plan01s`
            - `plan01s-low_data_volume` (plan01s - Low Data Volume)
            - `planX3` (planX3 X3-5MB)
            - `planP1`
            - `plan-D` (plan-D (バンドルなし)、plan-D D-300MB)
            - `plan-K2` (plan-K2 K2-300MB)
            - `plan-DU`
            - `plan-KM1`
            - `plan-K`
            - `plan-US`
            - `plan-NA1-package` (plan-NA1)
          example:
            plan01s:
              groupId: 00000000-1111-2222-3333-444444444444
              speedClass: s1.4xfast
              tags:
                date: 20221111
                location: headquarters
          type: object
      type: object
    ResourceInstance:
      properties:
        description:
          type: string
        id:
          format: int32
          type: integer
        mandatory:
          default: false
          type: boolean
        multiple:
          default: false
          type: boolean
        name:
          type: string
        observed:
          default: false
          type: boolean
        operations:
          enum:
          - NONE
          - R
          - W
          - RW
          - E
          - RE
          - WE
          - RWE
          type: string
        rangeEnumeration:
          type: string
        type:
          enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - OPAQUE
          - TIME
          - OBJLNK
          type: string
        units:
          type: string
        value:
          type: object
        values:
          type: object
      type: object
    ResourceSummary:
      properties:
        resourceSummaryItems:
          description: リソースの要約アイテムの一覧。
          items:
            $ref: '#/components/schemas/ResourceSummaryItem'
          type: array
        resourceSummaryType:
          description: |
            リソースの要約の種別。

            - `simsPerStatus`: ステータスごとの IoT SIM の数。
          example: simsPerStatus
          type: string
      type: object
    ResourceSummaryItem:
      properties:
        dimensions:
          description: リソースの要約アイテムのディメンションの一覧。
          example: []
          items:
            $ref: '#/components/schemas/ResourceSummaryItemDimension'
          type: array
        updatedTime:
          description: リソースの要約アイテムの最終更新日時 (UNIX 時間 (ミリ秒))。
          example: 1654007722000
          format: int64
          type: integer
        values:
          description: リソースの要約アイテムの集計値の一覧。
          items:
            $ref: '#/components/schemas/ResourceSummaryItemValue'
          type: array
      type: object
    ResourceSummaryItemDimension:
      properties:
        name:
          description: リソースの要約アイテムのディメンションの名前。
          type: string
        value:
          description: リソースの要約アイテムのディメンションの値。
          type: string
      type: object
    ResourceSummaryItemValue:
      properties:
        name:
          description: |
            リソースの要約アイテムの集計値の名前。

            - `resourceSummaryType` が `simsPerStatus` の場合:
              - `readySims`: ステータスが「準備完了 (ready)」の IoT SIM の数。
              - `activeSims`: ステータスが「使用中 (active)」の IoT SIM の数。
              - `inactiveSims`: ステータスが「休止中 (inactive)」の IoT SIM の数。
              - `standbySims`: ステータスが「利用開始待ち (standby)」の IoT SIM の数。
              - `suspendedSims`: ステータスが「利用中断中 (suspended)」の IoT SIM の数。
          example: activeSims
          type: string
        value:
          description: リソースの要約アイテムの集計値の値。
          example: 1
          type: number
      type: object
    RoleResponse:
      properties:
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        permission:
          description: パーミッションの JSON。
          type: string
        roleId:
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    RoutingFilterEntry:
      properties:
        action:
          description: Whether to allow or deny the outbound packets with a destination
            in the specified range
          enum:
          - allow
          - deny
          type: string
        ipRange:
          description: IPv4 address range in CIDR format, e.g. a.b.c.d/x
          type: string
      required:
      - action
      - ipRange
      type: object
    RoutingTableEntry:
      properties:
        destination:
          description: 宛先の IP アドレスレンジ
        gateway:
          description: Transit Gateway ID
        id:
          description: ルーティングテーブルエントリの一意の ID
        type:
          description: ルーティングテーブルエントリのタイプ、 `static` または `dynamic`
    RuleConfig:
      properties:
        properties:
          $ref: '#/components/schemas/RuleConfigProperty'
        type:
          description: "ルールの種類。以下のいずれかを設定します。種類によって、`properties` で指定できる値は異なります。\n\n-
            `SubscriberFirstTrafficRule`: サブスクライバーのデータ通信量が初めて記録されたら実行する。\n\n  なお、`properties`
            に設定できるプロパティは、以下のとおりです。\n  - `inactiveTimeoutDateConst` (必須)\n- `SubscriberDailyTrafficRule`:
            サブスクライバーの日次データ通信量が一定を超えたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `limitTotalTrafficMegaByte` (必須)\n  - `inactiveTimeoutDateConst` (必須)\n
            \ - `inactiveTimeoutOffsetMinutes`              \n- `SubscriberMonthlyTrafficRule`:
            サブスクライバーの月次データ通信量が一定を超えたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `limitTotalTrafficMegaByte` (必須)\n  - `inactiveTimeoutDateConst` (必須)\n
            \ - `inactiveTimeoutOffsetMinutes`              \n- `SubscriberCumulativeTrafficRule`:
            サブスクライバーの利用開始からの累積データ通信量が一定を超えたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `limitTotalTrafficMegaByte` (必須)\n  - `inactiveTimeoutDateConst` (必須)\n
            \ - `inactiveTimeoutOffsetMinutes`              \n- `SubscriberStatusAttributeRule`:
            サブスクライバーのステータスが変更されたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `sourceStatus`\n  - `targetStatus`\n  - `inactiveTimeoutDateConst`
            (必須)\n  - `inactiveTimeoutOffsetMinute`\n  - `runOnceAmongTarget`\n- `SimStatusAttributeRule`:
            IoT SIM のステータスが変更されたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `sourceStatus`\n  - `targetStatus`\n  - `inactiveTimeoutDateConst`
            (必須)\n  - `inactiveTimeoutOffsetMinute`\n  - `runOnceAmongTarget`\n- `SubscriberSpeedClassAttributeRule`:
            サブスクライバーの速度クラスが変更されたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `targetSpeedClass`\n  - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SimSpeedClassAttributeRule`: IoT SIM の速度クラスが変更されたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `targetSpeedClass`\n  -
            `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SubscriberExpiredRule`: サブスクライバーの有効期限が切れたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `inactiveTimeoutDateConst`
            (必須)\n  - `inactiveTimeoutOffsetMinutes`\n  - `runOnceAmongTarget`\n-
            `SimExpiredRule`: IoT SIM の有効期限が切れたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SubscriberImeiMismatchedRule`: サブスクライバーが
            IMEI ロックにより接続失敗したら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SimImeiMismatchedRule`: IoT SIM が IMEI ロックにより接続失敗したら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `inactiveTimeoutDateConst`
            (必須)\n  - `inactiveTimeoutOffsetMinutes`\n  - `runOnceAmongTarget`\n-
            `SimDailyTotalTrafficRule`: IoT SIM に紐づく全サブスクライバーの「日次データ通信量」の合計が一定を超えたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `limitTotalTrafficMegaByte`
            (必須)\n  - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SimMonthlyTotalTrafficRule`: IoT SIM に紐づく全サブスクライバーの月次データ通信量合計が一定を超えたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `limitTotalTrafficMegaByte`
            (必須)\n  - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SimCumulativeTotalTrafficRule`: IoT SIM に紐づく全サブスクライバーの利用開始からの累積データ通信量合計が一定を超えたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `limitTotalTrafficMegaByte`
            (必須)\n  - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `SimSubscriptionStatusRule`: IoT SIM にサブスクリプションが追加されたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `targetOtaStatus`\n  - `inactiveTimeoutDateConst`
            (必須)\n  - `inactiveTimeoutOffsetMinutes`\n  - `runOnceAmongTarget`\n-
            `DailyTotalTrafficRule`: グループ / オペレーターに紐づく全 IoT SIM の日次データ通信量合計が一定を超えたら実行する。\n\n
            \ なお、`properties` に設定できるプロパティは、以下のとおりです。\n  - `limitTotalTrafficMegaByte`
            (必須)\n  - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n
            \ - `runOnceAmongTarget`\n- `MonthlyTotalTrafficRule`: グループ / オペレーターに紐づく全
            IoT SIM の月次データ通信量合計が一定を超えたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n
            \ - `limitTotalTrafficMegaByte` (必須)\n  - `inactiveTimeoutDateConst` (必須)\n
            \ - `inactiveTimeoutOffsetMinutes`\n  - `runOnceAmongTarget`\n- `MonthlyChargeRule`:
            今月の利用料金が設定金額を超えたら実行する。\n\n  なお、`properties` に設定できるプロパティは、以下のとおりです。\n  -
            `limitTotalAmount` (必須)\n  - `inactiveTimeoutDateConst` (必須)\n  - `inactiveTimeoutOffsetMinutes`\n"
          enum:
          - SubscriberFirstTrafficRule
          - SubscriberDailyTrafficRule
          - SubscriberMonthlyTrafficRule
          - SubscriberCumulativeTrafficRule
          - SubscriberStatusAttributeRule
          - SimStatusAttributeRule
          - SubscriberSpeedClassAttributeRule
          - SimSpeedClassAttributeRule
          - SubscriberExpiredRule
          - SimExpiredRule
          - SubscriberImeiMismatchedRule
          - SimImeiMismatchedRule
          - SimDailyTotalTrafficRule
          - SimMonthlyTotalTrafficRule
          - SimCumulativeTotalTrafficRule
          - SimSubscriptionStatusRule
          - DailyTotalTrafficRule
          - MonthlyTotalTrafficRule
          - MonthlyChargeRule
          type: string
      required:
      - properties
      - type
      type: object
    RuleConfigProperty:
      properties:
        inactiveTimeoutDateConst:
          description: |
            [再評価を行うタイミング](/ja-jp/docs/event-handler/how-it-works/#再評価を行うタイミング)。以下のいずれかを指定します。ただし、`type` の値によって指定できる値が異なります。

            - `type` が `SubscriberDailyTrafficRule`、`SubscriberMonthlyTrafficRule`、`SubscriberCumulativeTrafficRule` (*1)、`SimDailyTotalTrafficRule`、`SimMonthlyTotalTrafficRule`、`SimCumulativeTotalTrafficRule` (*1)、`SimSubscriptionStatusRule`、`DailyTotalTrafficRule`、`MonthlyTotalTrafficRule` の場合:
              - `BEGINNING_OF_NEXT_MONTH`
              - `BEGINNING_OF_NEXT_DAY`
              - `AFTER_ONE_DAY`
              - `NEVER`

              (*1) 累積データ通信量はリセットされないため、しきい値を超えたあとは、再評価を行うタイミングで繰り返しアクションが実行されます。
            - `type` が `SubscriberFirstTrafficRule` の場合:
              - `NEVER`
            - `type` が `SubscriberStatusAttributeRule`、`SubscriberSpeedClassAttributeRule`、`SubscriberExpiredRule`、`SubscriberImeiMismatchedRule`、`SimStatusAttributeRule`、`SimSpeedClassAttributeRule`、`SimExpiredRule`、`SimImeiMismatchedRule`、`MonthlyChargeRule` の場合:
              - `IMMEDIATELY`
              - `BEGINNING_OF_NEXT_MONTH`
              - `BEGINNING_OF_NEXT_DAY`
              - `AFTER_ONE_DAY`
              - `NEVER`
          enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
          type: string
        inactiveTimeoutOffsetMinutes:
          description: |
            [ルールを再評価するときのオフセット (分)](/ja-jp/docs/event-handler/how-it-works/#ルールを再評価するときのオフセット-分)。デフォルトは `0` です。`0`～`525600` の整数を String 型で指定します。

            `inactiveTimeoutDateConst` に `NEVER` を指定した場合は、`inactiveTimeoutOffsetMinutes` は指定できません。
          type: string
        limitTotalAmount:
          description: |
            「オペレーターの今月の利用料金」のしきい値。単位は円 (日本カバレッジの場合)、または USD (グローバルカバレッジの場合) です。`1`～`2147483647` の整数を String 型で指定します。
          type: string
        limitTotalTrafficMegaByte:
          description: |
            データ通信量のしきい値。単位は MiB です。`1`～`2147483647` の整数を String 型で指定します。
          type: string
        runOnceAmongTarget:
          description: |
            [再評価を行うタイミングまで再実行しない](/ja-jp/docs/event-handler/how-it-works/#再評価を行うタイミングまで再実行しない)。
          enum:
          - true
          - false
          type: string
        sourceStatus:
          description: |
            変更前の IoT SIM のステータス。変更前のステータスを限定して、アクションを実行するときに以下のいずれかを指定します。省略すると、任意のステータスから変更されたときに、アクションが実行されます。

            - `ready`: 準備完了 (ready)。
            - `active`: 使用中 (active)。
            - `inactive`: 休止中 (inactive)。
            - `standby`: 利用開始待ち (standby)。
            - `suspended`: 利用中断中 (suspended)。

            `sourceStatus` と `targetStatus` の両方を省略すると、IoT SIM のステータスに関わらず、IoT SIM のステータスが変更されたときに、アクションが実行されます。
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          type: string
        targetOtaStatus:
          description: |
            変化後の OTA の状況。OTA の状況を限定して、アクションを実行するときに指定します。

            - (省略): 任意の状況に変わったときにアクションが実行されます。
            - `started`: OTA が開始されたときにアクションが実行されます。
            - `finished`: OTA が成功したときにアクションが実行されます。
            - `failed`: OTA が失敗したときにアクションが実行されます。
          enum:
          - started
          - finished
          - failed
          type: string
        targetSpeedClass:
          description: |
            変更後の速度クラス。変更後の速度クラスを限定して、アクションを実行するときに以下のいずれかを指定します。省略すると、任意の速度クラスに変更されたときに、アクションが実行されます。

            - plan01s、plan01s - Low Data Volume、planX3 X3-5MB、planP1、plan-D (バンドルなし)、plan-D D-300MB、plan-K2 K2-300MB、plan-K の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
            - plan-US の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
                - `s1.8xfast`
            - plan-DU の場合:
                - `u1.standard`
                - `u1.slow`

            **Warning**: plan-KM1 およびバーチャル SIM/Subscriber は、速度クラスが 1 種類のため変更できません。
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          - s1.8xfast
          - u1.standard
          - u1.slow
          type: string
        targetStatus:
          description: |
            変更後の IoT SIM のステータス。変更後のステータスを限定して、アクションを実行するときに以下のいずれかを指定します。省略すると、任意のステータスに変更されたときに、アクションが実行されます。

            - `ready`: 準備完了 (ready)。
            - `active`: 使用中 (active)。
            - `inactive`: 休止中 (inactive)。
            - `standby`: 利用開始待ち (standby)。
            - `suspended`: 利用中断中 (suspended)。
            - `terminated`: 解約済み (terminated)。

            `sourceStatus` と `targetStatus` の両方を省略すると、IoT SIM のステータスに関わらず、IoT SIM のステータスが変更されたときに、アクションが実行されます。
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
          type: string
      required:
      - inactiveTimeoutDateConst
      type: object
    SessionEvent:
      properties:
        apn:
          description: The Access Point Name configured.
          type: string
        cell:
          $ref: '#/components/schemas/Cell'
        createTime:
          type: string
        dns0:
          description: First IP address of DNS servers.
          type: string
        dns1:
          description: Second IP address of DNS servers.
          type: string
        event:
          description: |
            セッションのイベントの種類です。以下のいずれかです:

            - `Created`: セッションが確立されました。
            - `Modified`: デバイスの移動や電波強度の変化などの理由で、基地局からセッションの更新 (ハンドオーバー) が通知されました。
            - `Deleted`: セッションが切断されました。

            `Created` または `Modified` の場合は、セッションの状態がオンラインであることを表します。`Deleted` の場合は、セッションの状態がオフラインであることを表します。セッションの意味は、[状態 (オンライン / オフライン)](/ja-jp/resources/glossary/session/#状態-オンライン--オフライン) を参照してください。
          type: string
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
        imsi:
          description: The IMSI of the SIM.
          type: string
        operatorId:
          description: The operator ID of the session event.
          type: string
        sessionId:
          description: The session ID of the session that generated this session event.
          type: string
        simId:
          type: string
        subscription:
          type: string
        time:
          description: The timestamp of the session event.
          format: int64
          type: integer
        ueIpAddress:
          description: The IP address of the device.
          type: string
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    SessionStatus:
      properties:
        cell:
          $ref: '#/components/schemas/Cell'
        dnsServers:
          description: Array of IP address of the DNS servers.
          items:
            type: string
          type: array
        gatewayPrivateIpAddress:
          type: string
        gatewayPublicIpAddress:
          type: string
        imei:
          description: The IMEI of the device using the SIM.
          type: string
        imsi:
          description: IMSI
          type: string
        lastUpdatedAt:
          format: int64
          type: integer
        location:
          type: object
        online:
          description: |
            セッション状態。

            - `true`: オンライン。
            - `false`: オフライン。
          type: boolean
        placement:
          $ref: '#/components/schemas/Placement'
        sessionId:
          description: The session ID of the session.
          type: string
        subscription:
          description: サブスクリプション
          type: string
        ueIpAddress:
          description: The IP address of the device.
          type: string
        vpgId:
          description: The Virtual Private Gateway IP address configured.
          type: string
      type: object
    SetDeviceObjectModelScopeRequest:
      properties:
        scope:
          type: string
      type: object
    SetGroupRequest:
      properties:
        groupId:
          description: グループ ID。グループ ID は [Group:listGroups API](#/Group/listGroups)
            で取得できます。
          type: string
      type: object
    SetImeiLockRequest:
      properties:
        imei:
          description: |
            対象デバイスの IMEI。一時的に IMEI が報告されない場合でもセッションの確立を許可する場合は、`|ANONYMOUS` を追記します。

            たとえば、対象デバイスの IMEI が `123456789012345` の場合に `123456789012345|ANONYMOUS` を指定すると、一時的に IMEI が報告されない場合でもセッションの確立を許可します。
          type: string
      type: object
    SetNetworkSetRequest:
      properties:
        networkSetId:
          type: string
      type: object
    SetOperatorConfigurationNamespaceRequest:
      properties:
        configuration:
          oneOf:
          - $ref: '#/components/schemas/OperatorConfigurationOfSupport'
          - $ref: '#/components/schemas/OperatorConfigurationOfEmail'
          - $ref: '#/components/schemas/OperatorConfigurationOfUserConsole'
        expectedVersion:
          description: このプロパティは、更新時のコンフリクトを避けるために利用します。利用する場合、getOperatorConfigurationNamespace
            API で 取得した version の値をここに指定します。 もし expectedVersion を指定しなかった場合は、更新時にコンフリクトの確認をしません。
          type: number
      required:
      - configuration
      type: object
    SetSystemNotificationsRequest:
      properties:
        emailIdList:
          items:
            type: string
          type: array
        password:
          description: オペレータのパスワード。primary タイプの設定時のみ必要。
          type: string
      required:
      - emailIdList
      type: object
    SetUserPermissionRequest:
      properties:
        description:
          type: string
        permission:
          description: Permission の JSON
          type: string
      required:
      - permission
      type: object
    SetUserTrustPolicyRequest:
      properties:
        trustPolicy:
          description: 信頼ポリシー (JSON)。
          example: '{"statements": [{"effect":"allow","principal":{"soracom":["srn:soracom:OPXXXXXXXXXX::User:accounting"]}}]}'
          type: string
      type: object
    SetVirtualPrivateGatewayVxLanIdRequest:
      properties:
        vxlanId:
          description: VXLAN ID。1〜16777215 の範囲で指定します。
          type: integer
      required:
      - vxlanId
      type: object
    ShippingAddressModel:
      description: 商品発送先。
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        building:
          type: string
        city:
          type: string
        companyName:
          type: string
        countryCode:
          type: string
        department:
          type: string
        email:
          type: string
        fullName:
          type: string
        phoneNumber:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
      - addressLine1
      - city
      - state
      - zipCode
      type: object
    ShippingCostModel:
      description: 発送料
      properties:
        appliedShippingOptions:
          description: 適用済み配送オプション
          items:
            type: object
          type: array
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        shippingArea:
          description: (日本カバレッジのみ) 発送先エリア
          enum:
          - hokkaido
          - kita_tohoku
          - minami_tohoku
          - kanto
          - shinetsu
          - chubu
          - hokuriku
          - kansai
          - chugoku
          - shikoku
          - kyushu
          - okinawa
          type: string
        shippingAreaName:
          description: 発送先エリア名称
          type: string
        shippingCost:
          description: 送料
          format: double
          type: number
        size:
          description: 発送サイズ
          format: int32
          type: integer
      type: object
    ShippingLabelDetail:
      properties:
        shipmentCompany:
          description: 配送業者名。
          example: Yamato Transport
          type: string
        shipmentCompanyUrl:
          description: 配送業者 URL。
          example: http://track.kuronekoyamato.co.jp/english/tracking
          type: string
        trackingNumber:
          description: 荷物の伝票番号。
          example: 0000-1111-2222
          type: string
        trackingUrl:
          description: 伝票番号付きの配送状況確認 URL。
          example: https://jizen.kuronekoyamato.co.jp/jizen/servlet/crjz.b.NQ0010?id=0000-1111-2222
          type: string
      required:
      - shipmentCompany
      - trackingNumber
      type: object
    ShippingOptionOfExpeditedShipping:
      description: 米国およびカナダのオペレーターのみご利用いただけます。
      properties:
        useExpeditedShipping:
          description: お急ぎ便を使用する場合は true を指定してください。(米国内への発送のみ)
          type: boolean
      type: object
    ShippingOptionOfNekopos:
      description: 日本のオペレーターのみご利用いただけます。
      properties:
        allowNekopos:
          description: ネコポスの使用を許可する場合は true を指定します。
          type: boolean
        shipmentCompany:
          description: 配送業者。
          enum:
          - yamato_transport
          type: string
      type: object
    SigfoxData:
      properties:
        data:
          type: string
      type: object
    SigfoxDevice:
      properties:
        device_id:
          type: string
        groupId:
          type: string
        lastModifiedTime:
          format: date-time
          type: string
        lastSeen:
          $ref: '#/components/schemas/LastSeen'
        operatorId:
          type: string
        status:
          enum:
          - active
          - ready
          - terminated
          - instock
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        terminationEnabled:
          default: false
          type: boolean
      type: object
    SigfoxRegistrationRequest:
      properties:
        registrationSecret:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    Sim:
      properties:
        activeProfileId:
          type: string
        arcSessionStatus:
          $ref: '#/components/schemas/ArcSessionStatus'
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        createdTime:
          description: IoT SIM (IoT SIM のプライマリサブスクリプション) が作成された UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        expiryAction:
          description: |
            有効期限が切れたときのアクション。詳しくは、[IoT SIM の有効期限とアクションを設定する](/ja-jp/docs/air/set-expiry/) を参照してください。

            - `doNothing`: 保留
            - `deleteSession`: セッション切断
            - `deactivate`: 休止
            - `suspend`: 利用中断
            - `terminate`: 解約
            - `null`: 有効期限が設定されていない
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          - (null value)
          type: string
        expiryTime:
          description: IoT SIM の有効期限 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        groupId:
          description: IoT SIM が所属するグループの ID
          type: string
        imeiLock:
          $ref: '#/components/schemas/ImeiLock'
        lastModifiedTime:
          description: IoT SIM (IoT SIM のプライマリサブスクリプション) の情報が変更された UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        lastPortMappingCreatedTime:
          description: IoT SIM で Napter が利用された UNIX 時間 (ミリ秒)。 IoT SIM で一度も Napter
            を利用したことがなければ null です。
          format: int64
          type: integer
        localInfo:
          $ref: '#/components/schemas/Map'
        moduleType:
          description: |
            IoT SIM の形状 (フォームファクタ)

            - `mini`: 標準 (2FF) サイズ
            - `micro`: マイクロ (3FF) サイズ
            - `nano`: ナノ (4FF) サイズ
            - `trio`: 3 in 1 (切り取りかた次第で 2FF/3FF/4FF いずれのサイズにもできる)
            - `embedded`: Embedded (MFF2)
            - `virtual`: バーチャル SIM/Subscriber
            - `integrated`: Embedded (iSIM)
          enum:
          - mini
          - micro
          - nano
          - trio
          - embedded
          - virtual
          - integrated
          type: string
        operatorId:
          description: IoT SIM を所有しているオペレーターのオペレーター ID
          type: string
        otaSerialNumber:
          type: string
        pcapEndTime:
          format: int64
          type: integer
        pcapStartTime:
          format: int64
          type: integer
        previousSession:
          $ref: '#/components/schemas/PreviousSessionStatus'
        profiles:
          additionalProperties:
            $ref: '#/components/schemas/SimProfile'
          type: object
        renewalFeeStatusSetTime:
          description: IoT SIM のステータスが「準備完了 (ready)」、「利用開始待ち (standby)」、「利用中断中 (suspended)」のいずれかになった
            UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        serialNumber:
          description: IoT SIM のシリアル番号。バーチャル SIM/Subscriber にはシリアル番号はありません。
          type: string
        sessionStatus:
          $ref: '#/components/schemas/SessionStatus'
        simId:
          description: IoT SIM の SIM ID
          type: string
        speedClass:
          description: IoT SIM の速度クラス
          type: string
        status:
          description: |
            IoT SIM (IoT SIM のプライマリサブスクリプション) のステータス。なお、IoT SIM に追加されたバーチャル SIM/Subscriber のステータスは、`active` または `terminated` です。

            - `ready`: 準備完了 (ready)
            - `active`: 使用中 (active)
            - `inactive`: 休止中 (inactive)
            - `standby`: 利用開始待ち (standby)
            - `suspended`: 利用中断中 (suspended)
            - `terminated`: 解約済み (terminated)
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        terminationEnabled:
          description: |
            IoT SIM を解約できるかどうかを表す値 (解約プロテクションの設定)。

            - `true`: 解約できる (解約プロテクション OFF)
            - `false`: 解約できない (解約プロテクション ON)
          type: boolean
        type:
          description: |
            IoT SIM のタイプ

            - `euicc`: チップ型 (eSIM)
            - `uicc`: カード型
            - `virtual`: バーチャル SIM/Subscriber
          enum:
          - euicc
          - uicc
          - virtual
          type: string
      type: object
    SimCostBreakdown:
      properties:
        amount:
          description: 合計金額
          format: double
          type: number
        simId:
          description: SIM ID
          type: string
    SimInitialSetting:
      description: 指定のサブスクリプションに対する初期設定。
      properties:
        groupId:
          description: グループ ID。
          type: string
        speedClass:
          description: |
            速度クラス。以下のいずれかを指定します。ただし、サブスクリプションにあわせた速度クラスを指定してください。

            - plan01s、plan01s - Low Data Volume、planX3 X3-5MB、planP1、plan-D (バンドルなし)、plan-D D-300MB、plan-K2 K2-300MB、plan-K の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
            - plan-US の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
                - `s1.8xfast`
            - plan-DU の場合:
                - `u1.standard`
                - `u1.slow`
            - plan-KM1 の場合:
                - `t1.standard`
          type: string
        tags:
          additionalProperties:
            type: string
          description: タグ。
          type: object
      type: object
    SimProfile:
      properties:
        arcClientPeerPrivateKey:
          description: |
            WireGuard で接続するためのクライアントの PrivateKey (クライアントピア秘密鍵) です。
            - PrivateKey (クライアントピア秘密鍵) は再表示できません。秘密鍵を紛失した場合は新しい鍵を生成し、デバイスの認証情報を更新してください。
            - 接続情報は決して外部に公開しないでください。
          type: string
        arcClientPeerPublicKey:
          type: string
        iccid:
          type: string
        otaSupported:
          type: boolean
        primaryImsi:
          type: string
        subscribers:
          additionalProperties:
            $ref: '#/components/schemas/SimplifiedSubscriber'
          type: object
      type: object
    SimProfileOrderResponse:
      description: eSIM プロファイルの発注。
      properties:
        completedTime:
          description: 注文処理完了日時 (UNIX 時間 (ミリ秒))。
          example: 1718756585000
          format: int64
          type: integer
        confirmedTime:
          description: 発注確定日時 (UNIX 時間 (ミリ秒))。
          example: 1718756585000
          format: int64
          type: integer
        description:
          description: 注文の説明。
          example: This is a test order
          type: string
        orderedTime:
          description: 仮発注日時 (UNIX 時間 (ミリ秒))。
          example: 1718756585000
          format: int64
          type: integer
        profileOrderId:
          description: 注文 ID。
          example: 01902ddd-1cf3-77d9-afc0-fe8d410cadb1
          type: string
        quantity:
          description: 注文した eSIM プロファイルの数量。
          example: 10
          format: int32
          type: integer
        status:
          description: |
            注文のステータス。

            - `DRAFT`: 仮発注
            - `CONFIRMED`: 発注確定済み
            - `IN_PROGRESS`: 注文処理中
            - `COMPLETED`: 注文処理完了
            - `FAILED`: 注文処理失敗
          enum:
          - DRAFT
          - CONFIRMED
          - IN_PROGRESS
          - COMPLETED
          - FAILED
          example: COMPLETED
          type: string
        subscription:
          description: |
            注文した eSIM プロファイルのサブスクリプション。

            - `plan01s`
            - `planP1`
            - `planX1`
          example: plan01s
          type: string
      required:
      - profileOrderId
      - subscription
      - quantity
      - status
      - orderedTime
      type: object
    SimStatusHistoryResponse:
      properties:
        applyDateTimeEpochSec:
          type: integer
        bundles:
          items:
            type: string
          type: array
        groupId:
          type: string
        imsi:
          type: string
        isPrimary:
          type: boolean
        primaryImsi:
          type: string
        simId:
          type: string
        speedClass:
          type: string
        status:
          type: string
        subscription:
          type: string
      type: object
    SimplifiedSubscriber:
      properties:
        bundles:
          items:
            type: string
          type: array
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        imsi:
          description: IMSI
          type: string
        msisdn:
          type: string
        status:
          type: string
        subscription:
          type: string
      type: object
    SmsForwardingReport:
      properties:
        messageId:
          type: string
      type: object
    SmsForwardingRequest:
      properties:
        encodingType:
          default: 2
          description: |
            メッセージ本体のエンコーディングタイプ。デフォルトは `2` (`DCS_UCS2`)。

            - `1`: 標準アルファベットをサポートする GSM 7 ビットで送信します。漢字やキリル文字、アラビア文字などは送信できません。最大 160 文字 (最大 140 バイト)。

                例: `{"encodingType": 1, "payload": "Test message."}`
            - `2`: 漢字やキリル文字、アラビア文字などをサポートする UCS-2 で送信します。最大 70 文字。

                例: `{"encodingType": 2, "payload": "テストメッセージ"}`
          type: integer
        payload:
          type: string
      type: object
    SoraCamAtomCamSettings:
      properties:
        logo:
          description: |
            撮影画像左下に表示されるアトムテック株式会社のロゴの表示設定。

            - `on`: 表示。
            - `off`: 非表示。
          enum:
          - "on"
          - "off"
          type: string
        motion:
          description: |
            モーション検知の設定。

            - `on`: 有効。
            - `off`: 無効。
          enum:
          - "on"
          - "off"
          type: string
        motionSensitivity:
          description: |
            モーション検知の感度設定。感度が高いほど、小さな画像の変化を検出できます。

            - `high`: 高。
            - `medium`: 中。
            - `low`: 低。
          enum:
          - high
          - medium
          - low
          type: string
        motionTagging:
          description: |
            モーションタグの表示設定。モーションタグは、動いているものを検知したときに表⽰される緑の枠です。

            - `on`: 表示。
            - `off`: 非表示。
          enum:
          - "on"
          - "off"
          type: string
        nightVision:
          description: |
            ナイトビションモードの設定。

            - `on`: ナイトビジョンモード。
            - `off`: 通常モード。
            - `auto`: 自動切り替え。
          enum:
          - "on"
          - "off"
          - auto
          type: string
        quality:
          description: |
            ライブ動画やクラウド録画の画質設定。なお、クラウド録画の場合は画質設定に関わらず、解像度は 1080p (1920 x 1080 ピクセル) です。

            - `low`: ATOM アプリで「360p」を選択したときと同じ画質。
            - `medium`: ATOM アプリで「SD」を選択したときと同じ画質。
            - `high`: ATOM アプリで「HD (1080p)」を選択したときと同じ画質。
          enum:
          - low
          - medium
          - high
          type: string
        rotation:
          description: |
            画像を 180° 回転させる設定。ソラカメ対応カメラを上下反対に設置した場合に `180` を設定します。

            - `0`: OFF (回転なし)。
            - `180`: ON (180° 回転)。
          enum:
          - 0
          - 180
          type: integer
        statusLight:
          description: |
            ステータスライト (カメラ本体の状態を示すランプ) の点灯設定。

            - `on`: 点灯。
            - `off`: 消灯。
          enum:
          - "on"
          - "off"
          type: string
        timestamp:
          description: |
            撮影画像右下に表示されるタイムスタンプの表示設定。

            - `on`: 表示。
            - `off`: 非表示。
          enum:
          - "on"
          - "off"
          type: string
      required:
      - quality
      - statusLight
      - timestamp
      - logo
      - motion
      - motionSensitivity
      - motionTagging
      - nightVision
      type: object
    SoraCamAtomCamSettingsLogo:
      properties:
        state:
          description: |
            撮影画像左下に表示されるアトムテック株式会社のロゴの表示設定。

            - `on`: 表示。
            - `off`: 非表示。
          enum:
          - "on"
          - "off"
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsMotion:
      properties:
        state:
          description: |
            モーションの検知設定。

            - `on`: 有効。
            - `off`: 無効。
          enum:
          - "on"
          - "off"
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsMotionSensitivity:
      properties:
        state:
          description: |
            モーション検知の感度設定。感度が高いほど、小さな画像の変化を検出できます。

            - `high`: 高。
            - `medium`: 中。
            - `low`: 低。
          enum:
          - high
          - medium
          - low
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsMotionTagging:
      properties:
        state:
          description: |
            モーションタグの表示設定。

            - `on`: 表示。
            - `off`: 非表示。
          enum:
          - "on"
          - "off"
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsNightVision:
      properties:
        state:
          description: |
            ナイトビションモードの設定。

            - `on`: ナイトビジョンモード。
            - `off`: 通常モード。
            - `auto`: 自動切り替え。
          enum:
          - "on"
          - "off"
          - auto
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsQuality:
      properties:
        state:
          description: |
            ライブ動画やクラウド録画の画質設定。なお、クラウド録画の場合は画質設定に関わらず、解像度は 1080p (1920 x 1080 ピクセル) です。

            - `low`: ATOM アプリで「360p」を選択したときと同じ画質。
            - `medium`: ATOM アプリで「SD」を選択したときと同じ画質。
            - `high`: ATOM アプリで「HD (1080p)」を選択したときと同じ画質。
          enum:
          - low
          - medium
          - high
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsRotation:
      properties:
        state:
          description: |
            画像を 180° 回転させる設定。ソラカメ対応カメラを上下反対に設置した場合に `180` を設定します。

            - `0`: OFF (回転なし)。
            - `180`: ON (180° 回転)。
          enum:
          - 0
          - 180
          type: integer
      required:
      - state
      type: object
    SoraCamAtomCamSettingsStatusLight:
      properties:
        state:
          description: |
            ステータスライト (カメラ本体の状態を示すランプ) の点灯設定。

            - `on`: 点灯。
            - `off`: 消灯。
          enum:
          - "on"
          - "off"
          type: string
      required:
      - state
      type: object
    SoraCamAtomCamSettingsTimestamp:
      properties:
        state:
          description: |
            撮影画像右下に表示されるタイムスタンプの表示設定。

            - `on`: 表示。
            - `off`: 非表示。
          enum:
          - "on"
          - "off"
          type: string
      required:
      - state
      type: object
    SoraCamDevice:
      properties:
        appliedLicenses:
          description: |
            ソラカメ対応カメラに適用されているライセンス。この情報は、[SoraCam:listSoraCamDevices API](#/SoraCam/listSoraCamDevices) を使用しても取得できません。[SoraCam:getSoraCamDevice API](#/SoraCam/getSoraCamDevice) を使用してください。
          items:
            $ref: '#/components/schemas/SoraCamDeviceLicenseInfo'
          type: array
        configuration:
          $ref: '#/components/schemas/SoraCamDeviceConfiguration'
          description: ソラカメ対応カメラの現在のコンフィグレーション
        connected:
          description: ソラカメ対応カメラが現在クラウドに接続されているかどうか
          type: boolean
        deviceCategory:
          description: |
            ソラカメ対応カメラの種類

            - `Camera`
          type: string
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        firmwareVersion:
          description: ソラカメ対応カメラの現在のファームウェアバージョン
          type: string
        isShared:
          type: boolean
        lastConnectedTime:
          description: ソラカメ対応カメラが最後にクラウドに接続した UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        name:
          description: ソラカメ対応カメラの名前
          type: string
        powerState:
          enum:
          - "on"
          - sleep
          type: string
        productDisplayName:
          description: ソラカメ対応カメラの製品名
          type: string
      required:
      - deviceId
      - name
      - firmwareVersion
      - productDisplayName
      - powerState
      type: object
    SoraCamDeviceConfiguration:
      description: ソラカメ対応カメラのコンフィグレーション
      properties:
        audioAlarmEnabled:
          description: 音声アラームが有効化されているかどうか
          type: boolean
        motionDetectionEnabled:
          description: モーション検知が有効化されているかどうか
          type: boolean
        smokeAlarmEnabled:
          description: 煙検知が有効化されているかどうか
          type: boolean
      type: object
    SoraCamDeviceLicenseInfo:
      properties:
        name:
          description: |
            ソラカメ対応カメラに適用されているライセンスの名前

            - `Cloud Continuous Recording License (x Days)` もしくは `クラウド常時録画ライセンス (x 日間)`
            - `Cloud Motion Detection "Unlimited" Recording License (x Days)` もしくは `クラウドモーション検知 "無制限" 録画ライセンス (x 日間)`
          type: string
        value:
          description: |
            ソラカメ対応カメラに適用されているライセンスのプロパティ

            `name` が `Cloud Continuous Recording License (x Days)` もしくは `クラウド常時録画ライセンス (x 日間)` もしくは
            `Cloud Motion Detection "Unlimited" Recording License (x Days)` もしくは `クラウドモーション検知 "無制限" 録画ライセンス (x 日間)` の場合:

            - `storage_life`: 保存期間
          type: string
      required:
      - name
      - value
      type: object
    SoraCamDeviceName:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    SoraCamDevicesFirmwareUpdate:
      properties:
        deviceId:
          description: |
            ソラカメ対応カメラのデバイス ID。
          type: string
        firmwareVersion:
          description: |
            ソラカメ対応カメラで更新できるファームウェアバージョン。
          type: string
        timeout:
          description: |
            ファームウェア更新のタイムアウト時間 (秒)。ファームウェアの更新を開始してから、この時間内に更新が完了しない場合、更新は失敗したと見なされます。
          format: int64
          type: integer
      required:
      - deviceId
      - firmwareVersion
      - timeout
      type: object
    SoraCamEvent:
      properties:
        deviceId:
          description: デバイスを識別するための識別子
          type: string
        deviceType:
          description: デバイスのタイプ
          format: string
          type: string
        eventId:
          description: イベントを識別するための識別子
          type: string
        eventInfo:
          properties:
            atomEventV1:
              description: イベントの詳細
              properties:
                endTime:
                  description: イベントの終了時刻 (UNIX 時間 (ミリ秒))
                  format: int64
                  type: integer
                labels:
                  description: イベントで検出されたオブジェクトの一覧
                  items:
                    type: string
                  type: array
                movie:
                  description: |
                    イベントが検出されて録画された動画の URL。有効期限が切れていた場合、再度 API を呼び出してください。

                    - クラウドモーション検知 “無制限” 録画ライセンスが適用されている場合はモーション検知で録画された動画の URL はここには含まれません。[SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) でエクスポートしてください。
                    - クラウドモーション検知 “無制限” 録画ライセンスが適用されている場合でも、モーション検知以外のイベントの場合は、この URL が含まれます。
                  type: string
                picture:
                  description: イベント開始時の静止画の URL。有効期限が切れていた場合、再度 API を呼び出してください。
                  type: string
                recordingStatus:
                  description: イベントの録画状況
                  enum:
                  - completed
                  - recording
                  - failed
                  type: string
                startTime:
                  description: イベントの開始時刻 (UNIX 時間 (ミリ秒))
                  format: int64
                  type: integer
                type:
                  description: |
                    イベント種別
                      - `motion`: モーション検知
                      - `sound`: サウンド検出
                      - `other`: その他
                  enum:
                  - motion
                  - sound
                  - other
                  type: string
              type: object
            infoType:
              description: イベント詳細のタイプ。デバイスのタイプによって変更される場合があります。
              type: string
          required:
          - infoType
          type: object
        time:
          description: イベントが発生した時刻 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
      required:
      - deviceId
      - eventId
      - time
      - deviceType
      type: object
    SoraCamExportUsage:
      properties:
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        image:
          $ref: '#/components/schemas/SoraCamImageExportUsage'
          description: 動画のエクスポート可能時間について、すべて静止画でエクスポートしたとみなした場合の静止画の枚数。
        meteredYearMonth:
          description: '動画のエクスポート可能時間の対象年月 (フォーマット: ''YYYYMM'')。`202301` の場合は、2023
            年 1 月の動画のエクスポート可能時間が出力されていることを表します。'
          type: string
        video:
          $ref: '#/components/schemas/SoraCamVideoExportUsage'
          description: 動画のエクスポート可能時間について、すべて動画でエクスポートしたとみなした場合の動画の秒数。
      required:
      - deviceId
      - meteredYearMonth
      - video
      - image
      type: object
    SoraCamExportUsageLimitOverrideSpecification:
      properties:
        limitHours:
          description: 変更後の動画のエクスポート可能時間の上限。
          type: integer
      required:
      - limitHours
      type: object
    SoraCamImageExportInfo:
      properties:
        deviceId:
          description: ソラカメ対応カメラのデバイス ID
          type: string
        expiryTime:
          description: URL の有効期限 (UNIX 時間 (ミリ秒))。エクスポートが完了してから 10 分が経過すると、URL は利用できなくなります。`status`
            が `completed` の場合のみ含まれます。
          format: int64
          type: integer
        exportId:
          description: |
            エクスポート ID。[SoraCam:exportSoraCamDeviceRecordedImage API](#/SoraCam/exportSoraCamDeviceRecordedImage) で取得したエクスポート ID を、[SoraCam:getSoraCamDeviceExportedImage API](#/SoraCam/getSoraCamDeviceExportedImage) で指定すると、jpg ファイルをダウンロードするための URL を取得できます。
          type: string
        operatorId:
          description: |
            [SoraCam:exportSoraCamDeviceRecordedImage API](#/SoraCam/exportSoraCamDeviceRecordedImage) を呼び出したオペレーターの ID
          type: string
        requestedTime:
          description: |
            [SoraCam:exportSoraCamDeviceRecordedImage API](#/SoraCam/exportSoraCamDeviceRecordedImage) によるエクスポートのリクエストを SORACOM プラットフォームが受け付けた日時 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        status:
          description: |
            エクスポート処理の現在の状況。

            - `initializing`: 初期状態
            - `processing`: 処理中
            - `completed`: エクスポート完了
            - `retrying`: エクスポート再実行中
            - `failed`: エクスポート失敗
            - `limitExceeded`: 動画のエクスポート可能時間の上限を超えたためエクスポート不可
            - `expired`: URL の有効期限切れ
          enum:
          - initializing
          - processing
          - completed
          - retrying
          - failed
          - limitExceeded
          - expired
          type: string
        url:
          description: エクスポートされた jpg ファイルをダウンロードするための URL。`status` が `completed` の場合のみ含まれます。
          type: string
      required:
      - exportId
      - requestedTime
      - operatorId
      - deviceId
      - status
      type: object
    SoraCamImageExportSpecification:
      properties:
        imageFilters:
          description: エクスポートした静止画に適用するフィルタ
          items:
            enum:
            - wide_angle_correction
            type: string
          type: array
        time:
          description: エクスポート対象の時刻 (UNIX 時間 (ミリ秒))。指定した時刻に撮影された録画映像から静止画がエクスポートされます。
          format: int64
          type: integer
      required:
      - time
      type: object
    SoraCamImageExportUsage:
      properties:
        billedFrames:
          description: 課金対象の動画のエクスポート可能時間について、すべて静止画でエクスポートしたとみなした場合の静止画の枚数。つまり、0
            のときは課金が発生していません。なお、課金額の計算には、`billedSeconds` のみが使用されます。
          type: integer
        limitFrames:
          description: 動画のエクスポート可能時間の上限まで、すべて静止画でエクスポートしたとみなした場合の静止画の枚数。動画のエクスポート可能時間の上限が、静止画の枚数で出力されます。
          type: integer
        remainingFrames:
          description: 動画のエクスポート可能時間の上限まで、すべて静止画でエクスポートすると仮定した場合の、エクスポート可能な静止画の枚数。`limitFrames`
            から `usedFrames` を引いた値です。
          type: integer
        usedFrames:
          description: 当月に消費した動画のエクスポート可能時間を、すべて静止画でエクスポートしたとみなした場合の、エクスポートした静止画の枚数。
          type: integer
      required:
      - billedFrames
      - limitFrames
      - remainingFrames
      - usedFrames
      type: object
    SoraCamLicensePackQuantityUpdatingRequest:
      properties:
        currentQuantity:
          description: 現在のライセンス数。
          example: 1
          format: int32
          type: integer
        desiredQuantity:
          description: 変更後のライセンス数。
          example: 2
          format: int32
          type: integer
      type: object
    SoraCamLicensePackResponse:
      properties:
        id:
          description: ライセンスパックの ID。
          example: CR7-SC
          type: string
        name:
          description: ライセンスパックの名前。
          example: Cloud Recording License (7 Days)
          type: string
        quantity:
          description: 現在のライセンス数。
          example: 1
          format: int32
          type: integer
        quantityInUse:
          description: 使用中のライセンス数。
          example: 1
          format: int32
          type: integer
        salesChannel:
          description: ライセンスパックの販売元。
          example: SORACOM Inc.
          type: string
      type: object
    SoraCamPlayListEntry:
      properties:
        from:
          description: 録画映像の開始時刻 (UNIX 時間 (ミリ秒))。リアルタイム映像の場合は省略されます。
          format: int64
          type: integer
        to:
          description: 録画映像の終了時刻 (UNIX 時間 (ミリ秒))。リアルタイム映像の場合は省略されます。
          format: int64
          type: integer
        url:
          description: |
            ストリーミング映像 (リアルタイム映像 / 録画映像) の mpd ファイルを取得するための URL

            - 以下の場合は URL が返されません。
              - リアルタイム映像を取得しようとした場合に、ソラカメ対応カメラの電源が入っていない。
              - リアルタイム映像を取得しようとした場合に、ソラカメ対応カメラでクラウド録画が開始されていない。
              - 録画映像を取得しようとした場合に、指定した `from` から `to` の間に録画映像が存在しない。
          type: string
      required:
      - url
      type: object
    SoraCamPowerState:
      properties:
        powerState:
          description: |
            ソラカメ対応カメラの電源状態。

            - `on`: 電源オン
            - `sleep`: スリープ
          enum:
          - "on"
          - sleep
          type: string
      required:
      - powerState
      type: object
    SoraCamRecordingsAndEventsList:
      properties:
        events:
          items:
            properties:
              endTime:
                description: イベントの終了時刻 (UNIX 時間 (ミリ秒))。
                format: int64
                type: integer
              startTime:
                description: イベントの開始時刻 (UNIX 時間 (ミリ秒))。
                format: int64
                type: integer
              type:
                description: |
                  イベント種別。

                  - `motion`: モーション検知。
                  - `sound`: サウンド検出。
                  - `other`: その他。
                enum:
                - motion
                - sound
                - other
                type: string
            required:
            - startTime
            - type
            type: object
          type: array
        records:
          items:
            properties:
              endTime:
                description: 録画の終了時刻 (UNIX 時間 (ミリ秒))。録画中の場合は、`endTime` が含まれません。
                format: int64
                type: integer
              startTime:
                description: 録画の開始時刻 (UNIX 時間 (ミリ秒))。
                format: int64
                type: integer
            required:
            - startTime
            type: object
          type: array
      required:
      - records
      - events
      type: object
    SoraCamStreamingVideo:
      properties:
        expiryTime:
          description: playList に含まれるすべての URL の有効期限 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        playList:
          description: |
            ストリーミング映像 (リアルタイム映像 / 録画映像) のプレイリストエントリーの配列

            - リアルタイム映像の場合は、返却される動画ファイルは常にひとつです。また、`from` および `to` は省略されます。
            - 録画映像の場合は、録画の状態によって動画ファイルが分割されていることがあります。
          items:
            $ref: '#/components/schemas/SoraCamPlayListEntry'
          type: array
      required:
      - expiryTime
      type: object
    SoraCamVideoExportInfo:
      properties:
        deviceId:
          description: ソラカメ対応カメラのデバイス ID。
          type: string
        expiryTime:
          description: URL の有効期限 (UNIX 時間 (ミリ秒))。エクスポートが完了してから 10 分が経過すると、URL は利用できなくなります。`status`
            が `completed` の場合のみ含まれます。
          format: int64
          type: integer
        exportId:
          description: |
            エクスポート ID。[SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) で取得したエクスポート ID を、[SoraCam:getSoraCamDeviceExportedVideo API](#/SoraCam/getSoraCamDeviceExportedVideo) で指定すると、mp4 ファイルを zip 形式で圧縮したファイルをダウンロードするための URL を取得できます。
          type: string
        operatorId:
          description: |
            [SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) を呼び出したオペレーターの ID
          type: string
        requestedTime:
          description: |
            [SoraCam:exportSoraCamDeviceRecordedVideo API](#/SoraCam/exportSoraCamDeviceRecordedVideo) によるエクスポートのリクエストを SORACOM プラットフォームが受け付けた日時 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        status:
          description: |
            エクスポート処理の現在の状況。

            - `initializing`: 初期状態
            - `processing`: 処理中
            - `completed`: エクスポート完了
            - `retrying`: エクスポート再実行中
            - `failed`: エクスポート失敗
            - `limitExceeded`: 動画のエクスポート可能時間の上限を超えたためエクスポート不可
            - `expired`: URL の有効期限切れ
          enum:
          - initializing
          - processing
          - completed
          - retrying
          - failed
          - limitExceeded
          - expired
          type: string
        url:
          description: |
            mp4 ファイルを zip 形式で圧縮したファイルをダウンロードするための URL。`status` が `completed` の場合のみ含まれます。

            - ダウンロードした zip 形式のファイルを展開すると、mp4 ファイルを取得できます。
          type: string
      required:
      - exportId
      - requestedTime
      - operatorId
      - deviceId
      - status
      type: object
    SoraCamVideoExportSpecification:
      properties:
        from:
          description: エクスポート対象の開始時刻 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        to:
          description: |
            エクスポート対象の終了時刻 (UNIX 時間 (ミリ秒))

            - 一回の API 呼び出しでエクスポートできる時間は最大 900 秒 (15 分) です。`from` と `to` の差が、900 秒を超えないようにしてください。
          format: int64
          type: integer
      required:
      - from
      - to
      type: object
    SoraCamVideoExportUsage:
      properties:
        billedSeconds:
          description: 課金対象の動画のエクスポート可能時間について、すべて動画でエクスポートしたとみなした場合の動画の秒数。つまり、0 のときは課金が発生していません。なお、課金額の計算には、`billedSeconds`
            のみが使用されます。
          type: integer
        limitSeconds:
          description: 動画のエクスポート可能時間の上限まで、すべて動画でエクスポートしたとみなした場合の動画の秒数。動画のエクスポート可能時間の上限が、動画の秒数で出力されます。
          type: integer
        remainingSeconds:
          description: 動画のエクスポート可能時間の上限まで、すべて動画でエクスポートすると仮定した場合の、エクスポート可能な動画の秒数。`limitSeconds`
            から `usedSeconds` を引いた値です。
          type: integer
        usedSeconds:
          description: 当月に消費した動画のエクスポート可能時間を、すべて動画でエクスポートしたとみなした場合の、エクスポートした動画の秒数。
          type: integer
      required:
      - billedSeconds
      - limitSeconds
      - remainingSeconds
      - usedSeconds
      type: object
    SoracomBeamStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomFunkStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomFunnelStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomHarvestStats:
      properties:
        count:
          format: int64
          type: integer
      type: object
    SoracomTransitGateway:
      properties:
        arn:
          type: string
        asn:
          type: integer
        awsAccountId:
          type: string
        id:
          type: string
        region:
          type: string
        resourceSharedStatus:
          additionalProperties:
            $ref: '#/components/schemas/TransitGatewayResourceSharedStatus'
          type: object
      type: object
    Soralet:
      properties:
        createdTime:
          format: int64
          type: integer
        description:
          type: string
        operatorId:
          type: string
        soraletId:
          type: string
        updatedTime:
          format: int64
          type: integer
      type: object
    SoraletDataSource:
      properties:
        resourceId:
          type: string
        resourceType:
          type: string
      required:
      - resourceType
      - resourceId
      type: object
    SoraletLog:
      properties:
        createdTime:
          format: int64
          type: integer
        message:
          type: string
        operatorId:
          type: string
        soraletId:
          type: string
        version:
          format: int64
          type: integer
      type: object
    SoraletVersion:
      properties:
        createdTime:
          format: int64
          type: integer
        hash:
          type: string
        operatorId:
          type: string
        size:
          format: int64
          type: integer
        soraletId:
          type: string
        srn:
          type: string
        version:
          format: int64
          type: integer
      type: object
    Subscriber:
      properties:
        apn:
          description: IoT SIM で使用可能な APN (アクセスポイント名)
          type: string
        bundles:
          items:
            type: string
          type: array
        createdAt:
          description: このサブスクリプションが作成された UNIX 時間 (ミリ秒)。たとえば、セカンダリサブスクリプションの場合は、セカンダリサブスクリプションが作成された
            UNIX 時間 (ミリ秒) です。
          format: int64
          type: integer
        createdTime:
          description: このサブスクリプションが作成された UNIX 時間 (ミリ秒)。たとえば、セカンダリサブスクリプションの場合は、セカンダリサブスクリプションが作成された
            UNIX 時間 (ミリ秒) です。
          format: int64
          type: integer
        expiredAt:
          description: IoT SIM の有効期限 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        expiryAction:
          description: |
            有効期限が切れたときのアクション。詳しくは、[IoT SIM の有効期限とアクションを設定する](/ja-jp/docs/air/set-expiry/) を参照してください。

            - `doNothing`: 保留
            - `deleteSession`: セッション切断
            - `deactivate`: 休止
            - `suspend`: 利用中断
            - `terminate`: 解約
            - `null`: 有効期限が設定されていない
          enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
          - (null value)
          type: string
        expiryTime:
          description: IoT SIM の有効期限 (UNIX 時間 (ミリ秒))
          format: int64
          type: integer
        groupId:
          description: IoT SIM が所属するグループの ID
          type: string
        iccid:
          description: IoT SIM の ICCID
          type: string
        imeiLock:
          $ref: '#/components/schemas/ImeiLock'
        imsi:
          description: IoT SIM の IMSI
          type: string
        ipAddress:
          type: string
        lastModifiedAt:
          description: IoT SIM の情報が変更された UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        lastModifiedTime:
          description: IoT SIM の情報が変更された UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        lastPortMappingCreatedTime:
          description: IoT SIM で Napter が利用された UNIX 時間 (ミリ秒)。 IoT SIM で一度も Napter
            を利用したことがなければ null です。
          format: int64
          type: integer
        locationRegistrationStatus:
          $ref: '#/components/schemas/LocationRegistrationStatus'
          description: 各ネットワークへのネットワーク登録状況
        moduleType:
          description: |
            IoT SIM の形状 (フォームファクタ)

            - `mini`: 標準 (2FF) サイズ
            - `micro`: マイクロ (3FF) サイズ
            - `nano`: ナノ (4FF) サイズ
            - `trio`: 3 in 1 (切り取りかた次第で 2FF/3FF/4FF いずれのサイズにもできる)
            - `embedded`: Embedded (MFF2)
            - `virtual`: バーチャル SIM/Subscriber
            - `integrated`: Embedded (iSIM)
            - `null`: セカンダリサブスクリプションの場合は null
          enum:
          - mini
          - micro
          - nano
          - trio
          - embedded
          - virtual
          - integrated
          - (null value)
          type: string
        msisdn:
          description: IoT SIM の MSISDN
          type: string
        operatorId:
          description: IoT SIM を所有しているオペレーターのオペレーター ID
          type: string
        packetCaptureSessions:
          items:
            type: object
          type: array
        plan:
          description: |
            SMS 機能を有しているかどうか。

            - `0`: SMS 未対応
            - `1`: SMS 対応
          type: integer
        previousSession:
          $ref: '#/components/schemas/PreviousSessionStatus'
        registeredTime:
          description: IoT SIM が手動でオペレーターに登録された UNIX 時間 (ミリ秒)。ユーザーコンソールから IoT SIM
            を購入し、自動的に登録された場合はこのフィールドは存在しません。
          format: int64
          type: integer
        renewalFeeStatusSetTime:
          description: IoT SIM のステータスが「準備完了 (ready)」、「利用開始待ち (standby)」、「利用中断中 (suspended)」のいずれかになった
            UNIX 時間 (ミリ秒)
          format: int64
          type: integer
        serialNumber:
          description: IoT SIM のシリアル番号。バーチャル SIM/Subscriber にはシリアル番号はありません。
          type: string
        sessionStatus:
          $ref: '#/components/schemas/SessionStatus'
        simId:
          description: IoT SIM の SIM ID
          type: string
        speedClass:
          description: IoT SIM の速度クラス
          type: string
        status:
          description: |
            IoT SIM (IoT SIM のプライマリサブスクリプション) のステータス。なお、IoT SIM に追加されたバーチャル SIM/Subscriber のステータスは、`active` または `terminated` です。

            - `ready`: 準備完了 (ready)
            - `active`: 使用中 (active)
            - `inactive`: 休止中 (inactive)
            - `standby`: 利用開始待ち (standby)
            - `suspended`: 利用中断中 (suspended)
            - `terminated`: 解約済み (terminated)
          enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
          type: string
        subscription:
          description: IoT SIM のサブスクリプションの名前
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        terminationEnabled:
          description: |
            IoT SIM の解約プロテクションの設定

            - `true`: 解約プロテクション OFF (解約できる)
            - `false`: 解約プロテクション ON
          type: boolean
        type:
          description: IoT SIM の速度クラス
          type: string
      type: object
    SubscriptionContainer:
      properties:
        containerId:
          format: int64
          type: integer
        downloaded:
          type: boolean
        subscriber:
          additionalProperties:
            $ref: '#/components/schemas/Subscriber'
          type: object
      type: object
    SubscriptionContainerStatus:
      properties:
        containers:
          items:
            $ref: '#/components/schemas/SubscriptionContainer'
          type: array
        countryMapping:
          additionalProperties:
            properties:
              mappingRecord:
                properties:
                  containerId:
                    format: int64
                    type: integer
                  subscription:
                    type: string
                type: object
              plmnCode:
                type: string
            type: object
          type: object
      type: object
    SupportTier:
      enum:
      - basic
      - priority
      - enterprise
      type: string
    SupportTokenResponse:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    SwitchUserRequest:
      properties:
        operatorId:
          description: スイッチ先のオペレーター ID。
          type: string
        tokenTimeoutSeconds:
          default: 3600
          description: |
            スイッチ先のユーザーの API キーと API トークンの有効期間 (秒)。デフォルトは、3600 秒 (1 時間) です。また、最小値と最大値は以下のとおりです。

            - 最小値: 180 秒 (3 分)
            - 最大値: 3600 秒 (1 時間)
          maximum: 3600
          minimum: 180
          type: integer
        userName:
          description: スイッチ先の SAM ユーザー名。
          type: string
      type: object
    SystemNotificationsModel:
      properties:
        emailIdList:
          items:
            type: string
          type: array
        type:
          description: メールアドレスの種類。
          enum:
          - primary
          - recovery
          - billing
          - support
          type: string
        updateDateTime:
          format: int64
          type: integer
      type: object
    TagSet:
      additionalProperties:
        type: string
      description: 任意のタグを設定できます。name プロパティに指定した値が、IoT SIM やグループなどのオブジェクトの名前として扱われます。
      example:
        tagName1: tagValue1
        tagName2: tagValue2...
      type: object
    TagUpdateRequest:
      properties:
        tagName:
          type: string
        tagValue:
          type: string
      required:
      - tagName
      - tagValue
      type: object
    TrafficVolumeRanking:
      properties:
        imsi:
          type: string
        trafficVolume:
          format: int64
          type: integer
      type: object
    TransitGatewayAttachment:
      properties:
        destinationCidrBlocks:
          items:
            type: string
          type: array
        id:
          type: string
        tgwId:
          type: string
      type: object
    TransitGatewayPeeringConnection:
      properties:
        createdTime:
          description: ピアリング接続の作成日時
          type: integer
        customerAwsAccountId:
          description: ピア Transit Gateway の AWS アカウント ID
          type: string
        customerRegion:
          description: ピア Transit Gateway の AWS リージョン
          type: string
        customerTransitGatewayId:
          description: ピア Transit Gateway ID
          type: string
        id:
          description: Transit Gateway ピアリングアタッチメント ID。Transit Gateway ピアリング接続の一意の
            ID です。
          type: string
        lastModifiedTime:
          description: ピアリング接続の最終更新日時
          type: integer
        name:
          description: Transit Gateway ピアリング接続のユーザー定義名
          type: string
        soracomTransitGatewayPeeringAttachmentId:
          description: Transit Gateway ピアリングアタッチメント ID。Transit Gateway ピアリング接続の一意の
            ID です。
          type: string
        status:
          description: Transit Gateway ピアリング接続の現在のステータス
          enum:
          - pending
          - active
          type: string
      type: object
    TransitGatewayResourceSharedStatus:
      properties:
        createdTime:
          description: リソース共有の作成日時
          type: integer
        customerAwsAccountId:
          description: Soracom とリソースを共有している AWS アカウント ID
          type: string
        lastModifiedTime:
          description: リソース共有の最終更新日時
          type: integer
        resourceShareArn:
          description: リソース共有の ARN
          type: string
        status:
          description: リソース共有のステータス。保留中のステータスは、ユーザーが自分の AWS アカウントで Soracom とのリソース共有をまだ受け入れていないことを意味します。
          type: string
      type: object
    TransitGatewayVpcAttachment:
      properties:
        createdTime:
          description: VPC attachment の作成日時
          type: integer
        customerAwsAccountId:
          description: アタッチされる VPC の AWS アカウント ID
          type: string
        customerTransitGatewayVpcAttachmentId:
          description: AWS Transit Gateway VPC アタッチメント ID。Transit Gateway VPC アタッチメントの一意の
            ID です。
          type: string
        customerVpcId:
          description: アタッチされる VPC の ID
          type: string
        id:
          description: AWS Transit Gateway VPC アタッチメント ID。Transit Gateway VPC アタッチメントの一意の
            ID です。
          type: string
        lastModifiedTime:
          description: VPC attachment の最終更新日時
          type: integer
        name:
          description: Transit Gateway VPC アタッチメントのユーザー定義名
          type: string
        status:
          description: Transit Gateway VPC アタッチメントの現在のステータス。 `vpcAttachmentPending`のステータスは、ピア
            AWS アカウントでまだ VPC アタッチメントが作成されていないことを意味します。
          enum:
          - vpcAttachmentPending
          - acceptancePending
          - active
          - failed
          type: string
      type: object
    UpdateCustomerRouteRequest:
      properties:
        target:
          type: string
      required:
      - target
      type: object
    UpdateDefaultPermissionsRequest:
      properties:
        permissions:
          description: 権限の JSON 文字列
          type: string
      required:
      - permissions
      type: object
    UpdateEventHandlerRequest:
      $ref: '#/components/schemas/CreateEventHandlerRequest'
    UpdatePasswordRequest:
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    UpdatePermissionRequest:
      properties:
        operatorId:
          type: string
      type: object
    UpdateSpeedClassRequest:
      properties:
        speedClass:
          description: |
            速度クラス。以下のいずれかを指定します。ただし、サブスクリプションにあわせた速度クラスを指定してください。

            - plan01s、plan01s - Low Data Volume、planX3 X3-5MB、planP1、plan-D (バンドルなし)、plan-D D-300MB、plan-K2 K2-300MB、plan-K の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
            - plan-US の場合:
                - `s1.minimum`
                - `s1.slow`
                - `s1.standard`
                - `s1.fast`
                - `s1.4xfast`
                - `s1.8xfast`
            - plan-DU の場合:
                - `u1.standard`
                - `u1.slow`

            **Warning**: plan-KM1 およびバーチャル SIM/Subscriber は、速度クラスが 1 種類のため変更できません。
          enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
          - s1.8xfast
          - u1.standard
          - u1.slow
          type: string
      required:
      - speedClass
      type: object
    UpdateUserRequest:
      properties:
        description:
          type: string
      type: object
    UpdateVirtualPrivateGatewayTagsRequest:
      items:
        properties:
          tagName:
            type: string
          tagValue:
            type: string
        required:
        - tagName
        - tagValue
        type: object
      type: array
    UserDetailResponse:
      properties:
        authKeyList:
          items:
            $ref: '#/components/schemas/AuthKeyResponse'
          type: array
        createDateTime:
          format: int64
          type: integer
        description:
          type: string
        hasPassword:
          type: boolean
        permission:
          type: string
        roleList:
          items:
            $ref: '#/components/schemas/ListRolesResponse'
          type: array
        updateDateTime:
          format: int64
          type: integer
        userName:
          type: string
      type: object
    VerifyAddEmailTokenRequest:
      properties:
        token:
          description: メールで送信されたトークン。
          type: string
      required:
      - token
      type: object
    VerifyPasswordResetTokenRequest:
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
      type: object
    VerifySubscriberTransferTokenRequest:
      properties:
        token:
          description: 譲渡用トークン。[Subscriber:issueSubscriberTransferToken API](#/Subscriber/issueSubscriberTransferToken)
            で譲渡用トークンを発行すると、譲渡先のオペレーターのプライマリーメールアドレスに送付されます。
          type: string
      required:
      - token
      type: object
    VerifySubscriberTransferTokenResponse:
      properties:
        transferredImsi:
          description: 譲渡された IoT SIM の IMSI のリスト。
          items:
            type: string
          type: array
      required:
      - transferredImsi
      type: object
    VirtualPrivateGateway:
      properties:
        allowedOperators:
          items:
            type: string
          type: array
        createdTime:
          description: VPG の作成日時 (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
        customerRoutes:
          additionalProperties:
            $ref: '#/components/schemas/CustomerRoute'
          description: VPG のルーティングテーブルエントリのリスト
          type: object
        deviceSubnetCidrRange:
          description: デバイスサブネット IP アドレスレンジ。
          type: string
        enableSimBasedRouting:
          type: boolean
        fixedIpAddressesEnabled:
          description: |
            固定グローバル IP アドレスオプション。

            - `true`: 有効
            - `false`: 無効
          type: boolean
        fixedPublicIpAddresses:
          items:
            type: string
          type: array
        gateOpened:
          description: |
            [Gate](/ja-jp/docs/gate/) の有効 / 無効。

            - `true`: 有効
            - `false`: 無効
          type: boolean
        gatePrivacySeparatorEnabled:
          type: boolean
        gateVxlanId:
          description: Gate の VXLAN ID。
          type: number
        implicitTerminationProtected:
          type: boolean
        inspection:
          $ref: '#/components/schemas/JunctionInspectionConfiguration'
        junctionEnabled:
          description: |
            [Junction](/ja-jp/docs/junction/) の有効 / 無効。

            - `true`: Junction のミラーリング設定、インスペクション設定、リダイレクション設定のいずれかを利用している。
            - `false`: Junction のミラーリング設定、インスペクション設定、リダイレクション設定を利用していない。
          type: boolean
        lastModifiedTime:
          description: VPG の更新日時 (UNIX 時間 (ミリ秒))。
          format: int64
          type: integer
        mirroring:
          properties:
            peers:
              additionalProperties:
                $ref: '#/components/schemas/JunctionMirroringPeer'
              type: object
          type: object
        offsetId:
          type: integer
        operatorId:
          description: オペレーター ID。
          type: string
        placement:
          $ref: '#/components/schemas/Placement'
        primaryServiceName:
          description: (非推奨) このプロパティは使用されていません。
          type: string
        redirection:
          $ref: '#/components/schemas/JunctionRedirectionConfiguration'
        routingFilterEntries:
          items:
            $ref: '#/components/schemas/RoutingFilterEntry'
          type: array
        sessionStats:
          properties:
            lastUpdatedAt:
              description: セッション数の集計日時 (UNIX 時間 (ミリ秒))。
              format: int64
              type: integer
            online:
              description: VPG を利用する IoT SIM とバーチャル SIM/Subscriber のうち、セッションが "オンライン"
                になっている IoT SIM とバーチャル SIM/Subscriber の数。なお、オンラインのセッション数は定期的に集計しているため、リアルタイムの数値ではありません。この数値が更新された日時は、lastUpdatedAt
                で確認できます。
              type: integer
          type: object
        simBasedRoutingConfig:
          additionalProperties:
            type: string
          type: object
        size:
          description: (非推奨) このプロパティは使用されていません。
          type: string
        soracomTransitGateway:
          $ref: '#/components/schemas/SoracomTransitGateway'
        soracomTransitGatewayPeeringConnections:
          additionalProperties:
            $ref: '#/components/schemas/TransitGatewayPeeringConnection'
          description: VPG に関連付けられた Transit Gateway ピアリング接続のマップ。
          type: object
        soracomTransitGatewayVpcAttachments:
          additionalProperties:
            $ref: '#/components/schemas/TransitGatewayVpcAttachment'
          description: VPG に関連する Transit Gateway VPC アタッチメントのマップ。
          type: object
        status:
          description: |
            VPG の状態。

            - `running`: 実行中。
          enum:
          - running
          type: string
        tags:
          $ref: '#/components/schemas/TagSet'
        transitGatewayAttachments:
          additionalProperties:
            $ref: '#/components/schemas/TransitGatewayAttachment'
          type: object
        type:
          description: |
            VPG のタイプ

            - `12`: Type-C
            - `13`: Type-D
            - `14`: Type-E
            - `15`: Type-F
            - `242`: Type-F2
          enum:
          - 12
          - 13
          - 14
          - 15
          - 242
          type: integer
        ueSubnetCidrRange:
          description: デバイスサブネット IP アドレスレンジ。
          type: string
        useInternetGateway:
          description: |
            インターネットゲートウェイの ON/OFF。

            - `true`: "ON"
            - `false`: OFF
          type: boolean
        virtualInterfaces:
          additionalProperties:
            type: string
          description: '[Direct](/ja-jp/docs/direct/) の設定。'
          type: object
        vpcPeeringConnections:
          additionalProperties:
            type: string
          description: '[Canal](/ja-jp/docs/canal/) の Amazon VPC ピアリング接続の設定。'
          type: object
        vpgId:
          description: VPG ID。
          type: string
        vpgSubnetCidrRange:
          description: VPG に割り当てられる IP アドレスの範囲です。SORACOM Door または SORACOM Direct を利用する際に必要です。
          type: string
        vpnConnections:
          additionalProperties:
            $ref: '#/components/schemas/VpnConnection'
          type: object
      type: object
    VolumeDiscountModel:
      description: Long term discount
      properties:
        contractTermMonth:
          default: 12
          description: 契約月数
          format: int32
          type: integer
        currency:
          description: 通貨
          enum:
          - JPY
          - USD
          - EUR
          type: string
        endDate:
          description: 適用終了日
          example: yyyyMMdd
          type: string
        initialCost:
          description: 初期費用
          format: double
          type: number
        quantity:
          description: 数量
          format: int32
          type: integer
        startDate:
          description: 適用開始日
          example: yyyyMMdd
          type: string
        taxIncludedInitialCost:
          description: 税込初期費用
          format: double
          type: number
        taxIncludedUnitPrice:
          description: 税込単価
          format: double
          type: number
        unitPrice:
          description: 単価
          format: double
          type: number
        volumeDiscountPaymentType:
          description: お支払い方法
          enum:
          - MONTHLY
          - PREPAYMENT
          type: string
        volumeDiscountType:
          description: 料金計算方法
          enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
          type: string
      type: object
    VpcPeeringConnection:
      properties:
        destinationCidrBlock:
          type: string
        id:
          type: string
        peerOwnerId:
          type: string
        peerVpcId:
          type: string
      type: object
    VpnConnection:
      properties:
        bgpAsn:
          type: string
        id:
          type: string
        useDynamicRouting:
          type: boolean
      type: object
  securitySchemes:
    api_key:
      in: header
      name: X-Soracom-API-Key
      type: apiKey
    api_token:
      in: header
      name: X-Soracom-Token
      type: apiKey
tags:
- description: '[監査ログ](/ja-jp/docs/api-audit-logs/)'
  name: AuditLog
- description: |
    - [API キーおよび API トークンの発行](/ja-jp/tools/api/key-and-token/)
    - パスワードリセットトークンの発行および検証
    - [スイッチユーザー](/ja-jp/docs/switch-user/) による API キーおよび API トークンの発行
  name: Auth
- description: '[利用料金 (支払明細)](/ja-jp/guides/accounting/check-usage/)'
  name: Billing
- description: '[基地局の位置情報](/ja-jp/docs/air/get-location-info/#基地局の位置情報を取得する)'
  name: CellLocation
- description: |
    - [クーポンコード](/ja-jp/guides/accounting/payment/register-coupon/)
    - [利用料金 (支払明細)](/ja-jp/guides/accounting/check-usage/)
    - [お支払い方法](/ja-jp/guides/accounting/payment/)
    - [長期利用割引](/ja-jp/docs/air/volume-discount/)
  name: Payment
- description: |
    - [クーポンコード](/ja-jp/guides/accounting/payment/register-coupon/)
    - [長期利用割引](/ja-jp/docs/air/volume-discount/)
    - 発注
    - 商品一覧
  name: Order
- description: |
    [認証情報ストア](/ja-jp/docs/credentials-store/)
    認証情報の作成、更新、削除
  name: Credential
- description: '[SORACOM Harvest Data](/ja-jp/docs/harvest/)'
  name: DataEntry
- description: '[SORACOM Inventory オブジェクトモデル](/ja-jp/docs/inventory/define-custom-object/)'
  name: DeviceObjectModel
- description: '[SORACOM Inventory デバイス](/ja-jp/docs/inventory/)'
  name: Device
- description: '[診断機能](/ja-jp/guides/diagnostic/)'
  name: Diagnostic
- description: '[イベントハンドラー](/ja-jp/docs/event-handler/)'
  name: EventHandler
- description: '[SORACOM Harvest Files](/ja-jp/docs/harvest/)'
  name: FileEntry
- description: |
    以下の API でエクスポートされたファイルのダウンロード
    - [Billing](#/Billing)
    - [Payment: exportPaymentStatement](#/Payment/exportPaymentStatement)
    - [Stats](#/Stats)
    - [Subscriber:exportSubscribers](#/Subscriber/exportSubscribers)
  name: Files
- description: Gadget API 対応デバイス<ul><li>[SORACOM LTE-M Button powered by AWS](/ja-jp/guides/soracom-lte-m-button-series/lte-m-button-aws/)</li><li>[ソラカメ専用セルラーパック](/ja-jp/guides/soracom-cloud-camera-services/setting-cellular-pack/)</li></ul>
  name: Gadget
- description: '[グループ設定](/ja-jp/docs/group-configuration/)'
  name: Group
- description: |
    [SORACOM Lagoon](/ja-jp/docs/lagoon-v2/)
    ユーザーやプランの制御
  name: Lagoon
- description: エラーログ
  name: Log
- description: '[SORACOM Air for LoRaWAN](/ja-jp/docs/air-for-lorawan/) デバイス'
  name: LoraDevice
- description: '[SORACOM Air for LoRaWAN](/ja-jp/docs/air-for-lorawan/) ゲートウェイ'
  name: LoraGateway
- description: '[SORACOM Air for LoRaWAN](/ja-jp/docs/air-for-lorawan/) ネットワークセット'
  name: LoraNetworkSet
- description: |
    - オペレータ
    - 登録情報の更新
    - パスワード変更
    - [多要素認証](/ja-jp/docs/mfa/)
  name: Operator
- description: '[メールアドレス](/ja-jp/docs/email/)'
  name: Email
- description: '[アクセス管理 (SORACOM Access Management)](/ja-jp/docs/sam/)'
  name: Role
- description: 直販での発送先住所に関する操作
  name: ShippingAddress
- description: '[Soracom Cloud Camera Services](/ja-jp/guides/soracom-cloud-camera-services/)'
  name: SoraCam
- description: '[メールアドレス](/ja-jp/docs/email/)'
  name: SystemNotification
- description: |
    - [アクセス管理 (SORACOM Access Management)](/ja-jp/docs/sam/)
    - パスワード変更
    - [多要素認証](/ja-jp/docs/mfa/)
    - [スイッチユーザー](/ja-jp/docs/switch-user/) の信頼ポリシーの設定
  name: User
- description: '[SORACOM Napter](/ja-jp/docs/napter/)'
  name: PortMapping
- description: SIM、SORACOM Inventory デバイス、Sigfox デバイスの検索
  name: Query
- description: '[SORACOM Air for Sigfox](/ja-jp/docs/air-for-sigfox/) デバイス'
  name: SigfoxDevice
- description: |
    [SORACOM Air for セルラー](/ja-jp/docs/air/) の SIM の情報取得、操作、解約

    (Subscriber と同等だがサブスクリプションコンテナに対応した新しい API)
  name: Sim
- description: '[eSIM プロファイル](/ja-jp/docs/air/provision-esim/)'
  name: SimProfileOrder
- description: '[SORACOM Orbit](/ja-jp/docs/orbit/) Soralet'
  name: Soralet
- description: '[通信量履歴](/ja-jp/docs/air/view-data-usage/) の取得'
  name: Stats
- description: '[SORACOM Air for セルラー](/ja-jp/docs/air/) の SIM の情報取得、操作、解約'
  name: Subscriber
- description: |
    - [Virtual Private Gateway (VPG)](/ja-jp/docs/vpg/) (Canal / Direct / Door / Gate)
    - [SORACOM Junction](/ja-jp/docs/junction/)
    - [SORACOM Peek](/ja-jp/docs/peek/)
  name: VirtualPrivateGateway
